<project default="cocoon:html-docs">

    <!-- Setup the filters -->
    <target name="cocoon:setup-filters">
    
    <property file="../cocoon.properties"/>
    
    <filter token="Name" value="Avalon ${Name}"/>
    <filter token="name" value="${dir-name}"/>
    <filter token="version" value="${version}"/>
    <filter token="year" value="${year}"/>
    <filter token="status" value="${status}"/>
    <filter token="release" value="${release}"/>
    <filter token="short-version" value="${short.version}"/>
      
    <!-- Skin filters -->
    <filter token="skin"              value="${use.skin}"/>
    <filter token="link1"             value="apache"/>
    <filter token="link1.href"        value="http://www.apache.org"/>
    <filter token="link2"             value="jakarta"/>
    <filter token="link2.href"        value="http://jakarta.apache.org"/>
    <filter token="link3"             value="avalon"/>
    <filter token="link3.href"        value="http://jakarta.apache.org/avalon/"/>
    <filter token="group-logo.src"    value="images/jakarta-logo.gif"/>
    <filter token="group-logo.href"   value="http://jakarta.apache.org/"/>
    <filter token="project-logo.src"  value="images/header.gif"/>                    
    <filter token="project-logo.href" value="http://jakarta.apache.org/avalon/"/>                    
    <filter token="year" value="2002"/>  
    <filter token="vendor" value="Apache Software Foundation"/>        

        <!-- Base pointers for non-xdocs documentation. Override these in .ant.properties to link to local docs -->
        <property name="avalon.base" value="http://jakarta.apache.org/avalon"/>
        <property name="framework.base" value="http://jakarta.apache.org/avalon/framework"/>
        <property name="excalibur.base" value="http://jakarta.apache.org/avalon/excalibur"/>
        <property name="phoenix.base" value="http://jakarta.apache.org/avalon/phoenix"/>
        <property name="cornerstone.base" value="http://jakarta.apache.org/avalon/cornerstone"/>
        <property name="logkit.base" value="http://jakarta.apache.org/avalon/logkit"/>
        <property name="apps.base" value="http://jakarta.apache.org/avalon/apps"/>
        <property name="testlet.base" value="http://jakarta.apache.org/avalon/testlet"/>

        <filter token="year" value="${year}"/>
        <filter token="AVALON_BASE" value="${avalon.base}"/>
        <filter token="FRAMEWORK_BASE" value="${framework.base}"/>
        <filter token="EXCALIBUR_BASE" value="${excalibur.base}"/>
        <filter token="PHOENIX_BASE" value="${phoenix.base}"/>
        <filter token="CORNERSTONE_BASE" value="${cornerstone.base}"/>
        <filter token="LOGKIT_BASE" value="${logkit.base}"/>
        <filter token="TESTLET_BASE" value="${testlet.base}"/>
        <filter token="APPS_BASE" value="${apps.base}"/>
        
    </target>
    
    <target name="cocoon:setup-html-docs" depends="cocoon:setup-filters" description="generates the xdocs-based documentation">

        <mkdir dir="${build.dir}"/>
        <mkdir dir="${cocoon.build.context}"/>
        <mkdir dir="${cocoon.build.docs}"/>
        <mkdir dir="${cocoon.build.xdocs}"/>
        <mkdir dir="${cocoon.work}"/>
        
        <!-- We need to be careful about binary files when using filtering! -->
        <copy todir="${cocoon.build.context}" overwrite="true" filtering="on">
            <fileset dir="${cocoon.main.context.dir}">
                <exclude name="**/*.ico"/>
                <exclude name="**/*.gif"/>
                <exclude name="**/*.jpg"/>
                <exclude name="**/*.png"/>
            </fileset>
        </copy>

        <copy todir="${cocoon.build.context}" filtering="off">
            <fileset dir="${cocoon.main.context.dir}">
                <include name="**/*.ico"/>
                <include name="**/*.gif"/>
                <include name="**/*.jpg"/>
                <include name="**/*.png"/>
            </fileset>
        </copy>
        
        <copy todir="${cocoon.build.xdocs}" filtering="on" overwrite="true">
            <fileset dir="${cocoon.xdocs.dir}">
                <exclude name="**/*.ico"/>
                <exclude name="**/*.gif"/>
                <exclude name="**/*.jpg"/>
                <exclude name="**/*.png"/>
            </fileset>
        </copy>
        <copy todir="${cocoon.build.xdocs}" filtering="off">
            <fileset dir="${cocoon.xdocs.dir}">
                <include name="**/*.ico"/>
                <include name="**/*.gif"/>
                <include name="**/*.jpg"/>
                <include name="**/*.png"/>
            </fileset>
        </copy>

        <copy file="${cocoon.main.context.dir}/resources/schema/CatalogManager.properties" 
              todir="${cocoon.build.context}/resources/schema" filtering="off"/>
                
    </target>
  
    <target name="cocoon:html-listed-docs" depends="cocoon:setup-html-docs" description="generates the xdocs-based documentation">

        <echo message="-------------------------------------------------------------"/>
        <echo message="  Building docs from list, please stand by ..."/>
                
        <java classname="org.apache.cocoon.Main" fork="true" maxmemory="128m" failonerror="true">
            <arg value="-c${cocoon.build.context}/"/>
            <arg value="-k${cocoon.build.context}/logkit.xconf"/>
            <arg value="-d${cocoon.build.docs}"/>
            <arg value="-w${cocoon.work}"/>
            <arg value="-l${cocoon.work}/cocoon.log"/>
            <arg value="-b${build.dir}/brokenlinks.txt"/>
            <arg value="-uERROR"/>
            <arg value="-f./build/content/xdocs/doc.uris"/>
            <arg value="-rno"/>            
            <classpath>
                <path refid="tools.class.path"/>
                <fileset dir="${tools.dir}/ext"/>
            </classpath>
        </java>


       <echo message="  ...docs generated succesfully in ./build/docs dir."/>
       <echo message="-------------------------------------------------------------"/>
    
    </target>
    
    <target name="cocoon:html-docs" depends="cocoon:setup-html-docs" description="generates the xdocs-based documentation">

        <echo message="-------------------------------------------------------------"/>
        <echo message="  Crawling docs, please stand by ..."/>
                
        <java classname="org.apache.cocoon.Main" fork="true" maxmemory="128m" failonerror="true">
            <arg value="-c${cocoon.build.context}/"/>
            <arg value="-d${cocoon.build.docs}"/>
            <arg value="-k${cocoon.build.context}/logkit.xconf"/>
            <arg value="-w${cocoon.work}"/>
            <arg value="-l${cocoon.work}/cocoon.log"/>
            <arg value="-b${build.dir}/brokenlinks.txt"/>            
            <arg value="-uERROR"/>
            <arg value="index.html"/>
            <classpath>
              <path id="tools.class.path">
                <pathelement location="${junit.jar}"/>
                <pathelement location="${tools.jar}"/>
                <fileset dir="${tools.dir}/lib"/>
                <fileset dir="${tools.dir}/ext"/>
              </path>
            </classpath>
        </java>


       <echo message="  ...docs generated succesfully in ./build/docs dir."/>
       <echo message="-------------------------------------------------------------"/>
    
    </target>  
    
</project>      
