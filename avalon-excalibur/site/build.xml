<?xml version="1.0"?>

<project default="docs" basedir=".">

  <!--
    Give user a chance to override without editing this file
    (and without typing -D each time he compiles it)
  -->
  <property file=".ant.properties"/>
  <property file="${user.home}/.ant.properties"/>
  <property file="${default.properties}"/>

  <property name="name" value="excalibur"/>
  <property name="Name" value="Excalibur"/>
  <property name="year" value="1999-2002"/>

  <!-- Set the properties for intermediate directory -->
  <property name="build.dir" value="build"/>
  <property name="build.lib" value="${build.dir}/lib"/>
  <property name="build.src" value="${build.dir}/src"/>

  <!-- Set the properties for source directories -->
  <property name="src.dir" value="src"/>
  <property name="java.dir" value="${src.dir}/java"/>
  <property name="manifest.dir" value="${src.dir}/manifest"/>
  <property name="conf.dir" value="${src.dir}/conf"/>
  <property name="docs.dir" value="dist/docs"/>
  <property name="www.dir" value="../../jakarta-avalon-site/docs"/>  
  
  <property name="build.xdocs" value="${build.dir}/xdocs"/>
  <property name="build.context" value="${build.dir}/documentation"/>
  <property name="build.docs" value="${build.dir}/docs"/>
  <property name="tools.dir" value="../../jakarta-avalon/tools"/> 
  <property name="xdocs.dir" value="${src.dir}/xdocs"/>  
  <property name="context.dir" value="../../jakarta-avalon/src/documentation"/>
  <property name="tools.jar" value="${java.home}/../lib/tools.jar"/>

  <property name="dist.base" value="distributions"/>

  <property file="${basedir}/../cocoon.properties"/>
  
  <path id="tools.class.path">
    <pathelement location="${junit.jar}"/>
    <pathelement location="${tools.jar}"/>
    <fileset dir="${tools.dir}/lib"/>
    <fileset dir="${tools.dir}/ext"/>
  </path>

  <!-- Help on usage -->
  <target name="help" depends="usage"/>
  <target name="usage">
    <echo message="Run ant -projecthelp to get a list of targets to run"/>
  </target>

  <!-- Setup the filters -->
  <target name="setup-filters">
    <filter token="Name" value="Avalon Excalibur"/>
    <filter token="name" value="excalibur"/>
    <filter token="year" value="${year}"/>
    <filter token="status" value="${status}"/>
    <filter token="release" value="${release}"/>
    <filter token="short-version" value="${short.version}"/>

    <property name="avalon.base" value="http://jakarta.apache.org/avalon"/>
    <property name="framework.base" value="http://jakarta.apache.org/avalon/framework"/>
    <property name="phoenix.base" value="http://jakarta.apache.org/avalon/phoenix"/>
    <property name="cornerstone.base" value="http://jakarta.apache.org/avalon/cornerstone"/>
    <property name="logkit.base" value="http://jakarta.apache.org/avalon/logkit"/>
    <property name="testlet.base" value="http://jakarta.apache.org/avalon/testlet"/>

    <filter token="year" value="${year}"/>
    <filter token="AVALON_BASE" value="${avalon.base}"/>
    <filter token="FRAMEWORK_BASE" value="${framework.base}"/>
    <filter token="PHOENIX_BASE" value="${phoenix.base}"/>
    <filter token="CORNERSTONE_BASE" value="${cornerstone.base}"/>
    <filter token="LOGKIT_BASE" value="${logkit.base}"/>
    <filter token="TESTLET_BASE" value="${testlet.base}"/>
  </target>


  <target name="clean" description="Cleans up artifacts from build process">
    <delete dir="${build.dir}" />
    <delete>
      <fileset dir="." includes="**/*~" defaultexcludes="no"/>
    </delete>
  </target>
  
  <!-- Prepares the documentation directory -->
  <target name="docs" depends="setup-filters" description="Generates the Docs">
    <copy todir="${cocoon.build.xdocs}/altrmi"><fileset dir="${basedir}/../altrmi/src/xdocs"/></copy>
    <copy todir="${cocoon.build.xdocs}/assembly"><fileset dir="${basedir}/../assembly/src/xdocs"/></copy>
    <copy todir="${cocoon.build.xdocs}/baxter"><fileset dir="${basedir}/../baxter/src/xdocs"/></copy>
    <copy todir="${cocoon.build.xdocs}/bzip2"><fileset dir="${basedir}/../bzip2/src/xdocs"/></copy>
    <copy todir="${cocoon.build.xdocs}/cache"><fileset dir="${basedir}/../cache/src/xdocs"/></copy>
    <copy todir="${cocoon.build.xdocs}/cli"><fileset dir="${basedir}/../cli/src/xdocs"/></copy>
    <copy todir="${cocoon.build.xdocs}/collections"><fileset dir="${basedir}/../collections/src/xdocs"/></copy>
    <copy todir="${cocoon.build.xdocs}/component"><fileset dir="${basedir}/../component/src/xdocs"/></copy>
    <copy todir="${cocoon.build.xdocs}/concurrent"><fileset dir="${basedir}/../concurrent/src/xdocs"/></copy>
    <copy todir="${cocoon.build.xdocs}/configuration"><fileset dir="${basedir}/../configuration/src/xdocs"/></copy>
    <copy todir="${cocoon.build.xdocs}/containerkit"><fileset dir="${basedir}/../containerkit/src/xdocs"/></copy>
    <copy todir="${cocoon.build.xdocs}/converter"><fileset dir="${basedir}/../converter/src/xdocs"/></copy>
    <copy todir="${cocoon.build.xdocs}/datasource"><fileset dir="${basedir}/../datasource/src/xdocs"/></copy>
    <copy todir="${cocoon.build.xdocs}/event"><fileset dir="${basedir}/../event/src/xdocs"/></copy>
    <copy todir="${cocoon.build.xdocs}/extension"><fileset dir="${basedir}/../extension/src/xdocs"/></copy>
    <copy todir="${cocoon.build.xdocs}/fortress"><fileset dir="${basedir}/../fortress/src/xdocs"/></copy>
    <copy todir="${cocoon.build.xdocs}/i18n"><fileset dir="${basedir}/../i18n/src/xdocs"/></copy>
    <copy todir="${cocoon.build.xdocs}/instrument"><fileset dir="${basedir}/../instrument/src/xdocs"/></copy>
    <copy todir="${cocoon.build.xdocs}/instrument-client"><fileset dir="${basedir}/../instrument-client/src/xdocs"/></copy>
    <copy todir="${cocoon.build.xdocs}/instrument-manager"><fileset dir="${basedir}/../instrument-manager/src/xdocs"/></copy>
    <copy todir="${cocoon.build.xdocs}/io"><fileset dir="${basedir}/../io/src/xdocs"/></copy>
    <copy todir="${cocoon.build.xdocs}/jprocess"><fileset dir="${basedir}/../jprocess/src/xdocs"/></copy>
    <copy todir="${cocoon.build.xdocs}/logger"><fileset dir="${basedir}/../logger/src/xdocs"/></copy>
    <copy todir="${cocoon.build.xdocs}/merlin"><fileset dir="${basedir}/../merlin/src/xdocs"/></copy>
    <copy todir="${cocoon.build.xdocs}/microcontainer"><fileset dir="${basedir}/../microcontainer/src/xdocs"/></copy>
    <copy todir="${cocoon.build.xdocs}/monitor"><fileset dir="${basedir}/../monitor/src/xdocs"/></copy>
    <copy todir="${cocoon.build.xdocs}/naming"><fileset dir="${basedir}/../naming/src/xdocs"/></copy>
    <copy todir="${cocoon.build.xdocs}/pool"><fileset dir="${basedir}/../pool/src/xdocs"/></copy>
    <copy todir="${cocoon.build.xdocs}/sourceresolve"><fileset dir="${basedir}/../sourceresolve/src/xdocs"/></copy>
    <copy todir="${cocoon.build.xdocs}/store"><fileset dir="${basedir}/../store/src/xdocs"/></copy>
    <copy todir="${cocoon.build.xdocs}/tar"><fileset dir="${basedir}/../tar/src/xdocs"/></copy>
    <copy todir="${cocoon.build.xdocs}/testcase"><fileset dir="${basedir}/../testcase/src/xdocs"/></copy>
    <copy todir="${cocoon.build.xdocs}/thread"><fileset dir="${basedir}/../thread/src/xdocs"/></copy>
    <copy todir="${cocoon.build.xdocs}/threadcontext"><fileset dir="${basedir}/../threadcontext/src/xdocs"/></copy>
    <copy todir="${cocoon.build.xdocs}/tweety"><fileset dir="${basedir}/../tweety/src/xdocs"/></copy>
    <copy todir="${cocoon.build.xdocs}/util"><fileset dir="${basedir}/../util/src/xdocs"/></copy>
    <copy todir="${cocoon.build.xdocs}/xmlbundle"><fileset dir="${basedir}/../xmlbundle/src/xdocs"/></copy>
    <copy todir="${cocoon.build.xdocs}/xmlutil"><fileset dir="${basedir}/../xmlutil/src/xdocs"/></copy>
    <copy todir="${cocoon.build.xdocs}/zip"><fileset dir="${basedir}/../zip/src/xdocs"/></copy>

    <ant antfile="${basedir}/../cocoonbuild.xml"/>
    <!--    <mkdir dir="${docs.dir}"/>

    <mkdir dir="${build.context}"/>
    <mkdir dir="${build.xdocs}"/>
    <mkdir dir="${build.docs}"/>
    <mkdir dir="${build.docs}/apps"/>  
    <mkdir dir="${build.dir}/work"/>
    -->
    <!-- Base pointers for non-xdocs documentation. Override these in .ant.properties to link to local docs -->
    <!--    <copy todir="${build.context}" filtering="on">
      <fileset dir="${context.dir}">
        <exclude name="diagrams/**"/>
        <exclude name="resources/**"/>
        <exclude name="xdocs"/>
      </fileset>
    </copy>

    <copy todir="${build.context}/xdocs" filtering="on" overwrite="yes">
      <fileset dir="${xdocs.dir}"/>
    </copy>

    <copy todir="${build.context}/resources" filtering="off" overwrite="yes">
      <fileset dir="${context.dir}/resources"/>
      <fileset dir="${xdocs.dir}">
        <include name="**/images/**"/>
      </fileset>
    </copy>

    <java classname="org.apache.cocoon.Main" fork="true">
      <arg value="-c${build.context}/"/>
      <arg value="-d${build.docs}"/>
      <arg value="-w${build.dir}/work"/>
      <arg value="-l${build.dir}/work/cocoon.log"/>
      <arg value="-uINFO"/>
      <arg value="-f${xdocs.dir}/excalibur.uris"/>
      <classpath>
        <path refid="tools.class.path"/>
        <fileset dir="${tools.dir}/ext"/>
      </classpath>
    </java>

    <copy todir="${docs.dir}">
      <fileset dir="${build.docs}">
        <include name="**"/>
      </fileset>
    </copy>    
    -->
  </target>
  
  <target name="site" depends="docs" description="Places Docs ready for hosting on website">    
  
  </target>     
  
  <!-- Update the www directory -->
  <target name="site-docs" depends="site">

    <mkdir dir="${www.dir}/excalibur"/>

    <!-- delete all old documents but keep CVS directories -->
    <!-- note that by doing an include the defaultexcludes (CVS dirs) will be kept -->
    <delete>
      <fileset dir="${www.dir}">
        <include name="excalibur/**"/>
      </fileset>
    </delete>


    <copy todir="${www.dir}/excalibur">
      <fileset dir="${docs.dir}" />
    </copy>

  </target>      
    
</project>
