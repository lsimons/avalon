<?xml version="1.0"?>

<project default="docs" basedir=".">

  <!--
    Give user a chance to override without editing this file
    (and without typing -D each time he compiles it)
  -->
  <property file=".ant.properties"/>
  <property file="${user.home}/.ant.properties"/>

  <property name="name" value="excalibur"/>
  <property name="Name" value="Excalibur"/>
  <property name="year" value="1999-2002"/>

  <!-- Set the properties for intermediate directory -->
  <property name="build.dir" value="build"/>
  <property name="build.lib" value="${build.dir}/lib"/>
  <property name="build.src" value="${build.dir}/src"/>

  <!-- Set the properties for source directories -->
  <property name="src.dir" value="src"/>
  <property name="java.dir" value="${src.dir}/java"/>
  <property name="manifest.dir" value="${src.dir}/manifest"/>
  <property name="conf.dir" value="${src.dir}/conf"/>
  <property name="docs.dir" value="docs"/>
  <property name="www.dir" value="../../jakarta-avalon-site/docs"/>  
  
  <property name="build.xdocs" value="${build.dir}/xdocs"/>
  <property name="build.context" value="${build.dir}/documentation"/>
  <property name="build.docs" value="${build.dir}/docs"/>
  <property name="tools.dir" value="../../jakarta-avalon/tools"/> 
  <property name="xdocs.dir" value="${src.dir}/xdocs"/>  
  <property name="context.dir" value="../../jakarta-avalon/src/documentation"/>
  <property name="tools.jar" value="${java.home}/../lib/tools.jar"/>

  <property name="dist.base" value="distributions"/>

  <path id="tools.class.path">
    <pathelement location="${junit.jar}"/>
    <pathelement location="${tools.jar}"/>
    <fileset dir="${tools.dir}/lib"/>
    <fileset dir="${tools.dir}/ext"/>
  </path>

  <!-- Help on usage -->
  <target name="help" depends="usage"/>
  <target name="usage">
    <echo message="Run ant -projecthelp to get a list of targets to run"/>
  </target>

  <!-- Setup the filters -->
  <target name="setup-filters">
    <filter token="Name" value="Avalon Excalibur"/>
    <filter token="name" value="excalibur"/>
    <filter token="year" value="${year}"/>
    <filter token="status" value="${status}"/>
    <filter token="release" value="${release}"/>
    <filter token="short-version" value="${short.version}"/>

    <property name="avalon.base" value="http://jakarta.apache.org/avalon"/>
    <property name="framework.base" value="http://jakarta.apache.org/avalon/framework"/>
    <property name="phoenix.base" value="http://jakarta.apache.org/avalon/phoenix"/>
    <property name="cornerstone.base" value="http://jakarta.apache.org/avalon/cornerstone"/>
    <property name="logkit.base" value="http://jakarta.apache.org/avalon/logkit"/>
    <property name="testlet.base" value="http://jakarta.apache.org/avalon/testlet"/>

    <filter token="year" value="${year}"/>
    <filter token="AVALON_BASE" value="${avalon.base}"/>
    <filter token="FRAMEWORK_BASE" value="${framework.base}"/>
    <filter token="PHOENIX_BASE" value="${phoenix.base}"/>
    <filter token="CORNERSTONE_BASE" value="${cornerstone.base}"/>
    <filter token="LOGKIT_BASE" value="${logkit.base}"/>
    <filter token="TESTLET_BASE" value="${testlet.base}"/>
  </target>


  <target name="clean" description="Cleans up artifacts from build process">
    <delete dir="${build.dir}" />
    <delete>
      <fileset dir="." includes="**/*~" defaultexcludes="no"/>
    </delete>
  </target>
  
  <!-- Prepares the documentation directory -->
  <target name="docs" depends="setup-filters" description="Generates the Docs">
    <mkdir dir="${docs.dir}"/>

    <mkdir dir="${build.context}"/>
    <mkdir dir="${build.xdocs}"/>
    <mkdir dir="${build.docs}"/>
    <mkdir dir="${build.docs}/apps"/>  
    <mkdir dir="${build.dir}/work"/>

    <!-- Base pointers for non-xdocs documentation. Override these in .ant.properties to link to local docs -->
    <copy todir="${build.context}" filtering="on">
      <fileset dir="${context.dir}">
        <exclude name="diagrams/**"/>
        <exclude name="resources/**"/>
        <exclude name="xdocs"/>
      </fileset>
    </copy>

    <copy todir="${build.context}/xdocs" filtering="on" overwrite="yes">
      <fileset dir="${xdocs.dir}"/>
    </copy>

    <copy todir="${build.context}/resources" filtering="off" overwrite="yes">
      <fileset dir="${context.dir}/resources"/>
      <fileset dir="${xdocs.dir}">
        <include name="**/images/**"/>
      </fileset>
    </copy>

    <java classname="org.apache.cocoon.Main" fork="true">
      <arg value="-c${build.context}/"/>
      <arg value="-d${build.docs}"/>
      <arg value="-w${build.dir}/work"/>
      <arg value="-l${build.dir}/work/cocoon.log"/>
      <arg value="-uINFO"/>
      <arg value="-f${xdocs.dir}/excalibur.uris"/>
      <classpath>
        <path refid="tools.class.path"/>
        <fileset dir="${tools.dir}/ext"/>
      </classpath>
    </java>

    <copy todir="docs">
      <fileset dir="${build.docs}">
        <include name="**"/>
      </fileset>
    </copy>    
    
  </target>
  
  <target name="site" depends="docs" description="Places Docs ready for hosting on website">  
  
    <ant dir="../altrmi/" target="site"/>  
    <!-- TODO the rest -->
  
  </target>   
  
  <!-- Update the www directory -->
  <target name="site-docs" depends="site">

    <mkdir dir="${www.dir}/excalibur"/>

    <!-- delete all old documents but keep CVS directories -->
    <!-- note that by doing an include the defaultexcludes (CVS dirs) will be kept -->
    <delete>
      <fileset dir="${www.dir}">
        <include name="excalibur/**"/>
      </fileset>
    </delete>


    <copy todir="${www.dir}/excalibur">
      <fileset dir="${docs.dir}" />
    </copy>

  </target>      
    
</project>
