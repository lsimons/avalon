<?xml version="1.0"?>

<!--

 The excalibur site right now is built using a variety of tools, including our own
 custom cocoon installed by Nicola and good ol' anakia. One thing that's pretty annoying
 about this setup is that it generates lots of images/ and skin/ directories all containing
 the same file. I've fixed this by hand by replacing the relative paths with absolute
 paths, and by removing all images/ and skin/ directories manually. As such, these documents
 are usuable on avalon.apache.org only, and not for local browsing.

-->
<project name="Excalibur Site" default="docs" basedir=".">

  <!--
    Give user a chance to override without editing this file
    (and without typing -D each time he compiles it)
  -->
  <property file=".ant.properties"/>
  <property file="${user.home}/.ant.properties"/>
  <property file="${default.properties}"/>

  <property name="name" value="excalibur"/>
  <property name="Name" value="Excalibur"/>
  <property name="year" value="1999-2002"/>

  <!-- Set the properties for intermediate directory -->
  <property name="build.dir" value="build"/>
  <property name="build.lib" value="${build.dir}/lib"/>
  <property name="build.src" value="${build.dir}/src"/>

  <!-- Set the properties for source directories -->
  <property name="src.dir" value="src"/>
  <property name="java.dir" value="${src.dir}/java"/>
  <property name="manifest.dir" value="${src.dir}/manifest"/>
  <property name="conf.dir" value="${src.dir}/conf"/>
  <property name="docs.dir" value="dist/docs"/>
  <property name="www.dir" value="../../avalon-site/docs"/>
  
  <property name="build.xdocs" value="${build.dir}/xdocs"/>
  <property name="build.context" value="${build.dir}/documentation"/>
  <property name="build.docs" value="${build.dir}/docs"/>
  <property name="tools.dir" value="../../avalon/tools"/>
  <property name="xdocs.dir" value="${src.dir}/xdocs"/>  
  <property name="context.dir" value="../../avalon/src/documentation"/>
  <property name="tools.jar" value="${java.home}/../lib/tools.jar"/>

  <property name="dist.base" value="distributions"/>

  <property file="${basedir}/../cocoon.properties"/>
  
  <path id="tools.class.path">
    <pathelement location="${junit.jar}"/>
    <pathelement location="${tools.jar}"/>
    <fileset dir="${tools.dir}/lib"/>
    <fileset dir="${tools.dir}/ext"/>
  </path>

  <!-- Help on usage -->
  <target name="help" depends="usage"/>
  <target name="usage">
    <echo message="Run ant -projecthelp to get a list of targets to run"/>
  </target>

  <!-- Setup the filters -->
  <target name="setup-filters">
    <filter token="Name" value="Avalon Excalibur"/>
    <filter token="name" value="excalibur"/>
    <filter token="year" value="${year}"/>
    <filter token="status" value="${status}"/>
    <filter token="release" value="${release}"/>
    <filter token="short-version" value="${short.version}"/>

    <property name="avalon.base" value="http://jakarta.apache.org/avalon"/>
    <property name="framework.base" value="http://jakarta.apache.org/avalon/framework"/>
    <property name="phoenix.base" value="http://jakarta.apache.org/avalon/phoenix"/>
    <property name="cornerstone.base" value="http://jakarta.apache.org/avalon/cornerstone"/>
    <property name="logkit.base" value="http://jakarta.apache.org/avalon/logkit"/>
    <property name="testlet.base" value="http://jakarta.apache.org/avalon/testlet"/>

    <filter token="year" value="${year}"/>
    <filter token="AVALON_BASE" value="${avalon.base}"/>
    <filter token="FRAMEWORK_BASE" value="${framework.base}"/>
    <filter token="PHOENIX_BASE" value="${phoenix.base}"/>
    <filter token="CORNERSTONE_BASE" value="${cornerstone.base}"/>
    <filter token="LOGKIT_BASE" value="${logkit.base}"/>
    <filter token="TESTLET_BASE" value="${testlet.base}"/>
  </target>


  <target name="clean" description="Cleans up artifacts from build process">
    <delete dir="${build.dir}" />
    <delete>
      <fileset dir="." includes="**/*~" defaultexcludes="no"/>
    </delete>
  </target>

  <target name="setup-docs" depends="setup-filters">
  <echo>cbs ${cocoon.build.xdocs}</echo>
    <copy todir="${cocoon.build.xdocs}/site"><fileset dir="${basedir}/src/xdocs"/></copy>
  </target>
  
  <!-- Prepares the documentation directory  -->
  <target name="docs" depends="setup-docs" description="Generates the Docs">

    <mkdir dir="${docs.dir}"/>

    <mkdir dir="${build.context}"/>
    <mkdir dir="${build.xdocs}"/>
    <mkdir dir="${build.docs}"/>
    <mkdir dir="${build.docs}/apps"/>  
    <mkdir dir="${build.dir}/work"/>

    <ant antfile="${basedir}/../cocoonbuild.xml"/>

    <replace dir="${build.docs}" token="http://a/" value="">
      <include name="**/*.html"/>
    </replace>

    <copy todir="${docs.dir}">
      <fileset dir="${build.docs}">
        <include name="**"/>
      </fileset>
    </copy>    
  </target>
  
  <target name="site" depends="docs" description="Places Docs ready for hosting on website">    
<!-- generated the list below using

find .. -maxdepth 1 -mindepth 1 -type d \
        ! -name CVS ! -name site ! -name csframework
        ! -name lib ! -name tools ! -name template-product \
        -exec echo \<ant dir=\"\{\}\" target=\"site\" inheritAll=\"false\"/\> \;

-->
<ant dir="../altrmi" target="site" inheritAll="false"/>
<ant dir="../baxter" target="site" inheritAll="false"/>
<ant dir="../cache" target="site" inheritAll="false"/>
<ant dir="../cli" target="site" inheritAll="false"/>
<ant dir="../collections" target="site" inheritAll="false"/>
<ant dir="../component" target="site" inheritAll="false"/>
<ant dir="../concurrent" target="site" inheritAll="false"/>
<ant dir="../configuration" target="site" inheritAll="false"/>
<ant dir="../container" target="site" inheritAll="false"/>
<ant dir="../converter" target="site" inheritAll="false"/>
<ant dir="../datasource" target="site" inheritAll="false"/>
<ant dir="../event" target="site" inheritAll="false"/>
<ant dir="../extension" target="site" inheritAll="false"/>
<ant dir="../fortress" target="site" inheritAll="false"/>
<ant dir="../i18n" target="site" inheritAll="false"/>
<ant dir="../instrument" target="site" inheritAll="false"/>
<ant dir="../instrument-client" target="site" inheritAll="false"/>
<ant dir="../instrument-manager" target="site" inheritAll="false"/>
<ant dir="../io" target="site" inheritAll="false"/>
<ant dir="../jprocess" target="site" inheritAll="false"/>
<ant dir="../loader" target="site" inheritAll="false"/>
<ant dir="../logger" target="site" inheritAll="false"/>
<ant dir="../meta" target="site" inheritAll="false"/>
<ant dir="../monitor" target="site" inheritAll="false"/>
<ant dir="../naming" target="site" inheritAll="false"/>
<ant dir="../policy" target="site" inheritAll="false"/>
<ant dir="../pool" target="site" inheritAll="false"/>
<ant dir="../sourceresolve" target="site" inheritAll="false"/>
<ant dir="../store" target="site" inheritAll="false"/>
<ant dir="../testcase" target="site" inheritAll="false"/>
<ant dir="../thread" target="site" inheritAll="false"/>
<ant dir="../threadcontext" target="site" inheritAll="false"/>
<ant dir="../util" target="site" inheritAll="false"/>
<ant dir="../xfc" target="site" inheritAll="false"/>
<ant dir="../xmlutil" target="site" inheritAll="false"/>
  </target>
  
  <target name="site2" depends="docs" description="Places Docs ready for hosting on website">    
  
  </target>     
  
  <!-- Update the www directory -->
  <target name="site-docs" depends="site">

    <mkdir dir="${www.dir}/excalibur"/>

    <!-- delete all old documents but keep CVS directories -->
    <!-- note that by doing an include the defaultexcludes (CVS dirs) will be kept -->
    <delete>
      <fileset dir="${www.dir}">
        <include name="excalibur/**"/>
      </fileset>
    </delete>


    <copy todir="${www.dir}/excalibur">
      <fileset dir="${docs.dir}" />
    </copy>

  </target>      
    
</project>
