<components>
	<component
		logger="factory"
		role="org.apache.excalibur.event.socket.tcp.AsyncSocketFactory"
		id="factory"
		class="org.apache.excalibur.event.socket.tcp.DefaultAsyncSocketFactory"
		handler="org.apache.excalibur.fortress.handler.ThreadSafeComponentHandler">
	</component> 
	<component
		logger="send"
		role="org.apache.excalibur.event.seda.example2.Sender"
		id="send"
		class="org.apache.excalibur.event.seda.example2.DefaultSender"
		handler="org.apache.excalibur.fortress.handler.ThreadSafeComponentHandler">
	</component> 
	<component
	    logger="selector"
		role="org.apache.excalibur.nbio.AsyncConnectionManager"
		id="selector"
		class="org.apache.excalibur.nbio.NIOAsyncConnectionManager"
		handler="org.apache.excalibur.fortress.handler.ThreadSafeComponentHandler">
	</component> 
	<component
	    logger="socket"
		role="org.apache.excalibur.event.socket.tcp.AsyncSocketHandler"
		id="socket"
		class="org.apache.excalibur.event.socket.tcp.DefaultAsyncSocketHandler"
		handler="org.apache.excalibur.fortress.handler.ThreadSafeComponentHandler">
			<sinks write-sink="write-stage" read-sink="read-stage" />
	</component> 
 	<component
	    logger="manager"
		role="org.apache.excalibur.event.seda.StageManager"
		id="manager"
		class="org.apache.excalibur.event.seda.DefaultStageManager"
		handler="org.apache.excalibur.fortress.handler.ThreadSafeComponentHandler"
			
			thread-manager="TPC" 
			processors="1" 
			threads="1" >
 
		     <stage name="send-stage">
		       <handlers>
		         <service role="org.apache.excalibur.event.seda.example2.Sender">
		       	   <handler interface="org.apache.excalibur.event.seda.example2.Sender" />
		         </service>
		       </handlers>
	           <queue type="VARIABLE">
	             <!--<predicate type="THRESHOLD" threshold="800"/>-->
	           </queue>
		     </stage>

		     <stage name="write-stage">
		       <handlers>
		         <service role="org.apache.excalibur.event.socket.tcp.AsyncSocketHandler">
		       	   <handler signature="close" type="org.apache.excalibur.event.socket.CloseRequest" />
		       	   <handler signature="connect" type="org.apache.excalibur.event.socket.tcp.ConnectRequest" />
		       	   <handler signature="flush" type="org.apache.excalibur.event.socket.FlushRequest" />
		       	   <handler signature="write" type="org.apache.excalibur.nbio.AsyncSelection" />
		       	   <handler signature="startWrite" type="org.apache.excalibur.event.socket.WriteRequest" />
		         </service>
		       </handlers>
	           <queue type="VARIABLE">
	             <!--<predicate type="THRESHOLD" threshold="800"/>-->
	           </queue>
		       <sink-map> 
		         <sink stage-name="write-stage"/>
		         <sink stage-name="read-stage"/>
		         <sink stage-name="listen-stage"/>
		       </sink-map> 
		     </stage>
		     
		     <stage name="read-stage">
		       <handlers>
		         <service role="org.apache.excalibur.event.socket.tcp.AsyncSocketHandler">
		       	   <handler signature="close" type="org.apache.excalibur.event.socket.CloseRequest" />
		       	   <handler signature="read" type="org.apache.excalibur.nbio.AsyncSelection" />
		       	   <handler signature="startRead" type="org.apache.excalibur.event.socket.ReadRequest" />
		         </service>
		       </handlers>
	           <queue type="VARIABLE">
	             <!--<predicate type="THRESHOLD" threshold="800"/>-->
	           </queue>
		       <sink-map> 
		         <sink stage-name="write-stage"/>
		         <sink stage-name="read-stage"/>
		         <sink stage-name="listen-stage"/>
		       </sink-map> 
		     </stage>
		   
 	</component>
</components>
