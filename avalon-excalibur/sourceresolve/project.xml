<?xml version="1.0" encoding="UTF-8"?>

<project>
    <extend>${basedir}/../project.xml</extend>

    <name>Excalibur Sourceresolve</name>
    <id>excalibur-sourceresolve</id>
    <currentVersion>1.0.2-dev</currentVersion>
    <inceptionYear>1997</inceptionYear>
    <shortDescription>A utility for finding resources given an URI</shortDescription>
    <description>
        A very common problem is resolving a source, which means
        finding a source using a URI. The source resolver of Avalon
        Excalibur is a component helping you in this task. It
        resolves sources from a given URI. The URI can use all
        available protocols of the JRE.
        In addition own protocols can be plugged-in. So using
        the standard protocols like HTTP, FTP or file can be handled
        in the same way, like dealing with custom, self-build
        protocols such as myxmldatabase://root/documents/test.xml.
    </description>
    <package>org.apache.excalibur</package>

    <dependencies>
        <dependency>
            <id>avalon-framework</id>
            <version>4.1.4</version>
            <groupId>framework</groupId>
        </dependency>
        <dependency>
            <id>commons-httpclient</id>
            <version>2.0-rc2</version>
        </dependency>
        <dependency>
            <id>jsse</id>
            <version>1.0.3_02</version>
        </dependency>
        <dependency>
            <id>xml-commons-resolver</id>
            <version>1.0</version>
        </dependency>
        <dependency>
            <!-- for testing only -->
            <id>commons-logging</id>
            <version>1.0.2</version>
        </dependency>
        <dependency>
            <!-- for metadata generation only -->
            <id>excalibur-fortress-tools</id>
            <version>1.0</version>
            <groupId>excalibur-fortress</groupId>
        </dependency>
        <dependency>
            <!-- for metadata generation only -->
            <id>qdox</id>
            <version>1.1</version>
        </dependency>
    </dependencies>
</project>
