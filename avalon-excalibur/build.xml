<project name="Excalibur Driver Build file" default="main" basedir=".">

    <!--
      Give user a chance to override without editing this file
      (and without typing -D each time he compiles it)
    -->
    <property file="ant.properties"/>
    <property file="${user.home}/.ant.properties"/>

    <!-- location of intermediate products -->
    <property name="build.dir" value="build"/>
    <property name="build.reports" value="${build.dir}/reports"/>
    <property name="build.tests" value="${build.dir}/tests"/>

    <target name="main" depends="mega-jar"/>

    <!-- Build default targets of all subprojects. -->
    <target name="build-subprojects-dist">

        <ant dir="instrument"/>
        <ant dir="all"/>                <!-- depends on instrument -->
        <ant dir="instrument-manager"/> <!-- depends on instrument, all -->
        <!--ant dir="instrument-client"/-->  <!-- depends on instrument-manager -->
        <ant dir="baxter"/>
        <ant dir="bzip2"/>
        <ant dir="cache"/>
        <ant dir="cli"/>
        <ant dir="extension"/>
        <ant dir="i18n"/>
        <ant dir="io"/>
        <ant dir="naming"/>
        <ant dir="tar"/>
        <ant dir="zip"/>
    </target>

    <target name="jdepend" if="do.jdepend" description="Generate Dependency Analysis Report">

        <path id="java.src">
            <pathelement location="instrument/src/java"/>
            <pathelement location="instrument/src/test"/>
            <pathelement location="all/src/java"/>
            <pathelement location="all/src/test"/>
            <pathelement location="instrument-manager/src/java"/>
            <pathelement location="instrument-manager/src/test"/>
            <pathelement location="instrument-client/src/java"/>
            <pathelement location="instrument-client/src/test"/>
            <pathelement location="baxter/src/java"/>
            <pathelement location="baxter/src/test"/>
            <pathelement location="bzip2/src/java"/>
            <pathelement location="bzip2/src/test"/>
            <pathelement location="cache/src/java"/>
            <pathelement location="cache/src/test"/>
            <pathelement location="cli/src/java"/>
            <pathelement location="cli/src/test"/>
            <pathelement location="extension/src/java"/>
            <pathelement location="extension/src/test"/>
            <pathelement location="i18n/src/java"/>
            <pathelement location="i18n/src/test"/>
            <pathelement location="io/src/java"/>
            <pathelement location="io/src/test"/>
            <pathelement location="naming/src/java"/>
            <pathelement location="naming/src/test"/>
            <pathelement location="tar/src/java"/>
            <pathelement location="tar/src/test"/>
            <pathelement location="zip/src/java"/>
            <pathelement location="zip/src/test"/>
        </path>

        <!-- Classpath for product -->
        <path id="jdepend.class.path">
            <pathelement path="${java.class.path}"/>
            <pathelement location="${checkstyle.jar}"/>
        </path>

        <!-- this invocation of jdepend requires the CVS version of ant for the xml format -->
        <!-- thats why you are required to define do.jdepend property to generate the report -->
        <jdepend outputfile="${build.dir}/jdepend-results.xml" format="xml" fork="yes">
            <classpath refid="jdepend.class.path"/>
            <sourcespath>
                <path refid="java.src" />
            </sourcespath>
        </jdepend>

        <mkdir dir="${build.reports}/jdepend"/>
        <style in="${build.dir}/jdepend-results.xml"
            processor="trax"
            out="${build.reports}/jdepend/delete-me.txt"
            style="${ant.home}/etc/jdepend-frames.xsl"/>
    </target>

    <!-- Build a summary test report from the results of the tests of all subprojects. -->
    <target name="test-reports" depends="build-subprojects-dist">

        <mkdir dir="${build.dir}"/>
        <mkdir dir="${build.tests}"/>
        <mkdir dir="${build.reports}"/>

        <junitreport todir="${build.tests}">
            <fileset dir="${basedir}">
                <include name="*/build/tests/TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${build.reports}"/>
        </junitreport>
    </target>

    <!-- Distribution build for all subprojects. -->
    <target name="dist" depends="test-reports"
        description="Create binary distributions of all the products"/>

    <!-- Generate one mega jar-ball -->
    <target name="mega-jar" description="Generate one large jar for all the products">
        <ant dir="instrument" target="jar"/>
        <ant dir="all" target="all"/>                <!-- depends on instrument -->
        <ant dir="instrument-manager" target="jar"/> <!-- depends on instrument, all -->
        <!--ant dir="instrument-client" target="jar"/-->  <!-- depends on instrument-manager -->
        <ant dir="baxter" target="jar"/>
        <ant dir="bzip2" target="jar"/>
        <ant dir="cache" target="jar"/>
        <ant dir="cli" target="jar"/>
        <ant dir="extension" target="jar"/>
        <ant dir="i18n" target="jar"/>
        <ant dir="io" target="jar"/>
        <ant dir="naming" target="jar"/>
        <ant dir="tar" target="jar"/>
        <ant dir="zip" target="jar"/>

        <jlink compress="false" outfile="excalibur-all.jar">
            <mergefiles>
                <fileset dir=".">
                    <include name="*/build/lib/*.jar"/>
                </fileset>
            </mergefiles>
        </jlink>
    </target>

    <target name="clean">
        <delete dir="${build.dir}" />

        <ant dir="instrument" target="real-clean"/>
        <ant dir="all" target="distclean"/>
        <ant dir="instrument-manager" target="real-clean"/>
        <ant dir="instrument-client" target="real-clean"/>
        <ant dir="baxter" target="real-clean"/>
        <ant dir="bzip2" target="real-clean"/>
        <ant dir="cache" target="real-clean"/>
        <ant dir="cli" target="real-clean"/>
        <ant dir="extension" target="real-clean"/>
        <ant dir="i18n" target="real-clean"/>
        <ant dir="io" target="real-clean"/>
        <ant dir="naming" target="real-clean"/>
        <ant dir="tar" target="real-clean"/>
        <ant dir="zip" target="real-clean"/>

    </target>

</project>

