/*
Copyright 2004 The Apache Software Foundation
Licensed  under the  Apache License,  Version 2.0  (the "License");
you may not use  this file  except in  compliance with the License.
You may obtain a copy of the License at 

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed  under the  License is distributed on an "AS IS" BASIS,
WITHOUT  WARRANTIES OR CONDITIONS  OF ANY KIND, either  express  or
implied.

See the License for the specific language governing permissions and
limitations under the License.
*/

import java.io.File;
import java.io.IOException;

import java.util.ArrayList;
import java.util.Iterator;

import org.apache.avalon.magic.AbstractPlugin;
import org.apache.avalon.magic.Artifact;
import org.apache.avalon.magic.Plugin;
import org.apache.avalon.magic.PluginContext;

import org.apache.avalon.framework.service.Serviceable;
import org.apache.avalon.framework.service.ServiceManager;
import org.apache.avalon.framework.service.ServiceException;

import org.apache.tools.ant.Project;
import org.apache.tools.ant.types.FileSet;
import org.apache.tools.ant.types.Path;
import org.apache.tools.ant.taskdefs.Copy;
import org.apache.tools.ant.taskdefs.Jar;

public class JUnitPlugin extends AbstractPlugin
    implements Serviceable
{
    private Object m_PreparePlugin;
    private Object m_ArtifactPlugin;
    private Object m_JavacPlugin;
        
    public void service( ServiceManager man )
        throws ServiceException
    {
        m_PreparePlugin = man.lookup( "prepare" );
        m_ArtifactPlugin = man.lookup( "artifact" );
        m_JavacPlugin = man.lookup( "java" );
    }

    public void junit()
    {
        Logger logger = getLogger();
        if( logger.isDebugEnabled() )
            logger.debug( "Starting Junit plugin." );
        
        String classpath = m_Context.getProperty( "junit.class.path" );
        
        File destDir = compileTests( classpath );
        
        runTests( classpath, destDir );
    }    
    
    private void compileTests( String classpath )
    {
        String destdirname = m_Context.getProperty( "junit.build.dest.dir" );
        File toDir = new File( m_Context.getProjectDir(), destdirname ); 
        toDir.mkdirs();
                
        String srcdirname = m_Context.getProperty( "junit.build.src.dir" );
        File fromDir = new File( m_Context.getProjectDir(), srcdirname ); 
        
        JavacPlugin javac = (JavacPlugin) m_JavacPlugin;
        
        javac.compile( classpath, toDir, fromDir );
        
        return toDir;
    }
    
    private void runTests( String classpath, File testClasses )
    {
        int count = getNumberOfElements( classpath );
        URL urls = new URL[ count + 1];
        
        ArrayList pathelements = new ArrayList();
        pathelements.add( testClasses.toURL() );
        
        StringTokenizer st = new StringTokenizer( classpath, ":", false );
        while( st.hasMoreTokens() )
        {
            String token = st.nextToken();
            URL url = new URL( token );
        }
    }

    private int getNumberOfElements( String classpath )
    {
        if( classpath == null || "".equals( classpath ) )
            return 0;

        int counter = 1;
        for( int i=0 ; i < classpath.length() ; i++ )
        {
            if( classpath.charAt(i) == ':' )
                counter++;
        }
        return counter;
    }    
}   
