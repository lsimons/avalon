* Renamed LogEntry to LogEvent. This was done as Entry was a misnomer.
  It was a misnomer as each Entry could in fact never be placed in
  logs or placed in multiple logs. It is up to the LogTargets how to 
  treat the event and whether or not to convert the event into an entry.
  Updated all interfaces that referred to entry to refer to event.

* Added getCurrentContextStack() to ContextStack class and made the
  method with same name in LogKit delegate to ContextStack.getCurrentContextStack()

* Added getDefaultLogEngine() to LogEngine and made the method with same name
  in LogKit delegate to LogEngine.getDefaultLogEngine()

* Made Priority a class in place of Priority.Enum class. Converted constants
  to use this interface. Added getPriorityForName() method and made LogKit
  method of same name delegate to it.

* Made ContextStack contain objects other than strings.

* Made each hierarchy extend from a root Logger about category "". Also put
  default log target into this Logger. Thus no longer *need* getDefaultLogTarget
  method in LogEngine/LogKit - thus it was removed.

* Made each logger cache a version of logTargets. Combine this with the root logger
  containing default log target means that you no longer have to recursively
  check parents to get LogTargets or check the engine. This is considerably 
  faster.
 
* Made "category" behave identically to logTarget inheritance wise.
  Each logger caches priority when it is inherited from parents. This is
  slightly faster than old version.

* Merged "Category" object into Logger. This required adding getPriority to 
  Logger and making Logger.getCategory() return name of category rather than
  Category object.
 
* Protected logger manipulation by synchronized sections

* Made ServletOutputTarget not filter - leave that to a separate FilterTarget

* Moved instance variables to private instead of protected were appopriate.
  This allows to decrease maintanence cost justt in case someone inherits
  from one of our classes.

* Removed the hashtable that stored log targets as it can be easily done
  by users of LogKit and wasn't serving any real purpose.

