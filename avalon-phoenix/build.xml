<?xml version="1.0"?>

<!--
==============================================================================

 Phoenix build file

Authors:
 Federico Barbieri <scoobie@apache.org>
 Berin Loritsch <bloritsch@apache.org>
 Peter Donald <peter@apache.org>
 Leo Simons <mail@leosimons.com>

Legal:
  Copyright (c) 1999-2001 The Apache Software Foundation. All Rights Reserved.

==============================================================================
-->

<project default="main" basedir=".">

  <!--
    Give user a chance to override without editing this file
    (and without typing -D each time he compiles it)
  -->
  <property file=".ant.properties"/>
  <property file="${user.home}/.ant.properties"/>

  <property file="project.properties"/>

  <property name="build.debug" value="on"/>
  <property name="build.optimize" value="off"/>
  <property name="build.deprecation" value="off"/>

  <!-- Set the properties for intermediate directory -->
  <property name="build.dir" value="build"/>
  <property name="build.lib" value="${build.dir}/lib"/>
  <property name="build.src" value="${build.dir}/src"/>
  <property name="build.classes" value="${build.dir}/classes"/>

  <!-- Set the properties for source directories -->
  <property name="src.dir" value="src"/>
  <property name="java.dir" value="${src.dir}/java"/>
  <property name="conf.dir" value="${src.dir}/conf"/>
  <property name="script.dir" value="${src.dir}/script"/>
  <property name="manifest.dir" value="${src.dir}/manifest"/>
  <property name="lib.dir" value="lib"/>
  <property name="tools.dir" value="../jakarta-avalon/tools"/>

  <property name="dist.name" value="${name}-${version}"/>
  <property name="dist.base" value="distributions"/>
  <property name="bin.dist.dir" value="dist"/>
  <property name="src.dist.dir" value="${dist.name}"/>

  <property name="constants.file" value="org/apache/avalon/phoenix/Constants.java"/>
  <property name="xerces.dir" value="${lib.dir}"/>
  <property name="xerces.file" value="xerces.jar"/>
  <property name="xerces.jar" value="${xerces.dir}/${xerces.file}"/>
  <property name="xalan.jar" value="${tools.dir}/lib/xalan-2.2.0-D8.jar"/>
  <property name="framework.jar" value="${lib.dir}/avalon-framework-20011115.jar"/>
  <property name="excalibur.jar" value="${lib.dir}/avalon-excalibur-20011120.jar"/>
  <property name="scratchpad.jar" value="${lib.dir}/avalon-scratchpad-20011122.jar"/>
  <property name="logkit.jar" value="${lib.dir}/logkit-1.0.jar"/>
  <property name="jmxri.jar" value="${lib.dir}/jmxri.jar"/>
  <property name="jmxtools.jar" value="${lib.dir}/jmxtools.jar"/>
  <property name="tools.jar" value="${java.home}/../lib/tools.jar"/>

  <path id="project.class.path">
    <pathelement location="${xerces.jar}"/>
    <pathelement location="${framework.jar}"/>
    <pathelement location="${excalibur.jar}"/>
    <pathelement location="${scratchpad.jar}"/>
    <pathelement location="${logkit.jar}"/>
    <pathelement location="${jmxri.jar}"/>
    <pathelement location="${jmxtools.jar}"/>
    <pathelement location="${wrapper.jar}"/>
    <pathelement path="${java.class.path}" />
    <fileset dir="${lib.dir}">
      <include name="*.jar" />
    </fileset>
    <pathelement path="${build.classes}" />
  </path>

  <!-- Main target -->
  <target name="main" depends="wrapper-dist"
          description="generates the Phoenix distribution without the javadocs"/>
  <target name="all" depends="dist-lite" description="generates the Phoenix distribution">
    <ant target="docs" antfile="docs.xml" inheritall="false" />
  </target>

  <!-- Help on usage -->
  <target name="usage">
    <echo message="Use the -projecthelp option instead"/>
  </target>
  <target name="help" depends="usage"/>

  <!-- Check requirements of environment -->
  <target name="check-environment">
    <available property="xerces.present" type="file" file="${xerces.jar}"/>
    <available property="servlet.present" classname="javax.servlet.Servlet">
      <classpath refid="project.class.path"/>
    </available>
    <available property="jmx.present" classname="javax.management.MBeanException">
      <classpath refid="project.class.path"/>
    </available>
    <available property="wrapper.present" classname="com.silveregg.wrapper.WrapperManager">
      <classpath refid="project.class.path"/>
    </available>
  </target>


  <!-- Prepares the build directory -->
  <target name="prepare" depends="check-environment">

    <mkdir dir="${build.src}"/>
    <copy todir="${build.src}">
      <fileset dir="${java.dir}">
        <include name="${constants.file}" />
      </fileset>
    </copy>

    <tstamp/>
    <replace file="${build.src}/${constants.file}" token="@@VERSION@@" value="${version}"/>
    <replace file="${build.src}/${constants.file}" token="@@NAME@@" value="${Name}"/>
    <replace file="${build.src}/${constants.file}" token="@@DATE@@" value="${TODAY}"/>

  </target>


  <!-- Compiles the source code -->
  <target name="compile" depends="prepare" description="compiles the source code">

    <mkdir dir="${build.classes}"/>

    <javac srcdir="${java.dir}"
           destdir="${build.classes}"
           debug="${build.debug}"
           optimize="${build.optimize}"
           deprecation="${build.deprecation}">
      <classpath refid="project.class.path" />
      <src path="${build.src}" />
      <exclude name="${constants.file}" />
      <exclude name="org/apache/avalon/phoenix/frontends/PhoenixServlet.java" unless="servlet.present"/>
      <exclude name="org/apache/avalon/phoenix/frontends/ComposableServlet.java" unless="servlet.present"/>
      <exclude name="org/apache/jmx/**" unless="jmx.present"/>
      <exclude name="**/*MBean.java" unless="jmx.present"/>
      <exclude name="org/apache/avalon/phoenix/components/manager/DefaultManager.java"
               unless="jmx.present"/>
      <exclude name="org/apache/avalon/phoenix/launcher/DaemonLauncher.java"
               unless="wrapper.present"/>
    </javac>

    <copy todir="${build.classes}">
      <fileset dir="${java.dir}">
        <include name="**/*.properties" />
      </fileset>
    </copy>

  </target>

  <target name="rmic" depends="compile" if="jmx.present"
          description="runs rmic on JMX Adaptor">

    <rmic base="${build.classes}"
          classname="org.apache.jmx.adaptor.RMIAdaptorImpl"
          stubVersion="1.2">
      <classpath refid="project.class.path" />
    </rmic>

  </target>

  <!-- Creates all the .jar files -->
  <target name="jars" depends="rmic">

    <mkdir dir="${build.lib}"/>

    <jar jarfile="${build.lib}/phoenix-client.jar" basedir="${build.classes}">
      <include name="org/apache/avalon/phoenix/*"/>
      <include name="org/apache/avalon/phoenix/metainfo/**"/>
      <include name="org/apache/avalon/phoenix/metadata/**"/>
      <include name="org/apache/avalon/phoenix/tools/**"/>
      <zipfileset dir="${src.dir}/schema" prefix="org/apache/avalon/phoenix/tools">
        <include name="*.dtd"/>
      </zipfileset>
    </jar>

    <jar jarfile="${build.lib}/phoenix-loader.jar"
         basedir="${build.classes}"
         manifest="${manifest.dir}/loader-Manifest.mf" >
      <include name="org/apache/avalon/phoenix/launcher/**"/>

      <zipfileset dir="${conf.dir}" prefix="META-INF/">
        <include name="java.policy"/>
      </zipfileset>
    </jar>

    <jar jarfile="${build.lib}/avalon-jmx.jar" basedir="${build.classes}">
      <include name="org/apache/jmx/**" />
    </jar>

    <jar jarfile="${build.lib}/phoenix-engine.jar"
         basedir="${build.classes}"
         manifest="${manifest.dir}/engine-Manifest.mf" >

      <include name="org/apache/avalon/phoenix/engine/**"/>
      <include name="org/apache/avalon/phoenix/frontends/**"/>
      <include name="org/apache/avalon/phoenix/components/**"/>
      <include name="org/apache/avalon/phoenix/interfaces/**"/>
      <exclude name="org/apache/avalon/phoenix/launcher/**"/>
    </jar>

  </target>

  <!-- Create the lite build -->
  <target name="dist-lite" depends="jars"
          description="generates the Phoenix distribution without the javadocs">

    <property name="bin.dist.bin" value="${bin.dist.dir}/bin"/>
    <property name="bin.dist.apps" value="${bin.dist.dir}/apps"/>
    <property name="bin.dist.ext" value="${bin.dist.dir}/ext"/>
    <property name="bin.dist.lib" value="${bin.dist.dir}/lib"/>

    <mkdir dir="${bin.dist.bin}"/>
    <mkdir dir="${bin.dist.apps}"/>
    <mkdir dir="${bin.dist.ext}"/>
    <mkdir dir="${bin.dist.lib}"/>

    <copy file="${build.lib}/phoenix-loader.jar" todir="${bin.dist.bin}/"/>
    <copy file="${build.lib}/phoenix-engine.jar" todir="${bin.dist.bin}"/>

    <copy file="${build.lib}/phoenix-client.jar" todir="${bin.dist.lib}"/>
    <copy file="${build.lib}/avalon-jmx.jar" todir="${bin.dist.lib}"/>
    <copy file="${logkit.jar}" todir="${bin.dist.lib}"/>
    <copy file="${jmxri.jar}" todir="${bin.dist.lib}"/>
    <copy file="${jmxtools.jar}" todir="${bin.dist.lib}"/>
    <copy file="${framework.jar}" todir="${bin.dist.lib}"/>
    <copy file="${excalibur.jar}" todir="${bin.dist.lib}"/>
    <copy file="${scratchpad.jar}" todir="${bin.dist.lib}"/>
    <copy file="${xerces.jar}" todir="${bin.dist.lib}"/>
    <!--
    This was not copying for relatively local ..\jakarta-avalon\tools\lib\xerces.jar - PH
    <copy todir="${bin.dist.lib}">
      <fileset dir="${xerces.dir}">
        <include name="${xerces.file}" if="xerces.present"/>
      </fileset>
    </copy>
    -->

    <copy file="${script.dir}/run.bat" todir="${bin.dist.bin}"/>
    <copy file="${script.dir}/run.sh" todir="${bin.dist.bin}"/>

    <chmod dir="${bin.dist.dir}" perm="go-rwx" />
    <chmod file="${bin.dist.bin}/*.sh" perm="u+x"/>
    <chmod file="${bin.dist.bin}/*.bat" perm="u-x"/>
    <fixcrlf srcdir="${bin.dist.dir}" includes="**/*.bat" eol="crlf" />
    <fixcrlf srcdir="${bin.dist.dir}" includes="**/*.sh" eol="lf" />

  </target>

  <!-- Create the lite build -->
  <target name="wrapper-dist" depends="dist-lite" if="wrapper.present"
          description="generates the Phoenix binary distribution without the javadocs and with wrapper">

    <copy file="${wrapper.jar}" todir="${bin.dist.bin}"/>
    <copy file="${wrapper.exe}" todir="${bin.dist.bin}"/>
    <copy file="${wrapper.dll}" todir="${bin.dist.bin}"/>
    <copy file="${conf.dir}/wrapper.conf" todir="${bin.dist.bin}"/>
  </target>

  <target name="install" depends="wrapper-dist,install-check-phoenix">

    <mkdir dir="${phoenix.home}" />

    <copy todir="${phoenix.home}">
      <fileset dir="${bin.dist.dir}"/>
    </copy>

    <chmod file="${phoenix.home}/bin/*.sh" perm="u+x"/>
    <chmod file="${phoenix.home}/bin/*.bat" perm="u-x"/>

  </target>

  <target name="install-check-phoenix" unless="phoenix.home">
    <fail message="phoenix.home not specified." />
  </target>

  <!-- Create the distribution -->
  <target name="bin-dist" depends="all">

    <property name="bin.dist.docs" value="${bin.dist.dir}/docs"/>
    <property name="bin.dist.javadocs" value="${bin.dist.dir}/docs/api"/>

    <mkdir dir="${bin.dist.docs}"/>
    <mkdir dir="${bin.dist.javadocs}"/>

    <copy todir="${bin.dist.docs}">
      <fileset dir="${build.dir}/docs"/>
    </copy>

    <copy todir="${bin.dist.javadocs}">
      <fileset dir="${build.dir}/javadocs"/>
    </copy>

    <filter token="version" value="${version}"/>
    <filter token="dist.name" value="${dist.name}"/>
    <copy todir="${bin.dist.dir}" filtering="on">
      <fileset dir=".">
        <include name="README.txt"/>
        <include name="WARNING.txt"/>
        <include name="LICENSE.txt"/>
      </fileset>
    </copy>

    <chmod dir="${bin.dist.dir}" perm="go-rwx" />

  </target>

  <!-- Create the source distribution -->
  <target name="src-dist">

    <property name="src.dist.src" value="${src.dist.dir}/src"/>
    <property name="src.dist.docs" value="${src.dist.dir}/docs"/>
    <property name="src.dist.javadocs" value="${src.dist.dir}/docs/api"/>
    <property name="src.dist.lib" value="${src.dist.dir}/lib"/>
    <property name="src.dist.tools" value="${src.dist.dir}/tools"/>

    <mkdir dir="${src.dist.dir}" />
    <mkdir dir="${src.dist.docs}"/>
    <mkdir dir="${src.dist.javadocs}"/>

    <copy file="${xerces.jar}" todir="${src.dist.lib}/"/>
    <copy file="${framework.jar}" todir="${src.dist.lib}"/>
    <copy file="${excalibur.jar}" todir="${src.dist.lib}"/>
    <copy file="${scratchpad.jar}" todir="${src.dist.lib}"/>
    <copy file="${logkit.jar}" todir="${src.dist.lib}"/>

    <copy todir="${src.dist.src}">
      <fileset dir="${src.dir}"/>
    </copy>

    <copy todir="${src.dist.docs}">
      <fileset dir="${build.dir}/docs"/>
    </copy>

    <copy todir="${src.dist.javadocs}">
      <fileset dir="${build.dir}/javadocs"/>
    </copy>

    <filter token="version" value="${version}"/>
    <filter token="dist.name" value="${dist.name}"/>
    <copy todir="${src.dist.dir}" filtering="on">
      <fileset dir=".">
        <include name="README.txt"/>
        <include name="WARNING.txt"/>
        <include name="LICENSE.txt"/>
        <include name="BUILDING.txt"/>
        <include name="build.xml"/>
      </fileset>
    </copy>

    <fixcrlf srcdir="${src.dist.src}/java" includes="**/*.java" eol="lf"/>
    <chmod dir="${src.dist.dir}" perm="go-rwx" />

  </target>

  <!-- Completely build all dists -->
  <target name="dist" description="generates the Phoenix distribution">

    <ant target="site-docs" antfile="docs.xml" inheritall="false" />
    <ant target="announcement" antfile="docs.xml" inheritall="false" />

    <mkdir dir="${dist.base}"/>

    <antcall target="bin-dist">
      <param name="bin.dist.dir" value="${dist.name}" />
    </antcall>

    <zip file="${dist.base}/${dist.name}-bin.zip"
         basedir="${dist.name}/.."
         includes="${dist.name}/**"/>

    <tar longfile="gnu" tarfile="${dist.base}/${dist.name}-bin.tar">
      <tarfileset dir="${dist.name}/.." mode="755" username="avalon" group="avalon">
        <include name="${dist.name}/bin/*.sh"/>
      </tarfileset>
      <tarfileset dir="${dist.name}/.." username="avalon" group="avalon">
        <include name="${dist.name}/**"/>
        <exclude name="${dist.name}/bin/*.sh"/>
      </tarfileset>
    </tar>

    <gzip zipfile="${dist.base}/${dist.name}-bin.tar.gz"
          src="${dist.base}/${dist.name}-bin.tar"/>

    <delete file="${dist.base}/${dist.name}-bin.tar"/>
    <delete dir="${dist.name}" />

    <antcall target="src-dist">
      <param name="src.dist.dir" value="${dist.name}" />
    </antcall>

    <zip file="${dist.base}/${dist.name}-src.zip"
         basedir="${dist.name}/.."
         includes="${dist.name}/**"/>

    <tar longfile="gnu" tarfile="${dist.base}/${dist.name}-src.tar" >
      <tarfileset dir="${dist.name}/.." username="avalon" group="avalon">
        <include name="${dist.name}/**"/>
      </tarfileset>
    </tar>

    <gzip zipfile="${dist.base}/${dist.name}-src.tar.gz"
          src="${dist.base}/${dist.name}-src.tar"/>

    <delete file="${dist.base}/${dist.name}-src.tar"/>
    <delete dir="${dist.name}" />

  </target>

  <!-- Makes the Phoneix Development Kit -->
  <target name="make-pdk" depends="jars" description="Generates thd PDK distribution">

    <mkdir dir="${dist.base}"/>
    <zip file="${dist.base}/phoenix-developers-kit.zip">
      <fileset dir="src/pdk">
        <include name="**"/>
      </fileset>
      <fileset dir=".">
        <include name="lib/**"/>
      </fileset>
      <fileset dir="build">
        <include name="lib/phoenix-client.jar"/>
      </fileset>
    </zip>

  </target>

  <!-- Cleans up build and distribution directories -->
  <target name="clean" description="cleans up the created directories">
    <delete dir="${build.dir}" />
    <delete dir="${bin.dist.dir}" />
    <delete>
      <fileset dir="." includes="**/*~" defaultexcludes="no"/>
    </delete>
  </target>

  <!-- Cleans absolutely everything up -->
  <target name="distclean" depends="clean" description="cleans up all generated files and directories">
    <delete dir="${docs.dir}" />
    <delete dir="${dist.base}" />
    <ant target="clean" antfile="docs.xml" inheritall="false" />
  </target>

</project>
