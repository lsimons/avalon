<?xml version="1.0"?>

<!--
==============================================================================

 Phoenix build file

Authors:
 Federico Barbieri <scoobie@apache.org>
 Berin Loritsch <bloritsch@apache.org>
 Peter Donald <donaldp@apache.org>

Legal:
  Copyright (c) 1999-2001 The Apache Software Foundation. All Rights Reserved.

==============================================================================
-->

<project default="main" basedir=".">

  <!--
    Give user a chance to override without editing this file
    (and without typing -D each time he compiles it)
  -->
  <property file=".ant.properties"/>
  <property file="${user.home}/.ant.properties"/>

  <property name="name" value="phoenix"/>
  <property name="Name" value="Phoenix"/>
  <property name="version" value="3.1a1-dev"/>
  <property name="year" value="1999-2001"/>

  <!--
    these are here only for those who use jikes compiler. For other
    developers this part makes no difference.
  -->
  <property name="build.compiler.emacs" value="on"/>
  <property name="build.compiler.warnings" value="true"/>
  <property name="build.compiler.pedantic" value="true"/>
  <property name="build.compiler.depend" value="true"/>
  <property name="build.compiler.fulldepend" value="true"/>

  <property name="debug" value="off"/>
  <property name="optimize" value="off"/>
  <property name="deprecation" value="on"/>

  <!--
       ===================================================================
       Set the properties for intermediate directory
       ===================================================================
  -->
  <property name="build.dir" value="build"/>
  <property name="build.lib" value="${build.dir}/lib"/>
  <property name="build.src" value="${build.dir}/src"/>
  <property name="build.classes" value="${build.dir}/classes"/>
  <property name="build.javadocs" value="${build.dir}/javadocs"/>
  <property name="build.docs" value="${build.dir}/docs"/>

  <!--
       ===================================================================
       Set the properties for source directories
       ===================================================================
  -->
  <property name="src.dir" value="src"/>
  <property name="java.dir" value="${src.dir}/java"/>
  <property name="script.dir" value="${src.dir}/script"/>
  <property name="manifest.dir" value="${src.dir}/manifest"/>
  <property name="lib.dir" value="lib"/>
  <property name="tools.dir" value="tools"/>
  <property name="docs.dir" value="docs"/>
  <property name="javadocs.dir" value="${build.docs}/api"/>

  <property name="dist.name" value="${name}-${version}"/>

  <property name="constants.file" value="org/apache/phoenix/engine/Constants.java"/>

  <!--
       ===================================================================
                                  Main target
       ===================================================================
  -->
  <target name="main" depends="dist-lite" />

  <!--
       ===================================================================
                                  Help on usage
       ===================================================================
  -->
  <target name="usage">
    <echo message=""/>
    <echo message="${Name} Build file"/>
    <echo message="-------------------------------------------------------------"/>
    <echo message=""/>
    <echo message=" available targets are:"/>
    <echo message=""/>
    <echo message="   jar        --> generates the ${Name} jar files"/>
    <echo message="   test       --> perform unit tests"/>
    <echo message="   compile    --> compiles the source code"/>
    <echo message="   javadocs   --> generates the API documentation (java 1.2+ only)"/>
    <echo message="   docs       --> generates the ${Name} Documentation"/>
    <echo message="   dist-lite  --> generates the ${Name} distribution without the javadocs (default)"/>
    <echo message="   dist       --> generates the ${Name} distribution"/>
    <echo message="   clean      --> cleans up the created directories"/>
    <echo message="   real-clean --> cleans up all genereated files and directories"/>
    <echo message=""/>
    <echo message="-------------------------------------------------------------"/>
    <echo message=""/>
  </target>

  <target name="help" depends="usage"/>

 <!--
       ===================================================================
       Set up dist properties
       ===================================================================
  -->
  <target name="setup-properties" >

    <property name="dist.dir" value="dist"/>
    <property name="dist.bin" value="${dist.dir}/bin"/>
    <property name="dist.apps" value="${dist.dir}/apps"/>
    <property name="dist.lib" value="${dist.dir}/lib"/>
    <property name="dist.docs" value="${dist.dir}/docs"/>
    <property name="dist.javadocs" value="${dist.dir}/docs/api"/>

    <property name="src.dist.dir" value="dist-src"/>
    <property name="src.dist.src" value="${src.dist.dir}/src"/>
    <property name="src.dist.docs" value="${src.dist.dir}/docs"/>
    <property name="src.dist.javadocs" value="${src.dist.dir}/docs/api"/>
    <property name="src.dist.lib" value="${src.dist.dir}/lib"/>
    <property name="src.dist.tools" value="${src.dist.dir}/tools"/>
  </target>

  <!--
       ===================================================================
                         Prepares the build directory
       ===================================================================
  -->
  <target name="prepare" depends="setup-properties">

    <mkdir dir="${build.src}"/>
    <copy todir="${build.src}">
      <fileset dir="${java.dir}">
        <include name="${constants.file}" />
      </fileset>
    </copy>

    <tstamp/>
    <replace file="${build.src}/${constants.file}" token="@@VERSION@@" value="${version}"/>
    <replace file="${build.src}/${constants.file}" token="@@NAME@@" value="${Name}"/>
    <replace file="${build.src}/${constants.file}" token="@@DATE@@" value="${TODAY}"/>

  </target>

  <!--
       ===================================================================
                        Compiles the source code
       ===================================================================
  -->
  <target name="compile" depends="prepare">

    <mkdir dir="${build.classes}"/>

    <javac srcdir="${java.dir}"
           destdir="${build.classes}"
           debug="${debug}"
           optimize="${optimize}"
           deprecation="${deprecation}">
      <classpath>
        <pathelement location="${lib.dir}/avalonapi.jar"/>
        <pathelement location="${lib.dir}/xerces.jar"/>
      </classpath>
      <src path="${build.src}" />
      <exclude name="${constants.file}" />
    </javac>

  </target>

  <!--
       ===================================================================
       Create api documentation
       ===================================================================
  -->
  <target name="javadocs" >
    <echo message="Todo: Javadocs" />
  </target>

  <target name="docs">
    <echo message="Todo: Docs" />
  </target>
  <!--
       ===================================================================
                           Creates all the .jar files
       ===================================================================
  -->
  <target name="jars" depends="compile">

    <mkdir dir="${build.lib}"/>

    <jar jarfile="${build.lib}/phoenix-client.jar" basedir="${build.classes}">

      <include name="org/apache/phoenix/*"/>
    
      <!-- remove next line after support for old interfaces is dropped -->
      <include name="org/apache/avalon/**"/>
    </jar>

    <jar jarfile="${build.lib}/phoenix-loader.jar"
         basedir="${build.classes}"
         manifest="${manifest.dir}/loader-Manifest.mf" >
      <include name="org/apache/phoenix/engine/loader/**"/>
    </jar>

    <jar jarfile="${build.lib}/phoenix-engine.jar"
         basedir="${build.classes}"
         manifest="${manifest.dir}/engine-Manifest.mf" >
      <include name="org/apache/phoenix/metainfo/**"/>
      <include name="org/apache/phoenix/engine/**"/>
      <exclude name="org/apache/phoenix/engine/loader/**"/>
    </jar>

  </target>

  <!--
       ===================================================================
                         Create the lite build
       ===================================================================
  -->
  <target name="dist-lite" depends="jars">

    <mkdir dir="${dist.dir}"/>
    <mkdir dir="${dist.bin}"/>

    <mkdir dir="${dist.apps}"/>
    <mkdir dir="${dist.lib}"/>

    <copy file="${build.lib}/phoenix-loader.jar" todir="${dist.bin}/"/>
    <copy file="${build.lib}/phoenix-engine.jar" todir="${dist.bin}"/>

    <copy file="${build.lib}/phoenix-client.jar" todir="${dist.lib}"/>
    <copy file="${lib.dir}/avalonapi.jar" todir="${dist.lib}"/>
    <copy file="${lib.dir}/xerces.jar" todir="${dist.lib}"/>

    <copy file="${script.dir}/run.bat" todir="${dist.bin}"/>
    <copy file="${script.dir}/run.sh" todir="${dist.bin}"/>

    <chmod dir="${dist.dir}" perm="go-rwx" />
    <chmod file="${dist.bin}/run.sh" perm="u+x"/>
    <fixcrlf srcdir="${dist.dir}" cr="add" includes="**/*.bat" />
    <fixcrlf srcdir="${dist.dir}" cr="remove" includes="**/*.sh" />
    <fixcrlf srcdir="${dist.dir}" cr="remove" includes="ant" />

  </target>

  <!--
       ===================================================================
                            Create the distribution
       ===================================================================
  -->
  <target name="dist" depends="dist-lite,javadocs,docs">
    <mkdir dir="${dist.docs}"/>
    <mkdir dir="${dist.javadocs}"/>

    <copy todir="${dist.docs}">
      <fileset dir="${build.docs}"/>
    </copy>

    <copy todir="${dist.javadocs}">
      <fileset dir="${build.javadocs}"/>
    </copy>

    <copy todir="${dist.dir}">
      <fileset dir=".">
        <include name="README"/>
        <include name="WARNING"/>
      </fileset>
    </copy>

    <chmod dir="${dist.dir}" perm="go-rwx" />

    <zip zipfile="${dist.name}-bin.zip" basedir="${dist.dir}/.." includes="${dist.dir}/**"/>
    <tar tarfile="${dist.name}-bin.tar" basedir="${dist.dir}/.." includes="${dist.dir}/**"/>
    <gzip zipfile="${dist.name}-bin.tar.gz" src="${dist.name}-bin.tar"/>
    <delete file="${dist.name}-bin.tar"/>

  </target>

  <!--
       ===================================================================
                            Create the source distribution
       ===================================================================
  -->
  <target name="src-dist" depends="docs,setup-properties">

    <mkdir dir="${src.dist.dir}" />

    <copy todir="${src.dist.tools}">
      <fileset dir="${tools.dir}"/>
    </copy>

    <copy todir="${src.dist.lib}">
      <fileset dir="${lib.dir}">
        <include name="README" />
        <include name="avalonapi.jar" />
        <include name="xerces.jar" />
      </fileset>
    </copy>

    <copy todir="${src.dist.src}">
      <fileset dir="${src.dir}"/>
    </copy>

    <copy todir="${src.dist.docs}">
      <fileset dir="${build.docs}"/>
    </copy>

    <copy todir="${src.dist.javadocs}">
      <fileset dir="${build.javadocs}"/>
    </copy>

    <copy todir="${src.dist.dir}">
      <fileset dir=".">
        <include name="README"/>
        <include name="WARNING"/>
        <include name="build.bat"/>
        <include name="build.sh"/>
        <include name="build.xml"/>
      </fileset>
    </copy>

    <fixcrlf srcdir="${src.dist.dir}" includes="build.sh" cr="remove"/>
    <fixcrlf srcdir="${src.dist.dir}" includes="build.bat" cr="add"/>
    <chmod perm="+x">
      <fileset dir="${src.dist.dir}">
        <include name="build.sh" />
      </fileset>
    </chmod>

    <fixcrlf srcdir="${src.dist.src}/java" includes="**/*.java" cr="remove"/>

    <chmod dir="${src.dist.dir}" perm="go-rwx" />

    <zip zipfile="${dist.name}-src.zip"
         basedir="${src.dist.dir}/.."
         includes="${src.dist.dir}/**"/>
    <delete dir="${src.dist.dir}" />
  </target>

  <!--
       ===================================================================
                 Completely build all dists
       ===================================================================
  -->
  <target name="full-dist">
    <antcall target="src-dist">
      <param name="src.dist.dir" value="${dist.name}" />
    </antcall>

    <antcall target="dist">
      <param name="dist.dir" value="${dist.name}" />
    </antcall>
    <delete dir="${dist.name}" />
  </target>

  <!--
       ===================================================================
                 Cleans up build and distribution directories
       ===================================================================
  -->
  <target name="clean" depends="setup-properties">
    <delete dir="${build.dir}" />
    <delete dir="${dist.dir}" />
    <delete>
      <fileset dir="." includes="**/*~" defaultexcludes="no"/>
    </delete>
  </target>

  <!--
       ===================================================================
                      Cleans absolutely everything up
       ===================================================================
  -->
  <target name="real-clean" depends="clean">
    <delete dir="${docs.dir}" />
    <delete file="${dist.name}-bin.tar.gz" />
    <delete file="${dist.name}-bin.zip" />
    <delete file="${dist.name}-src.zip" />
  </target>

</project>
