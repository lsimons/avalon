<?xml version="1.0"?>

<document>

  <properties>
    <author email="mcconnell@apache.org">Stephen McConnell</author>
    <title>Cornerstone Scheduler</title>
  </properties>

  <body>
    <section name="Cornerstone Components - Threads">
      <subsection name="Example">
        <table>
          <tr><th>Source</th><th>Description</th></tr>
          <tr>
            <td><a href="http://cvs.apache.org/viewcvs.cgi/avalon-components/threads-tutorial/src/java/org/apache/avalon/cornerstone/threads/tutorial/ThreadConsumer.java">ThreadConsumer.java</a>
            </td>
            <td>
              A demonstration component implementation demonstrates the resolution
              of a ThreadManager and subsequent access to a ThreadPoll against 
              which a Runnable object is launched.  Termination of the container 
              before this time will trigger disposal of the component causing the 
              interruption of the subsidiary thread.
            </td>
          </tr>
          <tr>
            <td>
              <a href="http://cvs.apache.org/viewcvs.cgi/avalon-components/threads-tutorial/src/java/org/apache/avalon/cornerstone/threads/tutorial/Counter.java">Counter.java</a>
            </td>
            <td>
              The runnable object that simply initiates a countdown and will normally 
              complete and terminate within 10 seconds.  Used by the ThreadConsumer
              component to establish a threaded activity.
            </td>
          </tr>
          <tr>
            <td>
              <a href="http://cvs.apache.org/viewcvs.cgi/*checkout*/avalon-components/threads-tutorial/conf/block.xml">block.xml</a>
            </td>
            <td>
              Merlin deployment directive.
<source><![CDATA[
<container name="thread-tutorial">

     <categories>
       <category name="classloader/scanner" priority="ERROR"/>
     </categories>

     <classloader>
       <classpath>
         <repository>
           <resource id="avalon-framework:avalon-framework-impl" version="4.1.5"/>
           <resource id="commons-collections:commons-collections" version="2.1"/>
           <resource id="excalibur-pool:excalibur-pool" version="1.2"/>
           <resource id="excalibur-thread:excalibur-thread" version="1.1.1"/>
           <resource id="excalibur-event:excalibur-event" version="1.0.3"/>
           <resource id="cornerstone-threads:cornerstone-threads-api" version="1.0"/>
           <resource id="cornerstone-threads:cornerstone-threads-impl" version="1.0"/>
         </repository>
       </classpath>
     </classloader>

     <component name="threads" 
        class="org.apache.avalon.cornerstone.blocks.threads.DefaultThreadManager">
       <configuration>
         <thread-group>
           <name>default</name>
           <priority>5</priority> 
           <is-daemon>false</is-daemon>
           <max-threads>100</max-threads>
           <min-threads>20</min-threads>
           <min-spare-threads>20</min-spare-threads>
         </thread-group>
       </configuration>
     </component>

     <component name="test" 
        class="org.apache.avalon.cornerstone.threads.tutorial.ThreadConsumer" />

</container>
]]></source>
            </td>
          </tr>
        </table>
      </subsection>
      <subsection name="Runtime">
<p>
To execute this demonstration please make sure that you copy the cornerstone-threads-* jar files from your Maven repository to you <a href="http://avalon.apache.org/sandbox/merlin/">Merlin</a> repository.
</p>
<source><![CDATA[
$ cd avalon-cornerstone\threads\tutorial
$ merlin target\cornerstone-threads-tutorial-1.0.jar

[INFO   ] (thread-tutorial.test): aquiring cornerstone threads service
[INFO   ] (thread-tutorial.test): initialization
[INFO   ] (thread-tutorial.test.counter): count: 10
[INFO   ] (thread-tutorial.test.counter): count: 9
[INFO   ] (thread-tutorial.test.counter): count: 8
[INFO   ] (thread-tutorial.test.counter): count: 7
]]></source>
<p>
Interrupting the container (using ^C) will trigger component disposal
which in turn will trigger early termination of the thread established
using the cornerstone thread manager.
</p>
<source><![CDATA[
[INFO   ] (thread-tutorial.test): disposal
[INFO   ] (thread-tutorial.test): disposal invoked while child thread active
[INFO   ] (thread-tutorial.test.counter): I've been interrupted.
[INFO   ] (thread-tutorial.test.counter): Time to die.
[INFO   ] (thread-tutorial.test): disposal complete
]]></source>
      </subsection>
      
    </section>

  </body>

</document>
