<?xml version="1.0"?>

<!DOCTYPE document SYSTEM "dtd/document-v10.dtd">

<document>

 <header>
  <title>Cornerstone To do list</title>
  <authors>
    <person name="Avalon Documentation Team" email="avalon-dev@jakarta.apache.org"/>
  </authors>
 </header>

<body>
  <s1 title="Overview">
    <p>
      We're looking for people to help out and write or port some of these services.  
      If it's a port of an existing service, it's original license should be honoured.  
      For example if you are porting C source from the BSD operating system to Java, 
      it's probably true that you should keep the block as BSD licensed.  Naturely 
      we'd prefer to see original code written that's Apache software licensed.  Of course 
      there is plenty of room for multiple implementations of a given service/daemon.
    </p>
    <p>
      Types of block needed:
    </p>    
    <ul>
      <li>Services</li>
      <li>TCP/IP Daemons (as per Unix)</li>
      <li>Standardized Server Applications</li>
    </ul>
  </s1>
  <s1 title="Services">
      <s2 title="Compiler">
        <p>
          Something that can be handed Java source and a set of parameters defining 
          it's compilation and hand back bytecode compatible class files.
        </p>
        <p>
          This is easier said that done as the current Sun delivered javac compiler is 
          tightly coupled to the command line. It also likes to start with file based source
          and deliver file based classes.
        </p>
        <p>
          We'd prefer a compiler that could deal in terms of 100% java APIs and return byte 
          arrays or Class instances (as well has havng traditional file system based input/output
        </p>
      </s2>
  </s1>
  <s1 title="TCP/IP Daemons (as per Unix)">
    <p>
      RFC compliance is the key here.  Porting BSD source to Java might be a route 
      to delivering these server apps. In some cases theoure could be multiple block 
      implementations (One NTP block could look at the PC's local clock, another 
      delagates to another NTP server, they may even share code and be in the same 
      .bar file).
    </p>
      <s2 title="Domain Name Service">
        <p>
          DNS is the central scheme by which machines on the internet are looked up.
        </p>
        <p>
          DNS in Java has been done already.  See <link href="http://sourceforge.net/projects/dnsjava/">
          http://sourceforge.net/projects/dnsjava/</link>.  This is LGPL licnsed software so could not 
          be hosted by Apache if a port were undertaken.  It might be best to start afresh as there are
          so many possibilites for abstractions and configurable concepts (forwarding DNS impls, DNSlet, 
          Some using persistence stores, some using databases
        </p>
      </s2>
      <s2 title="Echo">
        <p>
          A service used by Ping.
        </p>
        <p>
          No preexisting Java examples known
        </p>        
      </s2>
      <s2 title="HTTP (basic)">
        <p>
          In advance of servlet/WAR file capable HTTP servers being ported to Avalon, it would be 
          nice to have a "generation 1" HTTP server that presents a directory structure to remote
          browsers over HTTP.  Apache had a tool called PicoServer that might have been a handy
          candidate, it's no longer downloadable :-(.
        </p>
        <p>
          Tomcat is our choice for long term migration to Avalon.
        </p>
      </s2>      
      <s2 title="Network Time Protocol (NTP)">
        <p>
          The service that Internet based computers use to syncronise their clocks.  Very useful 
          for secure and time critical services.
        </p>
      </s2>        
      <s2 title="Secure Shell (SSH)">
        <p>
          A Heavy crypto mechanism to provide secure access to a remote client.  
        </p>
        <p>
          See <link href="http://www.openssh.org/java.html">
          http://www.openssh.org/java.html</link> for details about available java tools.  Mindterm, listed 
          there, would be a good candiate, but it forked and went in two directions (1) Commercial/closed (2) 
          GPL.  The latter is not allowed to import ASF licensed code ("Block" being an example) so could 
          not be ported.  A from scratch impl would be best here.
        </p>
      </s2>  
      <s2 title="Telnet">
        <p>
          Ancient and insecure (over TCP/IP) protocol for having shell access to a computer.
        </p>
        <p>
          See <link href="http://sourceforge.net/projects/telnetd/">http://sourceforge.net/projects/telnetd/</link>.  
          This is LGPL licensed so could be ported to Avalon, but not hosted at Apache.  As always, a fresh 
          start might be best.
        </p>
      </s2>
      <s2 title="SAMBA">
        <p>
          For interoperation with a Windows network, CIFS is the thing.
        </p>
        <p>
          See <link href="http://jcifs.samba.org/">http://jcifs.samba.org/</link>.  
          This is LGPL licensed so could be ported to Avalon, but not hosted at Apache.  As always, a fresh 
          start might be best.
        </p>
      </s2>
      <s2 title="Dynamic Host Configuration Protocol and Bootp">
        <p>
          DHCP - for assigning of IP numbers to machines for organisations who power cycle 
          their machines from time to time. IP numbers can be handed out afresh each time or a concept of a lease can occur.
        </p>
      </s2>      
      <s2 title="Lightweight Directory Acces Protocol">
        <p>
          LDAP - a location of services people, orgs, resources protocol.
        </p>
        <p>        
          See <link href="http://sourceforge.net/projects/javaldap/">http://sourceforge.net/projects/javaldap/</link> 
          for a Java implementation.  Unfortunately, it's license is unsuitable for compilation against Apache 
          foundation classes.
        </p>          
      </s2>      
      <s2 title="Lightweight Directory Acces Protocol">
        <p>
          LDAP - a location of services people, orgs, resources protocol.
        </p>
        <p>        
          See <link href="http://sourceforge.net/projects/jradius/">http://sourceforge.net/projects/jradius/</link> 
          for a Java implementation.  Unfortunately, it's license is unsuitable for compilation against Apache 
          foundation classes.
        </p>          
      </s2>            
      <s2 title="Remote Authentication Dial-In User Service">
        <p>
          RADIUS - A server to authenticate dial in users.
        </p>
        <p>        
          See <link href="http://sourceforge.net/projects/jradius/">http://sourceforge.net/projects/jradius/</link> 
          for a Java implementation.  Unfortunately, it's license is unsuitable for compilation against Apache 
          foundation classes. The RFCs for RADIUS are <link href="http://www.ietf.org/rfc/rfc2865.txt?number=2865">2865</link> and <link href="http://www.ietf.org/rfc/rfc2868.txt?number=2868">2868</link>.
        </p>          
      </s2> 
      <s2 title="Finger">
        <p>
          An ancient protocol that gives basic semi structured data about the node you are fingering.  It has been used for several things over the years including passing of PGP public keys and "are you at your desk" type things.
        </p>
        <p>        
          An essential read <link href="http://www-cse.ucsd.edu/users/bsy/coke.history.txt">
          http://www-cse.ucsd.edu/users/bsy/coke.history.txt</link>.  About a prototype Internet application.  The RFC for finger is <link href="http://www.ietf.org/rfc/rfc1288.txt?number=1288">1288</link>.
        </p>          
      </s2>  
      <s2 title="Internet Relay Chat">
        <p>
          Live chat system.  Users enter and grant themselves identities.  It's illegal for the FBI to monitor conversations in IRC - not sure that relevent to the replication of such a daemon in Avalon.
        </p>         
      </s2>        
        
  </s1>
  <s1 title="Standardized Server Applications">
    
      <s2 title="Enterprise Java Beans">
        <p> 
           EJB (Enterprise Java Beans).  From Sun's J2EE spec.  The likelihood is that this is a large set of abstractions that would facilitate the cooperation of multiple servers to present an EAR file compatible deployment system.
        </p>
        <p> 
           Plenty of candidates for migration to Avalon in the open source world.
        </p>        
      </s2>          
  </s1>  
</body>
</document>
