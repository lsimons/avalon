
#
# DefaultModelFactory
# ===================
factory.containment.create-url.error=Unable to create a containment model from the url: {0}
factory.containment.create.error=Unable to construct a new containment model: {0}.


# DefaultClassLoaderModel
# =======================
classloader.unsatisfied-extensions.error=Classpath contains {0} unsatisfied extension dependencies.
classloader.missing.extension.error=Unable to locate a required extension.\n  Extension Name: {0}\n  Specification Vendor: {1}\n  Specification Version: {2}\n  Implementation Vendor: {3}\n  Implementation Vendor-Id: {4}\n  Implementation Version: {5}\n  Implementation URL: {6}
classloader.bad-classpath-entry.error=Cannot load manifest from classpath reference: {0}.
classloader.child.creation.error=Internal error while attempt to construct a child classloader model for containment profile: {0}.


# DefaultContainmentModel
# =======================
containment.classloader.create.error=Unable to create a classloader for the containment context: {0}.
containment.container.create.error=Unable to create nested containment model: {1} in the containment model {0}.
containment.deployment.create.error=Unable to create a nested deployment model: {1} in the containment model {0}.
containment.unknown-profile-class.error=Unknown profile class: {1} in {0}.
containment.context.home.not-a-directory.error=Supplied home dir is not a directory: {0}
containment.context.temp.not-a-directory.error=Supplied temp dir is not a directory: {0}
containment.add=installing: {0}
containment.model.create.error=Unexpected error while attempting to build a model within the containment context [{0}] for a dependency [{1}].
containment.model.create.deployment.error=Unexpected error while attempting to build a deployment profile from the template [{0}] within the containment context [{1}] for a component type [{2}].
target.ignore=Ignoring target directive as the path [{0}] does not refer to a known component within the containment model {1}.


# DefaultDeploymentModel
# ======================
deployment.parameters.irrational=Illegal attempt to set a parameter value for a component type '{0}' that is not parameterizable in the model: {1}.
deployment.configuration.irrational=Illegal attempt to set a configuration value for a component type '{0}' that is not configurable in the model: {1}.
deployment.context.home.not-a-directory.error=Supplied home dir is not a directory: {0}
deployment.context.temp.not-a-directory.error=Supplied temp dir is not a directory: {0}
deployment.context.runtime-get="Unable to resolve context value for key {0} due to an unexpected runtime error in: " {1}
deployment.inconsitent-strategy.error=The custom contextualization strategy interface class [{0}] is not implemented by the component class [{1}].
deployment.missing-strategy.error=The custom contextualization strategy interface class [{0}] declared by the class [{1}] is not present in the containment context classloader.
deployment.context.invalid-key-request=The requested context resolution for the key [{0}] cannot be performed because the component type does declare an entry declaration as a key or alias.
deployment.context.internal.error=The context key [{0}] was recognized but could not be fulfilled as no context entry manager has be assigned to handle the request.
deployment.registration.override.error=Illegal attempt to override an existing model entry [{0}].

assembly.context.error=Assembly of the model [{0}] could not be completed due to an unresolvable custom contextualization stage dependency for the interface [{1}].
assembly.dependency.error=Assembly of the model [{0}] could not be completed due to an unresolvable service dependency for the key [{1}].
assembly.stage.error=Assembly of the model [{0}] could not be completed due to an unresolvable stage dependency for the key [{1}].
assembly.transitional.error=Illegal attempt to assemble [{0}] while the the model is in a state of transition.
assembly.reassembly.error=Illegal attempt to re-assemble the model [{0}].
assembly.dissassembly.transitional.error=Illegal attempt to dissassemble [{0}] while the model is in a state of transition.
assembly.dissassembly.state.error=Illegal attempt to dissassemble a dissassembled model [{0}].
assembly.context-strategy.bad-class.error=Context strategy handler class [{0}] does not implement the org.apache.avalon.activation.lifecycle.ContextualizationHandler interface defined in the container classloader.


# DefaultSystemContext
# ====================
system.error.base-not-a-directory=Base directory argument is not a directory: {0}.
system.error.classload=Cannot load Runtime [{0}].
system.error.runtime.no-constructor=Runtime class [{0}] does not declare a public constructor.
system.error.unrecognized-runtime-parameter=Runtime constructor in [{0}] is requesting an unrecognized parameter [{1}].
system.error.runtime-instantiation=Cannot create runtime [{0}] due to an instantiation error.
system.error.runtime-establishment=Cannot load runtime [{0}].

# DefaultTypeRepository
# =====================
type.repository.null-create.error=Internal error while creating NullComponent type defintion. {0}
type.repository.bootstrap.error=bootstrap: {0}
type.repository.count=type install count: {0}
type.repository.addition=registered [type:{0}/{1}].
type.repository.unknown-type=Unable to locate a component type descriptor for the component class [{0}] in the classloader.  Please verify that the component classname is correct and that a component type descriptor is included in a jar file available within the container classloader.
type.repository.completion=type registration complete


#Scanner
# ======
scanner.scanning=scanning: {0}
scanner.dir-scan.error=Unexpected error while attempting to scan directory: {0}
scanner.nested-jar-unsupported.error=Embeded jar file loading not supported: {0}
scanner.stream.unrecognized-content.warning=Unrecognized content: {0}
scanner.stream.content.error=Content related error while scanning url: {0}
scanner.jar.error=Unexpected error while scanning jar file: {0}
scanner.type.addition=type: {0}
scanner.type.verification.failure=Ignoring type due to verification error: {0}
scanner.service.addition=type: {0}
scanner.service.verification.failure=Ignoring service due to verification error: {0}
scanner.service.missing-class.error=Cannot load service because the implementation class for service [{0}] does not exist within the classloader.
scanner.service.bad-class.error=Cannot load service [{0}] because the class references the class [{1}] which does not exist in the classloader.
scanner.url-not-a-directory.error=URL does not refer to a directory: {0}
scanner.not-file-protocol.error=URL protocol does not match the required 'file' protocol: {0}
scanner.type.missing-class.error=Cannot load component type because the type class {0} does not exist in the classloader.
scanner.type.bad-class.error=Component type [{0}] contains a reference to the class [{1}] which does not exist in the classloader.
scanner.extension.bad-class.error=Cannot load component type [{0}] because the type declares an extension class [{1}] which cannot be loaded due to a missing class [{2}].
scanner.extension.missing.error=Cannot load component type [{0}] contains because the extension class it declares [{1}] does not exist in the classloader.
scanner.type.verification.ncdf.failure=Ignoring component type [{0}] as the implementation class contains a reference to the class [{1}] which does not exist in the classloader.

# DefaultImportModel
# ==================
import.type-conflict.error=The object returned from the internal deployment context matching the import directive key: {0} does not implement the context entry class: {1} requested by the component under its local key: {2}.;
import.missing-entry.error=Cannot import context entry [{0}] requested for the component context entry key [{1}] because the requested import key is unknown within the scope of the supplied containment context.
import.load.error=Cannot load context entry for the component key: {0} because a corresponding import directive could not load the class {1} declared as a constraint by the component type entry declaration.
import.null-object.error=Resolution of the include directive for the containment key {0} undeer the component context entry {1) return a null object reference. 

#DefaultContextModel
# ==================
context.strategy.custom=custom strategy: {0}
context.strategy.avalon=avalon strategy
context.non-standard-key.error=The component has requested a context entry that is not know within the family of standard context keys.  The offending key is: {0}.
context.non-standard-avalon-key.error=The component has requested a Avalon context entry that is not know within the family of standard Avalon context keys.  The offending key is: {0}.
context.non-standard-system-key.error=The component has requested a system context entry that is not know within the family of standard context keys.  The offending key is: {0}.
context.unknown-system-key.error=The component has requested a system context entry that is not know within the family of standard Merlin context keys.  The offending key is: {0}.
context.missing-directive.error=The component has requested a non-avalon context entry. The container cannot resolve this request because no entry directive can be found the matches the key: {0}.
context.unsupported-directive.error=The component has requested a context entry under the key [{0}]. The container cannot resolve this request because the entry directive type [{1}] is not supported at this time.
context.non-compliance-constructor.error="Custom context class [{0}] does not implement a constructor pattern <init>( org.apache.avalon.framework.Context ).
context.custom-unexpected.error=Unexpected error occured while attempting to construct a custom context using the class [{0}].
context.strategy.custom.missing.error=Custom stategy class [{0}] is not present in the classpath. 
context.strategy.custom.unexpected.error=Unable to load the custom stategy class [{0}] due to an unexpected error. 
context.strategy.avalon.missing.error=Classic Avalon context stategy class [{0}] is not present in the classpath. 
context.strategy.avalon.unexpected.error=Unable to load the classic Avalon stategy class [{0}] due to an unexpected error. 

# DefaultContext
# ==============
context.entry.model.error=Cannot fulfill request due to an model-related error while attempting to resolve a context entry for the key: {0}.
context.entry.key.error=Unknown key: {0}.

# DefaultConstructorModel
# =======================
constructor.descriptor.unknown.error=The constructor entry descriptor declared under the key [{0}] references a class [{1}] that does not exist within the associated classloader. 
constructor.descriptor.load.error=The constructor entry descriptor declared under the key [{0}] references a class [{1}] that that could not be loaded due to an runtime error.
constructor.directive.unknown.error=The constructor entry directive declared under the key [{0}] references a class [{1}] that does not exist within the associated classloader. 
constructor.directive.load.error=The constructor entry directive declared under the key [{0}] references a class [{1}] that that could not be loaded due to an runtime error. 
constructor.invalid-model.error=The component type declares a dependency under the context entry [{0}] on a runtime entry of the type [{1}], however, the corresponding directive declares a constructor that establishes an instance of the class [{2}] which does not implement or extend the class declared by the directive.

# DefaultDependencyModel
# ======================
dependency.unresolvable-directive.error=Unable to resolve a candidate deployment model for the dependency key [{0}] in the deployment model [{1}{2}] relative to the declared source directive [{3}].
dependency.bad-key.error=The supplied key [{0}] is unknown within the model [{1}{2}].
dependency.incompatible.error=Cannot process a selection for key [{0}] because an source directive has been declared.
dependency.invalid-criteria.error=Unknown criteria: [{0}] declared under the selection criteria referencing the feature: [{1}].
dependency.path.debug=Assigned source [{0}] for the dependency key [{1}].

