<?xml version="1.0"?>

<!-- 
 Copyright 2004 Apache Software Foundation
 Licensed  under the  Apache License,  Version 2.0  (the "License");
 you may not use  this file  except in  compliance with the License.
 You may obtain a copy of the License at 
 
   http://www.apache.org/licenses/LICENSE-2.0
 
 Unless required by applicable law or agreed to in writing, software
 distributed  under the  License is distributed on an "AS IS" BASIS,
 WITHOUT  WARRANTIES OR CONDITIONS  OF ANY KIND, either  express  or
 implied.
 
 See the License for the specific language governing permissions and
 limitations under the License.
-->

<document>
  <header>
    <title>Apache Financial Services</title>
    <authors>
      <person name="Stephen McConnell" email="mcconnell@apache.org"/>
    </authors>
  </header>
  <body>
    <section name="Apache Financial Services">
      <subsection name="Simple Bank : Interfaces">
        <p>
          The Simple Bank interfaces define a simplistic Bank from which
          multiple Account instances can be created and removed.
        </p>
      </subsection>
      <subsection name="Bank Interface">
        <p>
          The Bank interface services as a factory for accounts.  Using the 
          Bank, clients can create and destroy accounts.
        </p>
        <p><i>Bank.java</i></p>
<source><![CDATA[
package org.apache.bank;

public interface Bank
{
   /**
    * Create, register and return a new account.
    * @param name the name of the account holder
    * @return Account the account
    */
    Account createAccount( String name );

   /**
    * Returns an account based on a supplied account number.
    * @param id the account number
    * @return Account the bank account
    */
    Account getAccount( int id ) throws NoSuchAccountException;

   /**
    * Close an account.
    * @param id the account number
    */
    void closeAccount( int id ) throws PolicyException, NoSuchAccountException;

   /**
    * Get the number of accounts managed by the bank.
    * @return the number of accounts
    */
    int accounts();

}
]]></source>
      </subsection>
      <subsection name="Account Interface">
        <p>
          The Account interface encapsulates the services that a client can
          perform against an account - deposit of funds, withdrawls, and 
          account balance queries.
        </p>

        <p><i>Account.java</i></p>
<source><![CDATA[
package org.apache.bank;

public interface Account
{
   /**
    * Get the account name.
    * @return the account name
    */
    String getName();

   /**
    * Get the account number.
    * @return the account number
    */
    int getID();

   /**
    * Get the account balance.
    * @return the account balance
    */
    float getBalance();

   /**
    * Deposit funds into the account.
    * @param amount the amount of funds to deposit
    */
    void deposit( float amount );

   /**
    * Withdraw funds from the account.
    * @param amount the amount of funds to withdraw
    */
    void withdraw( float amount ) throws InsufficientFundsException;

}
]]></source>
      </subsection>
    </section>
  </body>

</document>




