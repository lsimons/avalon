
import java.io.File;

import org.apache.avalon.framework.service.Serviceable;
import org.apache.avalon.framework.service.ServiceException;
import org.apache.avalon.framework.service.ServiceManager;

import org.apache.avalon.magic.AbstractPlugin;

import org.apache.avalon.meta.info.ant.FormatEnum;
import org.apache.avalon.meta.info.ant.MetaTask;

public class AvalonMetaPlugin extends AbstractPlugin
    implements Serviceable
{
    private Object m_PreparePlugin;
    private Object m_JavaPlugin;
    private Object m_TestPlugin;
    
    public void service( ServiceManager man )
        throws ServiceException
    {
        m_PreparePlugin = man.lookup( "prepare" );
        m_JavaPlugin = man.lookup( "java" );
        m_TestPlugin = man.lookup( "test" );
    }
    
    public void meta()
    {
        notifyPreMethod( "meta" );
        File dest = new File( m_Context.getProjectDir(), m_Context.getProperty( "java.build.dest.dir" ) );
        generate( dest );
        notifyPostMethod( "meta" );
    }
    
    public void unitmeta()
    {
        notifyPreMethod( "unitmeta" );
        File dest = new File( m_Context.getProjectDir(), m_Context.getProperty( "unit.build.dest.dir" ) );
        generate( dest );
        notifyPostMethod( "unitmeta" );
    }
    
    public void generate( File destDir )
    {
        String format = m_Context.getProperty( "meta.format" );
        FormatEnum enumFormat = new FormatEnum();
        enumFormat.setValue( format );
        String postfix = m_Context.getProperty( "meta.postfix" );
        String destname = m_Context.getProperty( "meta.dest.dir" );
        String force = m_Context.getProperty( "meta.forces" );
        
        m_Project.addTaskDefinition( "avalonmeta", MetaTask.class );
        MetaTask metaTask = (MetaTask) m_Project.createTask( "avalonmeta" );
        metaTask.setPostfix( postfix );
        metaTask.setDestDir( destDir );
        metaTask.setFormat( enumFormat );
        metaTask.execute();
    }
}