<!--
This build.xml snippet contains targets for ant 1.5 that check whether
a specific libary is present, and offers targets for downloading them
if they're not.

It's kinda of a replacement for some maven functionality until maven
becomes stable.

Usage:
1) Copy this file to somewhere in your project.
2) Add the following to the top of your project's Ant build.xml script
(adjusting the path):

  <!DOCTYPE project [
    <!ENTITY check-targets SYSTEM "file:./check-targets.ent">
  ]>

3) Before the closing '</project>' in your build.xml, add this:

  &check-targets;

4) define the properties
	- lib.dir
	- project.class.path
	- Name
  
This is like expanding a macro: it pulls in the contents of this file.

A minimal build.xml would thus be:

<!DOCTYPE project [
<!ENTITY check-targets SYSTEM "file:./check-targets.ent">
]>

<project default="check-all-dependencies">
    <property name="Name" value="My Project"/>
    <property name="lib.dir" value="lib"/>
    <path id="project.class.path">
        <fileset dir="${lib.dir}">
            <include name="*.jar" />
        </fileset>
    </path>

    &check-targets;
</project>
-->

    <!-- Set up properties -->
    <target name="setup-dependencies">
        <available property="bsf.present"
               classname="com.bsf.BSFEngine"
               classpathref="project.class.path" />
        <available property="checkstyle.present"
               classname="com.puppycrawl.tools.checkstyle.Checker"
               classpathref="project.class.path" />
        <available property="javax.jms.present"
               classname="javax.jms.TopicConnection"
               classpathref="project.class.path" />
        <available property="javax.mail.present"
               classname="javax.mail.Message"
               classpathref="project.class.path" />
        <available property="javax.servlet.present"
               classname="javax.servlet.ServletContext"
               classpathref="project.class.path" />
        <available property="javax.sql.present"
               classname="javax.sql.DataSource"
               classpathref="project.class.path" />
        <available property="jdk14.present"
	       classname="java.util.logging.Logger"
	       classpathref="project.class.path" />
        <available property="junit.present"
               classname="junit.framework.Test"
               classpathref="project.class.path" />
        <available property="log4j.present"
	       classname="org.apache.log4j.Level"
	       classpathref="project.class.path" />
        <available property="logkit.present"
	       classname="org.apache.log.Hierarchy"
	       classpathref="project.class.path" />

	<property name="bsf.jar" value="bsf-2.2.jar"/>
	<property name="checkstyle.jar" value="checkstyle-2.4.jar"/>
	<property name="javamail.jar" value="javamail-1.3.jar"/>
	<property name="jdbc.jar" value="jdbc-2.0.jar"/>
	<property name="jms.jar" value="jms-1.0.2b.jar"/>
	<property name="junit.jar" value="junit-3.7.jar"/>
	<property name="log4j.jar" value="log4j-1.2.7.jar"/>
	<property name="logkit.jar" value="logkit-1.0.1.jar"/>
	<property name="servletapi.jar" value="servletapi-2.3.jar"/>
    </target>

  <!-- called if a dependency is missing -->
  <target name="missing-dependency-checking">
    <echo>*************************************************************************</echo>
    <echo>*</echo>
    <echo>*  Classes needed for compiling ${Name} against the ${thing} API</echo>
    <echo>*  are not available. The build may fail or some functionality may</echo>
    <echo>*  not be available.</echo>
    <echo>*</echo>
    <echo>*  Recovery:</echo>
    <echo>*  Run the build target import-${thing} and it will download</echo>
    <echo>*  the needed jar - you should be online for that.</echo>
    <echo>*</echo>
    <echo>*  If you have a fast connection you can also just run</echo>
    <echo>*  the build target import-all-dependencies, which will</echo>
    <echo>*  download all external jars this buildfile knows about.</echo>
    <echo>*  Note this may download unused jars as well.</echo>
    <echo>*</echo>
    <echo>*************************************************************************</echo>
    <echo/>
  </target>

  <!-- warning targets. These generate dependency warnings if a depedency is not there -->
  
  <target name="bsf-check" unless="bsf.present" depends="setup-dependencies">
    <antcall target="missing-dependency-checking">
      <param name="thing" value="bsf"/>
    </antcall>
  </target>

  <target name="checkstyle-check" unless="checkstyle.present" depends="setup-dependencies">
    <antcall target="missing-dependency-checking">
      <param name="thing" value="checkstyle"/>
    </antcall>
  </target>

  <target name="javamail-check" unless="javax.mail.present" depends="setup-dependencies">
    <antcall target="missing-dependency-checking">
      <param name="thing" value="javamail"/>
    </antcall>
  </target>

  <target name="jdbc-check" unless="javax.sql.present" depends="setup-dependencies">
    <antcall target="missing-dependency-checking">
      <param name="thing" value="jdbc"/>
    </antcall>
  </target>

  <target name="jdk14-check" unless="jdk14.present" depends="setup-dependencies">
    <echo>*************************************************************************</echo>
    <echo>*</echo>
    <echo>*  You are compiling with a pre-1.4 jdk. Some functionality may not be</echo>
    <echo>*  available.</echo>
    <echo>*************************************************************************</echo>
    <echo/>
  </target>

  <target name="jms-check" unless="javax.jms.present" depends="setup-dependencies">
    <antcall target="missing-dependency-checking">
      <param name="thing" value="jms"/>
    </antcall>
  </target>

  <target name="junit-check" unless="junit.present" depends="setup-dependencies">
    <antcall target="missing-dependency-checking">
      <param name="thing" value="junit"/>
    </antcall>
  </target>

  <target name="log4j-check" unless="log4j.present" depends="setup-dependencies">
    <antcall target="missing-dependency-checking">
      <param name="thing" value="log4j"/>
    </antcall>
  </target>

  <target name="logkit-check" unless="logkit.present" depends="setup-dependencies">
    <antcall target="missing-dependency-checking">
      <param name="thing" value="logkit"/>
    </antcall>
  </target>
  
  <target name="servletapi-check" unless="javax.servlet.present" depends="setup-dependencies">
    <antcall target="missing-dependency-checking">
      <param name="thing" value="servletapi"/>
    </antcall>
  </target>

  <!-- import targets. These get needed jars from the ibiblio repository -->
  
  <target name="import-bsf" depends="setup-dependencies">
    <get src="http://www.ibiblio.org/maven/bsf/jars/${bsf.jar}"
        dest="${lib.dir}/${bsf.jar}"
        verbose="true"
        usetimestamp="true"/>
  </target>

  <target name="import-checkstyle" depends="setup-dependencies">
    <get src="http://www.ibiblio.org/maven/checkstyle/jars/${checkstyle.jar}"
        dest="${lib.dir}/${checkstyle.jar}"
        verbose="true"
        usetimestamp="true"/>
  </target>

  <target name="import-javamail" depends="setup-dependencies">
    <get src="http://www.ibiblio.org/maven/javamail/jars/${javamail.jar}"
        dest="${lib.dir}/${javamail.jar}"
        verbose="true"
        usetimestamp="true"/>
  </target>

  <target name="import-jdbc" depends="setup-dependencies">
    <get src="http://www.ibiblio.org/maven/jdbc/jars/${jdbc.jar}"
        dest="${lib.dir}/${jdbc.jar}"
        verbose="true"
        usetimestamp="true"/>
  </target>

  <target name="import-jms" depends="setup-dependencies">
    <get src="http://www.ibiblio.org/maven/jms/jars/${jms.jar}"
        dest="${lib.dir}/${jms.jar}"
        verbose="true"
        usetimestamp="true"/>
  </target>

  <target name="import-junit" depends="setup-dependencies">
    <get src="http://www.ibiblio.org/maven/junit/jars/${junit.jar}"
        dest="${lib.dir}/${junit.jar}"
        verbose="true"
        usetimestamp="true"/>
  </target>

  <target name="import-log4j" depends="setup-dependencies">
    <get src="http://www.ibiblio.org/maven/log4j/jars/${log4j.jar}"
        dest="${lib.dir}/${log4j.jar}"
        verbose="true"
        usetimestamp="true"/>
  </target>

  <target name="import-logkit" depends="setup-dependencies">
    <get src="http://www.ibiblio.org/maven/logkit/jars/${logkit.jar}"
        dest="${lib.dir}/${logkit.jar}"
        verbose="true"
        usetimestamp="true"/>
  </target>

  <target name="import-servletapi" depends="setup-dependencies">
    <get src="http://www.ibiblio.org/maven/servletapi/jars/${servletapi.jar}"
        dest="${lib.dir}/${servletapi.jar}"
        verbose="true"
        usetimestamp="true"/>
  </target>
  
  <target name="check-all-dependencies"
          depends="bsf-check,checkstyle-check,javamail-check,jdbc-check,jms-check,junit-check,log4j-check,logkit-check,servletapi-check"
	  description="checks for all dependencies we know about. This is usually more than the minimum needed to build this project; actual use is not recommended."/>
  <target name="import-all-dependencies"
          depends="import-bsf,import-checkstyle,import-javamail,import-jdbc,import-jms,import-junit,import-log4j,import-logkit,import-servletapi"
	  description="checks for all dependencies we know about. This is usually more than the minimum needed to build this project; actual use is not recommended."/>

