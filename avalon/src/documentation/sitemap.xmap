<?xml version="1.0"?>

<map:sitemap xmlns:map="http://apache.org/cocoon/sitemap/1.0">

<!-- =========================== Components ================================ -->

 <map:components>

  <map:generators default="file">
   <map:generator  name="file"        src="org.apache.cocoon.generation.FileGenerator" label="content"/>
   <!-- FIXME: Change this once better view handling is implemented -->
   <map:generator  name="file-nolabel" src="org.apache.cocoon.generation.FileGenerator"/>
  </map:generators>

  <map:transformers default="xslt">
   <map:transformer     name="xslt"      src="org.apache.cocoon.transformation.TraxTransformer">
    <use-request-parameters>false</use-request-parameters>
    <use-browser-capabilities-db>false</use-browser-capabilities-db>
   </map:transformer>
   <map:transformer     name="xinclude"  src="org.apache.cocoon.transformation.XIncludeTransformer"/>   
  </map:transformers>

  <map:readers default="resource">
   <map:reader name="resource"       src="org.apache.cocoon.reading.ResourceReader"/>
  </map:readers>

  <map:serializers default="html">
   <map:serializer name="html"   mime-type="text/html"        src="org.apache.cocoon.serialization.HTMLSerializer">
     <encoding>iso8859-1</encoding>
   </map:serializer>

   <map:serializer name="html-loose"   mime-type="text/html"        src="org.apache.cocoon.serialization.HTMLSerializer">
    <doctype-public>-//CollabNet//DTD XHTML 1.0 Transitional//EN</doctype-public>
    <doctype-system>http://collabnet.com/dtds/collabnet_transitional_10.dtd</doctype-system>
    <encoding>iso8859-1</encoding>
    <omit-xml-declaration>yes</omit-xml-declaration>     
   </map:serializer> 
   <map:serializer name="pdf" mime-type="application/pdf"     src="org.apache.cocoon.serialization.FOPSerializer">
     <encoding>iso8859-1</encoding>
   </map:serializer>      
   <map:serializer name="xml"    mime-type="text/xml"         src="org.apache.cocoon.serialization.XMLSerializer">
     <encoding>iso8859-1</encoding>
   </map:serializer>   
   <map:serializer name="links"                               src="org.apache.cocoon.serialization.LinkSerializer">
     <encoding>iso8859-1</encoding>
   </map:serializer>   
  </map:serializers>

  <map:matchers default="wildcard">
   <map:matcher name="wildcard" src="org.apache.cocoon.matching.WildcardURIMatcher"/>
  </map:matchers>
<!--  
  <map:selectors default="skin-parameter">
    <map:selector name="request-parameter" logger="sitemap.selector.request-parameter"
                 src="org.apache.cocoon.selection.RequestParameterSelector">
      <parameter-name>skin</parameter-name> 
    </map:selector>
    <map:selector name="style-parameter" logger="sitemap.selector.request-parameter"
                 src="org.apache.cocoon.selection.RequestParameterSelector">
      <parameter-name>style</parameter-name> 
    </map:selector>
   
  </map:selectors>
-->  
 </map:components>

<!-- =========================== Views =================================== -->

 <map:views>
  <map:view name="content" from-label="content">
   <map:serialize type="xml"/>
  </map:view>

  <map:view name="links" from-position="last">
   <map:transform src="library/xslt/filterlinks.xsl"/>
   <map:serialize type="links"/>
  </map:view>
 </map:views>

 <map:resources>
  <map:resource name="skinit">
   <map:transform src="skins/@skin@/xslt/html/{type}.xsl"/>
   <map:serialize/>
  </map:resource>

  <map:resource name="skin-read">
    <map:read src="skins/@skin@/{path}" mime-type="{mime-type}"/>
  </map:resource>

 </map:resources>
 
<!-- =========================== Pipelines ================================= -->

 <map:pipelines>
  
  <map:pipeline>
  
   <map:match pattern="">
    <map:redirect-to uri="index.html"/>
   </map:match>
   
 <!--

  <map:pipeline>
   <map:match pattern="">
     <map:redirect-to uri="page3333.html"/>
   </map:match>

   <map:match pattern="*[*].html">
     <map:aggregate element="site" label="content">
       <map:part src="site.xml" />
       <map:part src="index.xml"/>
       <map:part src="{1}.xml" element="book"/>
     </map:aggregate>
     <map:transform src="site2html.xsl">
       <map:parameter name="page-index" value="{2}"/>
       <map:parameter name="page-count" value="5"/>
       <map:parameter name="page-name" value="{1}"/>
     </map:transform>
     <map:serialize/>
   </map:match>
-->
   
   <map:match pattern="**book-**.xml">
     <map:generate src="content/xdocs/{1}book.xml"/>
     <map:call resource="skinit">
      <map:parameter name="type" value="book2menu"/>
     </map:call>         
   </map:match>

   <map:match pattern="body-todo.xml">
     <map:generate type="file-nolabel" src="content/xdocs/todo.xml"/>
     <map:transform src="library/xslt/todo2document.xsl" label="content"/>
     <map:call resource="skinit">
      <map:parameter name="type" value="document2html"/>
     </map:call>         
   </map:match>

   <map:match pattern="body-changes.xml">
     <map:generate type="file-nolabel" src="content/xdocs/changes.xml"/>
     <map:transform src="library/xslt/changes2document.xsl" label="content"/>
     <map:call resource="skinit">
      <map:parameter name="type" value="document2html"/>
     </map:call>    
   </map:match>

   <map:match pattern="body-faq.xml">
     <map:generate type="file-nolabel" src="content/xdocs/faq.xml"/>
     <map:transform src="library/xslt/faq2document.xsl" label="content"/>
     <map:call resource="skinit">
      <map:parameter name="type" value="document2html"/>
     </map:call>    
   </map:match>

   <map:match pattern="body-developing/*.xml">
     <map:generate type="file-nolabel" src="content/xdocs/developing/{1}.xml" />
     <map:transform src="library/xslt/docbook2body.xsl" label="content"/>     
     <map:serialize type="xml"/>      
   </map:match>

   <map:match pattern="body-authors/*.xml">
     <map:generate type="file-nolabel" src="content/xdocs/authors/{1}.xml" />
     <map:transform src="library/xslt/docbook2body.xsl" label="content"/>     
     <map:serialize type="xml"/>      
   </map:match>
   
   <!-- Generate the "doclist" - list of all documentation
     The first match generates each book.xml and adds a new attribute "uri".
     The second match aggregates each book.xml into a doclist and
     then converts it to a document.
   -->
   <map:match pattern="doclist/content/xdocs/**book.xml">
     <map:generate src="content/xdocs/{1}book.xml"/>
     <map:transform src="library/xslt/doclist.xsl">
       <map:parameter name="uri" value="{1}"/>
     </map:transform>
     <map:serialize type="xml"/>
   </map:match>
   
   <map:match pattern="body-doclist.xml">
     <map:aggregate element="doclist">
       <map:part src="cocoon:/doclist/content/xdocs/book.xml"/>
     </map:aggregate>
     <map:transform src="library/xslt/doclist2document.xsl"/>
     <map:call resource="skinit">
      <map:parameter name="type" value="document2html"/>
     </map:call>    
   </map:match>
   
   <map:match pattern="body-**.xml">
     <map:generate src="content/xdocs/{1}.xml"/>
     <map:call resource="skinit">
      <map:parameter name="type" value="document2html"/>
     </map:call>    
   </map:match>

   <map:match pattern="developing/*.html">
    <map:aggregate element="site">
     <map:part src="cocoon:/developing/book-developing/{1}.xml"/>
     <map:part src="cocoon:/body-developing/{1}.xml"/>
    </map:aggregate>
     <map:call resource="skinit">
      <map:parameter name="type" value="site2xhtml"/>
     </map:call>    
   </map:match>

   <map:match pattern="authors/*.html">
    <map:aggregate element="site">
     <map:part src="cocoon:/authors/book-authors/{1}.xml"/>
     <map:part src="cocoon:/body-authors/{1}.xml"/>
    </map:aggregate>
     <map:call resource="skinit">
      <map:parameter name="type" value="site2xhtml"/>
     </map:call>    
   </map:match>
       
   <map:match pattern="*.html">
    <map:aggregate element="site">
     <map:part src="cocoon:/book-{1}.xml"/>
     <map:part src="cocoon:/body-{1}.xml" label="content"/>
    </map:aggregate>
     <map:call resource="skinit">
      <map:parameter name="type" value="site2xhtml"/>
     </map:call>    
   </map:match>

   <map:match pattern="**/*.html">
    <map:aggregate element="site">
     <map:part src="cocoon:/{1}/book-{1}/{2}.xml"/>
     <map:part src="cocoon:/body-{1}/{2}.xml" label="content"/>
    </map:aggregate>
     <map:call resource="skinit">
      <map:parameter name="type" value="site2xhtml"/>
     </map:call>    
   </map:match>

  
   
<!--  
   <map:match pattern="**developing-with-avalon.pdf">
     <map:generate src="content/xdocs/developing/index.xml"/>
     <map:transform type="xinclude"/> 
     <map:transform src="library/xslt/docbook2fo.xsl"/>
     <map:serialize type="pdf"/>
   </map:match>
-->      
   <!-- ================  Static  =========================== -->
   
   <map:match pattern="skin/**.js">
    <map:call resource="skin-read">
      <map:parameter name="path" value="scripts/{1}.js"/>
      <map:parameter name="mime-type" value="application/javascript"/>
    </map:call>     
   </map:match>

   <map:match pattern="**/skin/**.js">
    <map:call resource="skin-read">
      <map:parameter name="path" value="scripts/{2}.js"/>
      <map:parameter name="mime-type" value="application/javascript"/>
    </map:call>     
   </map:match>
      
   <map:match pattern="**.js">
     <map:read src="resources/scripts/{1}.js" mime-type="application/javascript"/>
   </map:match>
   
   <map:match pattern="skin/**.css">
    <map:call resource="skin-read">
      <map:parameter name="path" value="css/{1}.css"/>
      <map:parameter name="mime-type" value="text/css"/>
    </map:call>
   </map:match>

   <map:match pattern="**/skin/**.css">
    <map:call resource="skin-read">
      <map:parameter name="path" value="css/{2}.css"/>
      <map:parameter name="mime-type" value="text/css"/>
    </map:call>
   </map:match>

   <map:match pattern="**.css">
    <map:read src="resources/css/{1}.css" mime-type="text/css"/>
   </map:match>
         
   <map:match pattern="skin/images/**.*">
    <map:call resource="skin-read">
      <map:parameter name="path" value="images/{1}.{2}"/>
      <map:parameter name="mime-type" value="image/{2}"/>
    </map:call>                                 
   </map:match>

   <map:match pattern="**/skin/images/**.*">
    <map:call resource="skin-read">
      <map:parameter name="path" value="images/{2}.{3}"/>
      <map:parameter name="mime-type" value="image/{3}"/>
    </map:call>                                 
   </map:match>
      
   <map:match pattern="images/**.*">
    <map:read src="resources/images/{1}.{2}" mime-type="image/{2}"/>
   </map:match>

   <map:match pattern="**/images/**.*">
    <map:read src="resources/images/{2}.{3}" mime-type="image/{3}"/>
   </map:match>

   
   <map:match pattern="**favicon.ico">
    <map:call resource="skin-read">
      <map:parameter name="path" value="images/favicon.ico"/>
      <map:parameter name="mime-type" value="application/ico"/>
    </map:call>    
   </map:match>
         
  </map:pipeline>
 </map:pipelines>

</map:sitemap>
