<?xml version="1.0"?>

<map:sitemap xmlns:map="http://apache.org/cocoon/sitemap/1.0">

<!-- =========================== Components ================================ -->

 <map:components>

  <map:generators default="file">
   <map:generator  name="file"        src="org.apache.cocoon.generation.FileGenerator" label="content"/>
   <map:generator  name="directory"   src="org.apache.cocoon.generation.DirectoryGenerator" label="content"/>
   <map:generator  name="html"        src="org.apache.cocoon.generation.HTMLGenerator" label="content"/>
   <map:generator  name="libre"       src="org.apache.forrest.yer.use.cocoon.HierarchyGenerator" label="content"/>
   <map:generator  name="nekodtd"     src="org.apache.forrest.components.generator.XNIConfigurableFileGenerator" label="content"/>
   <!-- FIXME: Change this once better view handling is implemented -->
   <map:generator  name="file-nolabel" src="org.apache.cocoon.generation.FileGenerator"/>
  </map:generators>

  <map:transformers default="xslt">
  <!--
   <map:transformer     name="xslt"      src="org.apache.cocoon.transformation.TraxTransformer">
    <use-request-parameters>false</use-request-parameters>
    <use-browser-capabilities-db>false</use-browser-capabilities-db>
   </map:transformer>
  -->
    <map:transformer name="xslt" src="org.apache.cocoon.transformation.TraxTransformer"
                        logger="sitemap.transformer.xsltc"
                        pool-max="32" pool-min="8" pool-grow="2">
      <use-request-parameters>false</use-request-parameters>
      <use-browser-capabilities-db>false</use-browser-capabilities-db>
      <use-deli>false</use-deli>
      <!-- transformer-factory>com.icl.saxon.TransformerFactoryImpl</transformer-factory -->
      <!-- transformer-factory>org.apache.xalan.xsltc.trax.TransformerFactoryImpl</transformer-factory -->
    </map:transformer>
  </map:transformers>
      
  <map:readers default="resource">
   <map:reader name="resource"       src="org.apache.cocoon.reading.ResourceReader"/>
  </map:readers>

  <map:serializers default="html">
   <map:serializer name="html"   mime-type="text/html"        src="org.apache.cocoon.serialization.HTMLSerializer">
    <doctype-public>-//W3C//DTD HTML 4.01 Transitional//EN</doctype-public>
     <encoding>ISO-8859-1</encoding>
   </map:serializer>

   <map:serializer name="xml"    mime-type="text/xml"         src="org.apache.cocoon.serialization.XMLSerializer">
     <encoding>ISO-8859-1</encoding>
   </map:serializer>

   <map:serializer name="fo2pdf"
                src="org.apache.cocoon.serialization.FOPSerializer"
                mime-type="application/pdf"/>


   <map:serializer name="links"                               src="org.apache.cocoon.serialization.LinkSerializer">
     <encoding>ISO-8859-1</encoding>
   </map:serializer>
   <map:serializer name="svg2jpeg" mime-type="image/jpeg"     src="org.apache.cocoon.serialization.SVGSerializer">
       <parameter name="quality" type="float" value="1.0"/>
   </map:serializer>
   <map:serializer name="svg2png" mime-type="image/png"       src="org.apache.cocoon.serialization.SVGSerializer"/>
  </map:serializers>

  <map:matchers default="wildcard">
   <map:matcher name="wildcard" src="org.apache.cocoon.matching.WildcardURIMatcher"/>
  </map:matchers>
<!--
  <map:selectors default="skin-parameter">
    <map:selector name="request-parameter" logger="sitemap.selector.request-parameter"
                 src="org.apache.cocoon.selection.RequestParameterSelector">
      <parameter-name>skin</parameter-name>
    </map:selector>
    <map:selector name="style-parameter" logger="sitemap.selector.request-parameter"
                 src="org.apache.cocoon.selection.RequestParameterSelector">
      <parameter-name>style</parameter-name>
    </map:selector>

  </map:selectors>
-->
  <map:actions>
   <!-- <map:action logger="sitemap.action.request" name="request" src="org.apache.cocoon.acting.RequestParamAction"/> -->
    <map:action logger="sitemap.action.resource-exists" name="resource-exists" src="org.apache.cocoon.acting.ResourceExistsAction"/>
  </map:actions>

  <!--
     The different pipeline implementations
  -->
  <map:pipelines default="caching">
     <map:pipeline name="caching" src="org.apache.cocoon.components.pipeline.impl.CachingProcessingPipeline"/>
     <map:pipeline name="noncaching" src="org.apache.cocoon.components.pipeline.impl.NonCachingProcessingPipeline"/>
     <!-- The following two can be used for profiling:
     <map:pipeline name="profile-caching" src="org.apache.cocoon.components.profiler.ProfilingCachingProcessingPipeline"/>
     <map:pipeline name="profile-noncaching" src="org.apache.cocoon.components.profiler.ProfilingNonCachingProcessingPipeline"/>
     -->
  </map:pipelines>
  
 </map:components>

<!-- =========================== Views =================================== -->

 <map:views>
  <map:view name="content" from-label="content">
   <map:serialize type="xml"/>
  </map:view>

  <map:view name="links" from-position="last">
   <map:transform src="resources/stylesheets/avfilterlinks.xsl"/>
   <map:serialize type="links"/>
  </map:view>
 </map:views>

 <map:resources>
  <map:resource name="skinit">
   <map:transform src="skins/{defaults:skin}/xslt/html/{type}.xsl">
     <map:parameter name="isfaq" value="{isfaq}"/>
     <map:parameter name="nopdf" value="{nopdf}"/>
     <map:parameter name="path" value="{path}"/>
     <!-- Can set an alternative project skinconfig here 
     <map:parameter name="config-file" value="../../../../skinconf.xml"/>
     -->
   </map:transform>
   <map:serialize/>
  </map:resource>

  <map:resource name="book">
    <map:generate src="content/{../1}book.xml"/>
    <map:call resource="skinit">
      <map:parameter name="type" value="book2menu"/>
      <map:parameter name="path" value="{path}"/>
    </map:call>
  </map:resource>

  <map:resource name="skin-read">
    <map:read src="skins/{defaults:skin}/{path}" mime-type="{mime-type}"/>
  </map:resource>

 </map:resources>

<!-- =========================== Pipelines ================================= -->

 <map:pipelines>
  
  <!-- Pipeline that manages the internal URI space
       For the external URI space manager, see the next pipeline. -->
  <map:pipeline internal-only="true">

  <map:match pattern="**tab-**.xml">
    <map:generate src="content/tabs.xml"/>
    <map:call resource="skinit">
     <map:parameter name="type" value="tab2menu"/>
     <map:parameter name="path" value="{2}"/>
    </map:call>
  </map:match>

  <map:match pattern="**book-**/*.xml">
    <map:call resource="book">
     <map:parameter name="path" value="{2}/{3}.xml"/>
    </map:call>
  </map:match>

  <map:match pattern="**book-**.xml">
    <map:call resource="book">
      <map:parameter name="path" value="{2}.xml"/>
    </map:call>
  </map:match>

   <!-- Redirect requests for community/ (eg in the trail) to the home page -->
   <map:match pattern="community/index.html">
     <map:redirect-to uri="../index.html"/>
   </map:match>

   <map:match pattern="body-**/*.xml">
    <map:generate src="content/{1}/{2}.xml"/>
    <map:call resource="skinit">
     <map:parameter name="type" value="document2html"/>
     <map:parameter name="path" value="{1}/{2}.xml"/>
    </map:call>
    </map:match>

   <!-- Generates body HTML for root-level files -->
   <map:match pattern="body-**.xml">
    <map:generate src="content/{1}.xml"/>
    <map:call resource="skinit">
     <map:parameter name="type" value="document2html"/>
     <map:parameter name="path" value="{1}.xml"/>
    </map:call>
   </map:match>

  </map:pipeline>


  <map:pipeline internal-only="false">

   <!-- =========   External URI-space    ============ -->   
   <map:match pattern="">
    <map:redirect-to uri="{context:context}/index.html"/>
   </map:match>

   <map:match pattern="**">
   
    <!-- if the file is present verbatim as content, give that to the user... -->
    <map:act type="resource-exists">
     <map:parameter name="url" value="content/{1}"/>
     <map:read src="content/{../1}"/>
    </map:act>
   
   <map:match pattern="*.html">
    <map:aggregate element="site">
     <map:part src="cocoon:/book-{1}.xml"/>
     <map:part src="cocoon:/tab-{1}.xml"/>
     <map:part src="cocoon:/body-{1}.xml" label="content"/>
    </map:aggregate>
    <map:call resource="skinit">
      <map:parameter name="type" value="site2xhtml"/>
      <map:parameter name="path" value="{0}"/>
    </map:call>
   </map:match>

   <map:match pattern="**/*.html">
    <map:aggregate element="site">
     <map:part src="cocoon:/{1}/book-{1}/{2}.xml"/>
     <map:part src="cocoon:/{1}/tab-{1}/{2}.xml"/>
     <map:part src="cocoon:/body-{1}/{2}.xml" label="content"/>
    </map:aggregate>
     <map:call resource="skinit">
      <map:parameter name="type" value="site2xhtml"/>
      <map:parameter name="path" value="{0}"/>
     </map:call>
   </map:match>

   <map:match pattern="**.pdf">
    <map:generate src="content/{1}.xml"/>
    <map:transform src="skins/{defaults:skin}/xslt/fo/document2fo.xsl"/>
    <map:serialize type="fo2pdf"/>
   </map:match>

   <!-- ================  Directory redirects   =========================== -->
   <!-- Redirect any request for a directory to the directory's index.html file  -->
   <map:match pattern="**/">
     <map:redirect-to uri="{context:context}/{1}/index.html"/>
   </map:match>

   <!-- ================  Static  =========================== -->
   <map:match pattern="skin/**.css">
    <map:call resource="skin-read">
      <map:parameter name="path" value="css/{1}.css"/>
      <map:parameter name="mime-type" value="text/css"/>
    </map:call>
   </map:match>

   <map:match pattern="**/skin/**.css">
    <map:call resource="skin-read">
      <map:parameter name="path" value="css/{2}.css"/>
      <map:parameter name="mime-type" value="text/css"/>
    </map:call>
   </map:match>

   <map:match pattern="**.css">
    <map:read src="resources/css/{1}.css" mime-type="text/css"/>
   </map:match>

   <map:match pattern="skin/images/**.*">
    <map:call resource="skin-read">
      <map:parameter name="path" value="images/{1}.{2}"/>
      <map:parameter name="mime-type" value="image/{2}"/>
    </map:call>
   </map:match>

   </map:match>
   
  </map:pipeline>
 </map:pipelines>

</map:sitemap>

