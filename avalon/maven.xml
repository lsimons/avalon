<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE project [
  <!ENTITY % index SYSTEM "file:index.ent"> %index;
]>
<project default="avalon:help" xmlns:maven="jelly:maven" xmlns:j="jelly:core" xmlns:util="jelly:util" xmlns:ant="jelly:ant">

  <goal name="avalon:help">
    <echo>
To build the avalon platform you need to invoke the following three goals:

  $ maven plugins
  $ maven meta
  $ maven merlin

Subsequent builds can be achieved using:

  $ maven merlin

A set of utility goals are also provided that build projects including the building all dependent projects.  These include:

  util
  framework
  meta
  repository
  logging
  composition
  activation
  merlin

To build a project independnet of dependent project groups is possible using any of the above targets by prepending the "x" character.  For example, to locally build the meta package without triggering dependent project builds, just enter the following command:

  maven xmeta

      </echo>
  </goal>

  <!--
  <goal name="avalon:build" description="Build the Avalon Platform."
    prereqs="xmeta,xutil,xrepo,xlogging,xcomposition,xactivation,xmerlin"/>
  -->

  <goal name="plugins" prereqs="xplugins"/>

  <goal name="util" prereqs="xutil"/>
  <goal name="framework" prereqs="xframework"/>
  <goal name="meta" prereqs="framework,xmeta"/>
  <goal name="repository" prereqs="util,xrepository"/>
  <goal name="logging" prereqs="repository,xlogging"/>
  <goal name="composition" prereqs="repository,meta,logging,xcomposition"/>
  <goal name="activation" prereqs="composition,xactivation"/>
  <goal name="merlin" prereqs="activation,xmerlin"/>

  <goal name="xframework">
    <maven:reactor basedir="${basedir}"
      includes="framework/project.xml"
      banner="Building:"
      goals="avalon:build"
      ignoreFailures="false" 
      postProcessing="false" />
  </goal>

  <goal name="xutil">
    <maven:reactor basedir="${basedir}"
      includes="util/project.xml"
      banner="Building:"
      goals="avalon:build"
      ignoreFailures="false" 
      postProcessing="false" />
  </goal>

  <goal name="xmeta">
    <maven:reactor basedir="${basedir}"
      includes="meta/project.xml"
      banner="Building:"
      goals="avalon:build"
      ignoreFailures="false" 
      postProcessing="false" />
  </goal>

  <goal name="xrepository">
    <maven:reactor basedir="${basedir}"
      includes="repository/project.xml"
      banner="Building:"
      goals="avalon:build"
      ignoreFailures="false" 
      postProcessing="false" />
  </goal>

  <goal name="xlogging">
    <maven:reactor basedir="${basedir}"
      includes="logging/project.xml"
      banner="Building:"
      goals="avalon:build"
      ignoreFailures="false" 
      postProcessing="false" />
  </goal>

  <goal name="xcomposition">
    <maven:reactor basedir="${basedir}"
      includes="composition/project.xml"
      banner="Building:"
      goals="avalon:build"
      ignoreFailures="false" 
      postProcessing="false" />
  </goal>

  <goal name="xactivation">
    <maven:reactor basedir="${basedir}"
      includes="activation/project.xml"
      banner="Building:"
      goals="avalon:build"
      ignoreFailures="false" 
      postProcessing="false" />
  </goal>

  <goal name="xmerlin">
    <maven:reactor basedir="${basedir}"
      includes="merlin/project.xml"
      banner="Building:"
      goals="avalon:build"
      ignoreFailures="false" 
      postProcessing="false" />
  </goal>

  <goal name="xplugins">
    <maven:reactor basedir="${basedir}"
      includes="maven-plugins/project.xml"
      banner="Building:"
      goals="avalon:build"
      ignoreFailures="false" 
      postProcessing="false" />
  </goal>

  <goal name="xtutorials">
    <maven:reactor basedir="${basedir}"
      includes="tutorials/project.xml"
      banner="Building:"
      goals="avalon:build"
      ignoreFailures="false" 
      postProcessing="false" />
  </goal>

  <!--
  ==============================================================================
  filter resources 
  ==============================================================================
  -->

  <preGoal name="java:jar-resources">
    <ant:filter token="AVALON-LOGGING-LOGKIT-SPEC" 
        value="&avalon-logging-logkit-artifact-spec;"/>
    <ant:filter token="MERLIN_IMPLEMENTATION" 
        value="artifact:merlin/merlin-impl#&merlin-impl-version;"/>
    <ant:filter token="LOGGING_IMPLEMENTATION" 
        value="&avalon-logging-logkit-artifact;"/>
    <ant:filter token="STANDARD_RUNTIME" 
        value="&avalon-activation-artifact;"/>
  </preGoal>

  <postGoal name="java:compile">

    <util:file var="merlinProperties" name="merlin.properties"/>
    <j:if test="${merlinProperties.exists()}">
      <ant:copy 
          file="merlin.properties" 
          toDir="${maven.build.dir}/classes" 
          verbose="yes"
          filtering="on">
        <filterset>
          <filter token="MERLIN_IMPLEMENTATION" value="&merlin-impl-artifact;"/>
          <filter token="LOGGING_IMPLEMENTATION" value="&avalon-logging-logkit-artifact;"/>
          <filter token="STANDARD_RUNTIME" value="&avalon-activation-artifact;"/>
        </filterset>
      </ant:copy>
    </j:if>
  </postGoal>

</project>
