<?xml version="1.0"?>

<!-- 
 Copyright 2004 Apache Software Foundation
 Licensed  under the  Apache License,  Version 2.0  (the "License");
 you may not use  this file  except in  compliance with the License.
 You may obtain a copy of the License at 
 
   http://www.apache.org/licenses/LICENSE-2.0
 
 Unless required by applicable law or agreed to in writing, software
 distributed  under the  License is distributed on an "AS IS" BASIS,
 WITHOUT  WARRANTIES OR CONDITIONS  OF ANY KIND, either  express  or
 implied.
 
 See the License for the specific language governing permissions and
 limitations under the License.
-->

<document>

  <header>
    <title>Permission Directive</title>
    <authors>
      <person name="Stephen McConnell" email="mcconnell@apache.org"/>
      <person name="Niclas Hedhman" email="niclas@hedhman.org"/>
    </authors>
  </header>

  <body>
    <section name="Permission Directive">

      <subsection name="Nested Elements">
        <table>
          <tr><th>Element</th><th>Occurance</th><th>Description</th></tr>
          <tr>
            <td><a href="action.html">action</a></td><td>0..n</td>
            <td>
             The action descriptor.
            </td>
          </tr>
        </table>
      </subsection>

      <subsection name="Attributes">

        <table>
          <tr><th>Attribute</th><th>Required</th><th>Description</th></tr>
          <tr>
            <td>class</td><td>yes</td>
            <td>
              The name of the Permission class. This classname must be a subclass of
              the java.security.Permission class.
            </td>
          </tr>
          <tr>
            <td>name</td><td>no</td>
            <td>
              This is the first argument passed into the constructor. Most Permission
              classes calls this the "name" argument, but the has other names
              for certain permission classes, e.g. FilePermission calls it "path".
            </td>
          </tr>
        </table>
      </subsection>

      <subsection name="Description">
<p>
A resource directive is a logical reference to a jar file within the enclosing repository.  A repository implementation is responsible for the mapping of logical directives to physical jar URL.
</p>
      </subsection>

      <subsection name="Example XML">
<p>
The following example block.xml demonstrates the inclusion of three blocks within another enclosing block.  In this example, the common shared API (containing service interfaces classes is declared in the containing block classloader).
</p>

<source><![CDATA[
<classloader>
  <classpath>
    <repository>
      <resource id="james:mail" version="1.3"/>
      <resource id="james:activation" version="1.0"/>
      <resource id="james:mailet-api" version="1.0"/>
    </repository>
  </classpath>
  <grant>
    <permission class="java.lang.RuntimePermission" name="getClassLoader" />
    <permission class="java.util.PropertyPermission" name="java.*" >
      <action>read</action>
    </permission>
    <permission class="java.util.PropertyPermission" name="org.apache.*" >
      <action>read</action>
      <action>write</action>
    </permission>
  </grant>
    
  <!-- include blocks here -->

  <include name="james" id="james:block" type="xml"/>
</classloader>
]]></source>

     </subsection>
    </section>
  </body>

</document>



