<?xml version="1.0"?>

<!--
 ============================================================================
                   The Apache Software License, Version 1.1
 ============================================================================

 Copyright (C) 1999-2002 The Apache Software Foundation. All rights reserved.

 Redistribution and use in source and binary forms, with or without modifica-
 tion, are permitted provided that the following conditions are met:

 1. Redistributions of  source code must  retain the above copyright  notice,
    this list of conditions and the following disclaimer.

 2. Redistributions in binary form must reproduce the above copyright notice,
    this list of conditions and the following disclaimer in the documentation
    and/or other materials provided with the distribution.

 3. The end-user documentation included with the redistribution, if any, must
    include  the following  acknowledgment:  "This product includes  software
    developed  by the  Apache Software Foundation  (http://www.apache.org/)."
    Alternately, this  acknowledgment may  appear in the software itself,  if
    and wherever such third-party acknowledgments normally appear.

 4. The names "Jakarta", "Apache Avalon", "Avalon Framework" and
    "Apache Software Foundation"  must not be used to endorse or promote
    products derived  from this  software without  prior written
    permission. For written permission, please contact apache@apache.org.

 5. Products  derived from this software may not  be called "Apache", nor may
    "Apache" appear  in their name,  without prior written permission  of the
    Apache Software Foundation.

 THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,
 INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
 FITNESS  FOR A PARTICULAR  PURPOSE ARE  DISCLAIMED.  IN NO  EVENT SHALL  THE
 APACHE SOFTWARE  FOUNDATION  OR ITS CONTRIBUTORS  BE LIABLE FOR  ANY DIRECT,
 INDIRECT, INCIDENTAL, SPECIAL,  EXEMPLARY, OR CONSEQUENTIAL  DAMAGES (INCLU-
 DING, BUT NOT LIMITED TO, PROCUREMENT  OF SUBSTITUTE GOODS OR SERVICES; LOSS
 OF USE, DATA, OR  PROFITS; OR BUSINESS  INTERRUPTION)  HOWEVER CAUSED AND ON
 ANY  THEORY OF LIABILITY,  WHETHER  IN CONTRACT,  STRICT LIABILITY,  OR TORT
 (INCLUDING  NEGLIGENCE OR  OTHERWISE) ARISING IN  ANY WAY OUT OF THE  USE OF
 THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

 This software  consists of voluntary contributions made  by many individuals
 on  behalf of the Apache Software  Foundation. For more  information on the
 Apache Software Foundation, please see http://www.apache.org/.
-->

<document>
  <header>
    <title>Apache Financial Services</title>
    <authors>
      <person name="Stephen McConnell" email="mcconnell@apache.org"/>
    </authors>
  </header>
  <body>
    <section name="Apache Financial Services">
      <subsection name="Simple Bank : Interfaces">
        <p>
          The Simple Bank interfaces define a simplistic Bank from which
          multiple Account instances can be created and removed.
        </p>
      </subsection>
      <subsection name="Bank Interface">
        <p>
          The Bank interface services as a factory for accounts.  Using the 
          Bank, clients can create and destroy accounts.
        </p>
        <p><i>Bank.java</i></p>
<source><![CDATA[
package org.apache.bank;

public interface Bank
{
   /**
    * Create, register and return a new account.
    * @param name the name of the account holder
    * @return Account the account
    */
    Account createAccount( String name );

   /**
    * Returns an account based on a supplied account number.
    * @param id the account number
    * @return Account the bank account
    */
    Account getAccount( int id ) throws NoSuchAccountException;

   /**
    * Close an account.
    * @param id the account number
    */
    void closeAccount( int id ) throws PolicyException, NoSuchAccountException;

   /**
    * Get the number of accounts managed by the bank.
    * @return the number of accounts
    */
    int accounts();

}
]]></source>
      </subsection>
      <subsection name="Account Interface">
        <p>
          The Account interface encapsulates the services that a client can
          perform against an account - deposit of funds, withdrawls, and 
          account balance queries.
        </p>

        <p><i>Account.java</i></p>
<source><![CDATA[
package org.apache.bank;

public interface Account
{
   /**
    * Get the account name.
    * @return the account name
    */
    String getName();

   /**
    * Get the account number.
    * @return the account number
    */
    int getID();

   /**
    * Get the account balance.
    * @return the account balance
    */
    float getBalance();

   /**
    * Deposit funds into the account.
    * @param amount the amount of funds to deposit
    */
    void deposit( float amount );

   /**
    * Withdraw funds from the account.
    * @param amount the amount of funds to withdraw
    */
    void withdraw( float amount ) throws InsufficientFundsException;

}
]]></source>
      </subsection>
    </section>
  </body>

</document>




