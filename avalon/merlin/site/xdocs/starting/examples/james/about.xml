<?xml version="1.0"?>

<!--
 ============================================================================
                   The Apache Software License, Version 1.1
 ============================================================================

 Copyright (C) 1999-2002 The Apache Software Foundation. All rights reserved.

 Redistribution and use in source and binary forms, with or without modifica-
 tion, are permitted provided that the following conditions are met:

 1. Redistributions of  source code must  retain the above copyright  notice,
    this list of conditions and the following disclaimer.

 2. Redistributions in binary form must reproduce the above copyright notice,
    this list of conditions and the following disclaimer in the documentation
    and/or other materials provided with the distribution.

 3. The end-user documentation included with the redistribution, if any, must
    include  the following  acknowledgment:  "This product includes  software
    developed  by the  Apache Software Foundation  (http://www.apache.org/)."
    Alternately, this  acknowledgment may  appear in the software itself,  if
    and wherever such third-party acknowledgments normally appear.

 4. The names "Jakarta", "Apache Avalon", "Avalon Framework" and
    "Apache Software Foundation"  must not be used to endorse or promote
    products derived  from this  software without  prior written
    permission. For written permission, please contact apache@apache.org.

 5. Products  derived from this software may not  be called "Apache", nor may
    "Apache" appear  in their name,  without prior written permission  of the
    Apache Software Foundation.

 THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,
 INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
 FITNESS  FOR A PARTICULAR  PURPOSE ARE  DISCLAIMED.  IN NO  EVENT SHALL  THE
 APACHE SOFTWARE  FOUNDATION  OR ITS CONTRIBUTORS  BE LIABLE FOR  ANY DIRECT,
 INDIRECT, INCIDENTAL, SPECIAL,  EXEMPLARY, OR CONSEQUENTIAL  DAMAGES (INCLU-
 DING, BUT NOT LIMITED TO, PROCUREMENT  OF SUBSTITUTE GOODS OR SERVICES; LOSS
 OF USE, DATA, OR  PROFITS; OR BUSINESS  INTERRUPTION)  HOWEVER CAUSED AND ON
 ANY  THEORY OF LIABILITY,  WHETHER  IN CONTRACT,  STRICT LIABILITY,  OR TORT
 (INCLUDING  NEGLIGENCE OR  OTHERWISE) ARISING IN  ANY WAY OUT OF THE  USE OF
 THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

 This software  consists of voluntary contributions made  by many individuals
 on  behalf of the Apache Software  Foundation. For more  information on the
 Apache Software Foundation, please see http://www.apache.org/.
-->

<document>
  <header>
    <title>About James</title>
    <authors>
      <person name="Stephen McConnell" email="mcconnell@apache.org"/>
    </authors>
  </header>
  <body>
    <section name="James Enterprise Messaging Platform">
      <subsection name="About James">
        <p>
        The Java Apache Mail Enterprise Server (a.k.a. Apache 
        James) is a 100% pure Java SMTP and POP3 Mail server and 
        NNTP News server designed to be a complete and portable 
        enterprise mail engine solution based on currently available 
        open protocols.
        </p>
        <p>
        James is also a mail application platform. The James project 
        hosts the Apache Mailet API, and James provides an 
        implementation of this mail application platform API. 
        </p>
      </subsection>
      <subsection name="Features">
        <table>
          <tr><th>Feature</th><th>Description</th></tr>
          <tr><td>Complete portability</td>
            <td>
              <p>
              Apache James is be a 100% pure Java application
              based on the Java 2 platform and the JavaMail 1.3 API.
              </p>
            </td>
          </tr>
          <tr><td>Protocol abstraction</td>
            <td>
              <p>
              Unlike other mail engines, protocols are seen only
              like "communication languages" ruling comunications between clients and
              the server. Apache James is not be tied to any particular protocol but
              follow an abstracted server design (like JavaMail did on the
              client side).
             </p>
            </td>
          </tr>
          <tr><td>Complete solution</td>
            <td>
              <p>
              The mail system is able to handle both mail
              transport and storage in a single server application. Apache James
              in combnination with the Merlin platform works alone without the need 
              for any other server or solution.
             </p>
            </td>
          </tr>
          <tr><td>Complete solution</td>
            <td>
              <p>
              The mail system is able to handle both mail
              transport and storage in a single server application. Apache James
              works alone without the need for any other server or solution.
             </p>
            </td>
          </tr>
          <tr><td>Mailet support</td>
            <td>
              <p>
               Apache James supports the Apache Mailet API. A Mailet
               is a discrete piece of mail-processing logic which is incorporated into
               a Mailet-compliant mail-server's processing. This easy-to-write,
               easy-to-use pattern allows developers to build powerful customized mail
               systems. Examples of the services a Mailet might provide include: a
               mail-to-fax or mail-to-phone transformer, a filter, a language translator, a mailing
               list manager, etc. Several Mailets are included in the JAMES
               distribution (see 
               <a href="http://james.apache.org/documentation_2_1.html">documentation</a>).
             </p>
            </td>
          </tr>
          <tr><td>Resource abstraction</td>
            <td>
              <p>
              Like protocols, resources are abstracted and,
              accessed through defined interfaces (JavaMail for transport, JDBC for
              spool storage or user accounts in RDBMS's, Apache Mailet API). The server is
              highly modular and reuse solutions from other projects.
              </p>
            </td>
          </tr>
          <tr><td>Secure and multi-threaded design</td>
            <td>
              <p>
              Based on the technology developed
              for the Apache JServ servlet engine, Apache James has a careful,
              security-oriented, full multi-threaded design, to allow performance,
              scalability and mission-critical use.
              </p>
            </td>
          </tr>
        </table>
      </subsection>
    </section>
  </body>

</document>




