<?xml version="1.0"?>

<!--
 ============================================================================
                   The Apache Software License, Version 1.1
 ============================================================================

 Copyright (C) 1999-2002 The Apache Software Foundation. All rights reserved.

 Redistribution and use in source and binary forms, with or without modifica-
 tion, are permitted provided that the following conditions are met:

 1. Redistributions of  source code must  retain the above copyright  notice,
    this list of conditions and the following disclaimer.

 2. Redistributions in binary form must reproduce the above copyright notice,
    this list of conditions and the following disclaimer in the documentation
    and/or other materials provided with the distribution.

 3. The end-user documentation included with the redistribution, if any, must
    include  the following  acknowledgment:  "This product includes  software
    developed  by the  Apache Software Foundation  (http://www.apache.org/)."
    Alternately, this  acknowledgment may  appear in the software itself,  if
    and wherever such third-party acknowledgments normally appear.

 4. The names "Jakarta", "Apache Avalon", "Avalon Framework" and
    "Apache Software Foundation"  must not be used to endorse or promote
    products derived  from this  software without  prior written
    permission. For written permission, please contact apache@apache.org.

 5. Products  derived from this software may not  be called "Apache", nor may
    "Apache" appear  in their name,  without prior written permission  of the
    Apache Software Foundation.

 THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,
 INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
 FITNESS  FOR A PARTICULAR  PURPOSE ARE  DISCLAIMED.  IN NO  EVENT SHALL  THE
 APACHE SOFTWARE  FOUNDATION  OR ITS CONTRIBUTORS  BE LIABLE FOR  ANY DIRECT,
 INDIRECT, INCIDENTAL, SPECIAL,  EXEMPLARY, OR CONSEQUENTIAL  DAMAGES (INCLU-
 DING, BUT NOT LIMITED TO, PROCUREMENT  OF SUBSTITUTE GOODS OR SERVICES; LOSS
 OF USE, DATA, OR  PROFITS; OR BUSINESS  INTERRUPTION)  HOWEVER CAUSED AND ON
 ANY  THEORY OF LIABILITY,  WHETHER  IN CONTRACT,  STRICT LIABILITY,  OR TORT
 (INCLUDING  NEGLIGENCE OR  OTHERWISE) ARISING IN  ANY WAY OUT OF THE  USE OF
 THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

 This software  consists of voluntary contributions made  by many individuals
 on  behalf of the Apache Software  Foundation. For more  information on the
 Apache Software Foundation, please see http://www.apache.org/.
-->

<document>
  <header>
    <title>Using Merlin : Service</title>
    <authors>
      <person name="Stephen McConnell" email="mcconnell@apache.org"/>
    </authors>
  </header>
  <body>
    <section name="Using Merlin">
      <subsection name="Publishing Services">
        <p>
        One of the most important aspects of a component management 
        platform is the ability to provide component assembly.  Assembly
        is achieved by wiring together the services provided by one component
        with the service dependencies declared by a consumer component. 
        </p>
        <p>
        This tutorial presents the creation of a simple component that 
        publishes a service.  This component will be used in the subsequent 
        tutorial dealing with dependencies. 
        </p>
        <p>
        Resources supporting this tutorial are contained in the 
        tutorials/dependencies/ package.
        </p>
      </subsection>
      <subsection name="Service Interface">
        <p>
        Services are normally exposed under a service interface. The following
        java source is the declaration of a RandomGenerator service interface. 
        </p>
        <p><i>RandomGenerator.java</i></p>
<source>
package tutorial;

/**
 * A service that provides access to a random number.
 */
public interface RandomGenerator
{

   /**
    * Return a random integer
    * @return the random number
    */
    int getRandom();

}
</source>
      </subsection>
      <subsection name="Component Implementation">
        <p>
        The following source contains the component implementation for the 
        service above. 
        </p>
        <p><i>RandomGeneratorProvider.java</i></p>
<source>
package tutorial;

import java.util.Random;

import org.apache.avalon.framework.logger.AbstractLogEnabled;
import org.apache.avalon.framework.activity.Initializable;
import org.apache.avalon.framework.activity.Disposable;

/**
 * An implementation of a random number generator.
 *
 * @avalon.component version="1.0" name="random" lifestyle="singleton"
 * @avalon.service type="tutorial.RandomGenerator" version="1.0"
 */
public class RandomGeneratorProvider extends AbstractLogEnabled 
  implements Initializable, RandomGenerator, Disposable
{

    private Random m_random = new Random();

    public void initialize()
    {
        getLogger().info( "initialization" );
    }

   /**
    * Return a random integer
    * @return the random number
    */
    public int getRandom()
    {
        getLogger().info( "processing request" );
        return m_random.nextInt();
    }

    public void dispose()
    {
        getLogger().info( "disposal" );
    }

}
</source>
        <p>
          In addition to the component implementation, we need to generate an xinfo
          resource in which we declare the publication of the service by 
          the component.  In this example the component type is declaring 
          one service although multiple service declarations are supported. This 
          is generated automatically based on the following tag:
        </p>
<source><![CDATA[
 * @avalon.service type="tutorial.RandomGenerator" version="1.0"
]]></source>
        <p>
          The type descriptor generated for this component is listed below.
        </p>
        <p><i>RandomGeneratorProvider.xinfo</i></p>
<source><![CDATA[
<?xml version="1.0"?>
<!DOCTYPE type
      PUBLIC "-//AVALON/Type DTD Version 1.0//EN"
             "http://avalon.apache.org/dtds/meta/type_1_1.dtd" >
<type>
  <info>
    <name>random-provider</name>
    <version>1.0</version>
  </info>
  <services>
    <service type="tutorial.RandomGenerator"/>
  </services>
</type>
]]></source>
        <p>
          The <a href="dependencies/auto.html">following tutorial</a> presents the 
          use of this service by HelloComponent.
        </p>

      </subsection>
    </section>
  </body>

</document>




