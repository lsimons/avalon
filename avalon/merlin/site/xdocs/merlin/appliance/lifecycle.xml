<?xml version="1.0"?>

<!-- 
 Copyright 2004 Apache Software Foundation
 Licensed  under the  Apache License,  Version 2.0  (the "License");
 you may not use  this file  except in  compliance with the License.
 You may obtain a copy of the License at 
 
   http://www.apache.org/licenses/LICENSE-2.0
 
 Unless required by applicable law or agreed to in writing, software
 distributed  under the  License is distributed on an "AS IS" BASIS,
 WITHOUT  WARRANTIES OR CONDITIONS  OF ANY KIND, either  express  or
 implied.
 
 See the License for the specific language governing permissions and
 limitations under the License.
-->

<document>
  <properties>
    <title>Lifecycle Management</title>
    <author email="avalon-dev@jakarta.apache.org">Avalon Development Team</author>
  </properties>
  <body>

    <section name="Lifecycle Management">
<p>
A lifecycle is a term that refers to the set of stages that a component passes through between creation and destruction.  A summary of the standard Avalon lifecycle stages is included below.  Each lifecycle stage is fully supported by the assembly framework through a default deployment service.
</p>

    <subsection name="Stages">

<p>Overview of the standard lifecycle stages.</p>

    <table>
      <tr>
        <td><strong>Stage</strong></td>
        <td><strong>Description</strong></td>
        <td><strong>Available Services</strong></td>
      </tr>
      <tr>
        <td>logging</td>
        <td>The assignment of a base and possible subsidiary logging channels to a 
            component based on a combination of logging criteria expressed with a 
            component type defintion and a deployment profile.</td>
        <td>DefaultLoggingService</td>
      </tr>
      <tr>
        <td>configuration</td>
        <td>Assignment of a static configuration to the component based on a 
            type level set of defaults, combined with profile level cofigurations.</td>
        <td>DefaultConfigurationService</td>
      </tr>
      <tr>
        <td>parameters</td>
        <td>Assignment of a static parameters to the component based on a 
            profile level parameter descriptions.</td>
        <td>DefaultParameterizationService</td>
      </tr>
      <tr>
        <td>contextualization</td>
        <td>The supply of a runtime context to a component based on context criteria
            declared at the level of a type, and context directives included in a 
            deployment profile.</td>
        <td>DefaultContextulizationService</td>
      </tr>
      <tr>
        <td>composition</td>
        <td>The supply of a component or service manager to a component from which
            service depedencies are accessible.</td>
        <td>DefaultCompositionService</td>
      </tr>
      <tr>
        <td>initialization</td>
        <td>The initialization of a component including support for classic and 
            extension based initialization strategies.</td>
        <td>DefaultInitializationService &amp;
        ExtendedInitializationService</td>
      </tr>
      <tr>
        <td>startup and shutdown</td>
        <td>Management of the orderly starting and shutdown of a component.</td>
        <td>DefaultStartupService</td>
      </tr>
      <tr>
        <td>disposal</td>
        <td>The disposal of a component including support for classic and 
            extension based disposal strategies.</td>
        <td>DefaultDisposalService &amp;
        ExtendedDisposalService</td>
      </tr>
    </table>

    </subsection>
  </section>

  </body>
  <footer>
    <legal>
      Copyright (c) @year@ The Avalon Apache Project All rights reserved.
      $Revision: 1.3 $ $Date: 2004/01/25 13:28:47 $
    </legal>
  </footer>

</document>

