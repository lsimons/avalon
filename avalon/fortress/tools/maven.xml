<?xml version="1.0"?>

<project default="check"
    xmlns:j="jelly:core"
    xmlns:ant="jelly:ant">

    <!-- include the avalon-wide custom project properties -->
    <property file="${basedir}/project.properties"/>
    <property file="${basedir}/../project.properties"/>
    <property file="${basedir}/../../project.properties"/>
    <property file="${basedir}/../../../project.properties"/>
    <property file="${basedir}/../../../../project.properties"/>

    <goal name="check">
        <!-- friendly error in case file is not available -->
        <ant:available file="${avalon.buildsystem}/maven-common.xml"
                property="buildsystem.available"/>
        <j:set var="avalon.buildsystem.available" value="${buildsystem.available}"/>
        <j:if test="${empty(avalon.buildsystem.available)}">
            <ant:fail>
            ===================================================================
            BUILD SYSTEM FAILURE!
            ===================================================================

            a required file, ${avalon.buildsystem}/maven-common.xml, cannot be
            found. Try setting the avalon.buildsystem property in
            project.properties to the correct location.
            </ant:fail>
        </j:if>
    </goal>

    <preGoal name="java:compile">
        <attainGoal name="avalon:init"/>
        <ant:copy todir="${java.src.dir}">
          <ant:fileset dir="${basedir}/../container/src/impl">
            <ant:include name="**/role/ServiceMetaManager*"/>
            <ant:include name="**/dag/*"/>
            <ant:include name="**/util/Service*"/>
          </ant:fileset>
        </ant:copy>
    </preGoal>

    <postGoal name="java:compile">
       <ant:delete dir="${java.src.dir}/org/apache/avalon/fortress/impl"/>
       <ant:delete dir="${java.src.dir}/org/apache/avalon/fortress/util"/>
    </postGoal>

    <!-- include the avalon-wide custom goal decorators from maven-common.xml -->
    <j:import file="${avalon.buildsystem}/maven-common.xml" inherit="true"/>

</project>
