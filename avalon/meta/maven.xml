<project default="avalon:plugin"  xmlns:maven="jelly:maven" xmlns:j="jelly:core" xmlns:util="jelly:util" xmlns:ant="jelly:ant">

  <ant:property name="meta.plugin.version" value="1.2-SNAPSHOT"/>

  <ant:property name="maven.ui.banner.background" value="#fff"/>
  <ant:property name="maven.ui.banner.foreground" value="#000"/>
  <ant:property name="maven.xdoc.jsl" value="file:/${basedir}/../site/etc/site.jsl"/>
  <ant:property name="maven.license.licenseFile" value="${basedir}/../LICENSE.txt"/>
  <ant:property name="maven.javadoc.stylesheet" value="${basedir}/../site/etc/stylesheet.css"/>
  <ant:property name="sun.j2se.link" value="http://java.sun.com/j2se/1.4/docs/api/"/>
  <ant:property name="framework.api.link" value="http://avalon.apache.org/framework/api/"/>
  <ant:property name="maven.javadoc.links" value="${sun.j2se.link},${framework.api.link}"/>

  <ant:property name="maven.dist.assembly.dir"
    value="${maven.build.dir}/temp"/>
  <ant:property name="maven.dist.bin.archive.dir"
    value="${maven.dist.assembly.dir}/bin"/>
  <ant:property name="maven.dist.src.archive.dir"
    value="${maven.dist.assembly.dir}/src"/>
  <ant:property name="maven.dist.bin.assembly.dir"
    value="${maven.dist.assembly.dir}/bin/${pom.artifactId}"/>
  <ant:property name="maven.dist.src.assembly.dir"
    value="${maven.dist.assembly.dir}/src/${pom.artifactId}"/>
  <ant:property name="maven.dist.dir"
    value="${maven.build.dir}/distributions"/>

  <goal name="avalon:clean" prereqs="clean">
    <maven:reactor
      basedir="${basedir}"
      includes="*/project.xml"
      goals="clean"
      banner="Cleaning:"
      ignoreFailures="false"/>
  </goal>

  <goal name="avalon:build">
    
    <echo>

Building the framework using the default target "avalon:build".
The complete set of target include:

  avalon:clean
  avalon:build
  avalon:build-snapshot
  avalon:dist
  avalon:plugin ---------- default goal
  avalon:site
    </echo>

    <maven:reactor
      basedir="${basedir}"
      includes="*/project.xml"
      excludes="site/project.xml,plugin/project.xml"
      goals="jar:install"
      banner="Building:"
      ignoreFailures="false"/>
    <ant:copy todir="${maven.build.dir}">
      <ant:fileset dir="${basedir}/api/target">
        <ant:include name="${pom.artifactId}-api-${pom.currentVersion}.jar"/>
      </ant:fileset>
      <ant:fileset dir="${basedir}/spi/target">
        <ant:include name="${pom.artifactId}-spi-${pom.currentVersion}.jar"/>
      </ant:fileset>
      <ant:fileset dir="${basedir}/impl/target">
        <ant:include name="${pom.artifactId}-impl-${pom.currentVersion}.jar"/>
      </ant:fileset>
      <ant:fileset dir="${basedir}/tools/target">
        <ant:include name="${pom.artifactId}-tools-${pom.currentVersion}.jar"/>
      </ant:fileset>
    </ant:copy>

  </goal>

  <goal name="avalon:build-snapshot">
    <maven:reactor
      basedir="${basedir}"
      includes="*/project.xml"
      excludes="site/project.xml,plugin/project.xml"
      goals="jar:install-snapshot"
      banner="Building snapshot:"
      ignoreFailures="false"/>
  </goal>

  <goal name="avalon:plugin" prereqs="avalon:build">
    <maven:reactor
      basedir="${basedir}"
      includes="plugin/project.xml"
      goals="plugin:install"
      banner="Installing plugin:"
      ignoreFailures="false"
    />
    <ant:copy todir="${maven.build.dir}">
      <ant:fileset dir="${basedir}/plugin/target">
        <ant:include name="${pom.artifactId}-plugin-${meta.plugin.version}.jar"/>
      </ant:fileset>
    </ant:copy>
  </goal>

  <goal name="avalon:dist" prereqs="avalon:plugin,avalon:site,xdist"/>

  <goal name="avalon:site" prereqs="avalon:build">
    <ant:mkdir dir="${maven.build.dir}"/>
    <maven:reactor
      basedir="${basedir}"
      includes="site/project.xml"
      goals="site"
      banner="Building site:"
      ignoreFailures="false"/>
  </goal>

  <goal
    name="xdist:prepare-bin-filesystem" 
    description="Builds the jar files.">

    <ant:delete dir="${maven.dist.bin.assembly.dir}"/>
    <ant:mkdir dir="${maven.dist.bin.assembly.dir}"/>
    <ant:echo>
      +-------------------------------------------------------+
      | C R E A T I N G  B I N A R Y  D I S T R I B U T I O N |
      +-------------------------------------------------------+
    </ant:echo>
    <ant:copy todir="${maven.dist.bin.assembly.dir}">
      <ant:fileset dir=".">
        <ant:include name="README.txt"/>
        <ant:include name="LICENSE*"/>
      </ant:fileset>
    </ant:copy>

    <!-- Copy Jars -->
    <ant:copy todir="${maven.dist.bin.assembly.dir}">
      <ant:fileset dir="${maven.build.dir}">
        <ant:include name="${pom.artifactId}-api-${pom.currentVersion}.jar"/>
        <ant:include name="${pom.artifactId}-spi-${pom.currentVersion}.jar"/>
        <ant:include name="${pom.artifactId}-impl-${pom.currentVersion}.jar"/>
        <ant:include name="${pom.artifactId}-tools-${pom.currentVersion}.jar"/>
        <ant:include name="${pom.artifactId}-plugin-${meta.plugin.version}.jar"/>
      </ant:fileset>
      <ant:fileset dir="${basedir}/site/target">
        <ant:include name="docs/**"/>
      </ant:fileset>
    </ant:copy>
  </goal>

  <goal
    name="xdist:prepare-src-filesystem"
    description="Builds the source distribution file system.">
    <ant:delete dir="${maven.dist.src.assembly.dir}" />
    <ant:mkdir dir="${maven.dist.src.assembly.dir}" />

    <ant:echo>
      +-------------------------------------------------------+
      | C R E A T I N G  S O U R C E  D I S T R I B U T I O N |
      +-------------------------------------------------------+
    </ant:echo>

    <ant:copy todir="${maven.dist.src.assembly.dir}">
      <ant:fileset dir=".">
        <ant:include name="README.txt"/>
        <ant:include name="LICENSE*"/>
        <ant:include name="project.properties"/>
        <ant:include name="maven.xml"/>
        <ant:include name="project.xml"/>
      </ant:fileset>
    </ant:copy>

    <!-- Copy Source -->
    <ant:copy todir="${maven.dist.src.assembly.dir}">
      <ant:fileset dir="${basedir}">
        <include name="api/**"/>
        <include name="spi/**"/>
        <include name="impl/**"/>
        <include name="tools/**"/>
        <include name="site/**"/>
        <exclude name="**/target/**"/>
        <exclude name="**/*.log"/>
      </ant:fileset>
    </ant:copy>

  </goal>

  <goal name="xdist"
    prereqs="xdist:build"
    description="Build a complete distribution.">
  </goal>
        
  <goal
    name="xdist:build"
    prereqs="xdist:build-bin,xdist:build-src"
    description="Build a complete distribution.">
  </goal>

  <goal
    name="xdist:build-setup"
    description="Set up directories for a distribution build">
    <ant:delete dir="${maven.dist.dir}"/>
    <ant:mkdir dir="${maven.dist.dir}"/>
  </goal>

  <goal
    name="xdist:build-bin" 
    prereqs="xdist:build-setup,xdist:prepare-bin-filesystem"
    description="Build the binary distribution.">

    <!-- Create a tar.gz file -->
    <ant:tar longfile="gnu" tarfile="${maven.dist.dir}/${maven.final.name}.tar">
      <ant:tarfileset dir="${maven.dist.bin.archive.dir}"/>
    </ant:tar>

    <ant:gzip 
      zipfile="${maven.dist.dir}/${maven.final.name}.tar.gz"
      src="${maven.dist.dir}/${maven.final.name}.tar"
    />
    
    <ant:delete file="${maven.dist.dir}/${maven.final.name}.tar"/>

    <!-- Create a zip file -->
    <ant:zip zipfile="${maven.dist.dir}/${maven.final.name}.zip">
      <ant:zipfileset dir="${maven.dist.bin.archive.dir}"/>
    </ant:zip>
  </goal>

  <goal
    name="xdist:build-src"
    prereqs="xdist:build-setup,xdist:prepare-src-filesystem"
    description="Build the source distribution.">
 
    <!-- Create a tar.gz file -->
    <ant:tar longfile="gnu" tarfile="${maven.dist.dir}/${maven.final.name}-src.tar">
      <ant:tarfileset dir="${maven.dist.src.archive.dir}"/>
    </ant:tar>

    <ant:gzip 
      zipfile="${maven.dist.dir}/${maven.final.name}-src.tar.gz" 
      src="${maven.dist.dir}/${maven.final.name}-src.tar"
    />
    
    <ant:delete file="${maven.dist.dir}/${maven.final.name}-src.tar"/>

    <!-- Create a zip file -->
    <ant:zip zipfile="${maven.dist.dir}/${maven.final.name}-src.zip">
      <ant:zipfileset dir="${maven.dist.src.archive.dir}"/>
    </ant:zip>

  </goal>

</project>
