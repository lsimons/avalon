<?xml version="1.0"?>

<!-- 
 Copyright 2004 Apache Software Foundation
 Licensed  under the  Apache License,  Version 2.0  (the "License");
 you may not use  this file  except in  compliance with the License.
 You may obtain a copy of the License at 
 
   http://www.apache.org/licenses/LICENSE-2.0
 
 Unless required by applicable law or agreed to in writing, software
 distributed  under the  License is distributed on an "AS IS" BASIS,
 WITHOUT  WARRANTIES OR CONDITIONS  OF ANY KIND, either  express  or
 implied.
 
 See the License for the specific language governing permissions and
 limitations under the License.
-->

<document>

  <properties>
    <author email="mcconnell@apache.org">Stephen McConnell</author>
    <title>Cornerstone</title>
  </properties>

  <body>
    <section name="Resources">
      <subsection name="CCM Terminology Mapping">
        <p>
        Merlin is an implementation of a component management platform. 
        CCM is the CORBA Component Model specification.  The following table
        compares CCM notions with the corresponding notions within Merlin. 
        </p>
        <table>
          <tr>
           <th>CCM</th><th>Merlin</th>
          </tr>
          <tr>
           <td>component</td><td>type however, a type does not currently declare event production</td>
          </tr>
          <tr>
           <td>basic component</td>
           <td>Type without dependencies (context or service dependencies)</td>
          </tr>
          <tr>
           <td>home</td><td>appliance</td>
          </tr>
          <tr>
           <td>naming scope</td><td>partition</td>
          </tr>
          <tr>
           <td>receptacle</td><td>service manager</td>
          </tr>
          <tr>
           <td>"uses" IDL statement</td><td>type dependency declaration</td>
          </tr>
          <tr>
           <td>configuration</td><td>equivalent to the complete lifecycle processing phase</td>
          </tr>
          <tr>
           <td>configuration_complete</td><td>equivalent to initialization</td>
          </tr>
        </table>
      </subsection>
      <subsection name="CCM Notes">
        <p>
        General notes concerning the feasibility of supporting CCM are detailed below.
        </p>
        <table>
          <tr>
            <td>navigation</td>
            <td>
        CCM provides a mechanisms support service navigation.  In CCM terms this 
        corresponds to the ability of a client to navigate from a Facet (service)
        to other facets exposed by the componet equivalent interface. This functionality
        can be viewed as a "inversion of control" issue, however in practive it is 
        equivalent to the exposure of a service along with the ability to allow a client
        to navigate to other services exposed by the same component type.
            </td>
          </tr>
          <tr>
            <td>connection</td>
            <td>
        A connection is defined in CCM as operations on a component which is consitent 
        with a type dependency declaration.  A CCM component generated from a Type would
        expose operations supporting connection and disconnection relative to named 
        connection roles.
            </td>
          </tr>
        </table>
      </subsection>
    </section>
  </body>

</document>


