<project default="avalon:build" xmlns:maven="jelly:maven" xmlns:j="jelly:core" xmlns:util="jelly:util" xmlns:ant="jelly:ant">

  <goal name="avalon:clean" prereqs="clean">
    <maven:reactor
      basedir="${basedir}"
      includes="*/project.xml"
      excludes="project.xml"
      goals="clean"
      banner="Cleaning:"
      ignoreFailures="true"/>
  </goal>

  <goal name="avalon:build">
    <maven:reactor basedir="${basedir}"
      includes="*/project.xml"
      excludes="project.xml"
      goals=""
      banner="Building:"
      ignoreFailures="false"
      postProcessing="true" />
    <ant:copy todir="${maven.build.dir}">
      <j:forEach var="child" items="${reactorProjects}">
        <ant:fileset dir="${child.file.parentFile}/target">
          <ant:include name="${child.artifactId}-${child.currentVersion}.jar"/>
        </ant:fileset>
      </j:forEach>
    </ant:copy>
  </goal>

  <goal name="avalon:site" prereqs="avalon:build,xjavadoc,site"/>

  <goal name="xjavadoc">

    <maven:reactor basedir="${basedir}"
      includes="*/project.xml"
      excludes="project.xml"
      banner="Site Prep:"
      ignoreFailures="false"
      postProcessing="true" />

    <ant:mkdir dir="${maven.build.dir}/docs/api" />
    <ant:property name="copyright"
      value="Copyright &amp;copy; ${year} ${pom.organization.name}. All Rights Reserved." />

    <ant:path id="template.classpath">
      <j:forEach var="child" items="${reactorProjects}">
        <j:set var="deps" value="${child.dependencies}"/>
        <j:forEach var="dep" items="${deps}">
          <ant:pathelement 
            path="${maven.repo.local}/${dep.getArtifactDirectory()}/jars/${dep.getArtifact()}"/>
        </j:forEach>
      </j:forEach>
    </ant:path>
    
    <util:tokenize var="links" delim="," trim="true">${maven.javadoc.links}</util:tokenize>

    <ant:property name="title" value="${pom.name} ${pom.currentVersion}"/>
    <ant:javadoc destdir="${maven.build.dir}/docs/api" 
	doctitle="&lt;h1&gt;${title}&lt;/h1&gt;" 
      noindex="false" author="true" use="true"
	windowtitle="${title}" 
      bottom="${copyright}"
      additionalparam="-breakiterator -J-Xmx128m "
      packagenames="*,org.*">
        <j:forEach var="packageGroup" items="${pom.packageGroups}">
          <group title="${packageGroup.title}" packages="${packageGroup.packages}"/>
        </j:forEach>
        <j:forEach var="child" items="${reactorProjects}">
          <sourcepath path="${child.file.parentFile}/src/java"/>
        </j:forEach>
        <j:forEach var="link" items="${links}">
          <ant:link href="${link.trim()}"/>
        </j:forEach>
        <classpath>
          <path refid="template.classpath"/>
	  </classpath>
	  <link href="http://java.sun.com/j2se/1.4.2/docs/api/" />
        <!-- allow custom tags -->    
        <util:tokenize var="listOfTags" delim=" ">${maven.javadoc.customtags}</util:tokenize>
        <j:forEach var="someTag" items="${listOfTags}">
          <j:set var="nameVar" value="${someTag}.name"/>
          <j:set var="name" value="${context.findVariable(nameVar)}"/>
          <j:set var="descriptionVar" value="${someTag}.description"/>
          <j:set var="description" value="${context.findVariable(descriptionVar)}"/>
          <j:set var="enabledVar" value="${someTag}.enabled"/>
          <j:set var="enabled" value="${context.findVariable(enabledVar)}"/>
          <j:set var="scopeVar" value="${someTag}.scope"/>
          <j:set var="scope" value="${context.findVariable(scopeVar)}"/>
          <ant:tag name="${name}" description="${description}"
               enabled="${enabled}" scope="${scope}"/>
        </j:forEach>
    </ant:javadoc>
  </goal>

  <goal name="template">
    <ant:delete dir="${maven.build.dir}/template" />
    <ant:mkdir dir="${maven.build.dir}/template" />
    <ant:copy todir="${maven.build.dir}/template">
      <ant:fileset dir=".">
        <ant:include name="LICENSE*"/>
        <ant:include name="project.properties"/>
        <ant:include name="maven.xml"/>
        <ant:include name="project.xml"/>
        <ant:include name="master.xml"/>
      </ant:fileset>
    </ant:copy>
    <ant:copy todir="${maven.build.dir}/template">
      <ant:fileset dir="${basedir}">
        <include name="api/**"/>
        <include name="impl/**"/>
        <include name="xdocs/**"/>
        <exclude name="**/target/**"/>
        <exclude name="**/*.log"/>
      </ant:fileset>
    </ant:copy>
  </goal>

</project>
