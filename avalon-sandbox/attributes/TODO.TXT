
1. Update all operation names to reflect the descriptor
   notion.  I.e.:

      m_type.getContext();

   would become:

      m_type.getContextDescriptor();

2. Context entries are currently ties to the contextualizable 
   interface but Merlin can handle contexualization using 
   different interfaces.  Need to update the ContextTag so that 
   we associate a context method name with the context 
   descriptor that is created (ContextDescriptor already 
   has basic support for this).

3. Review the possibility of replacing the dependencies 
   declaration and related tags with a context entry (meaning
   that we could select a context object for the interface 
   we are concerned with - 

   e.g.:

     ContextDescriptor cd1 = 
       m_type.getContextDescriptor( CONTEXTALIZABLE_CLASSNAME );

     ContextDescriptor cd2 = 
       m_type.getContextDescriptor( SERVICEABLE_CLASSNAME );
