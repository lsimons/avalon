<project default="merlin:build" xmlns:maven="jelly:maven" xmlns:j="jelly:core" xmlns:util="jelly:util" xmlns:ant="jelly:ant">

  <ant:property file="project.properties"/>
  <ant:property name="maven.docs.src" value="${basedir}/merlin-platform/xdocs"/>
  <ant:property name="merlin.build.inst" value="merlin"/>
  <ant:property name="merlin.build.inst.dir" 
    value="${maven.build.dir}/${merlin.build.inst}"/>
  <ant:property name="maven.jar.manifest.extensions.add" value="true"/>
  <ant:property name="maven.checkstyle.format" value="avalon"/>
  <ant:property name="pom.organization.identifier" value="ASF"/>
  <ant:property name="pom.specificationVersion" value="1.0"/>
  <ant:property name="maven.license.licenseFile" value="${basedir}/LICENSE.txt"/>
  <ant:property name="maven.javadoc.stylesheet" 
    value="${basedir}/merlin-platform/src/etc/stylesheet.css"/>

  <ant:property environment="env"/>
  <ant:property name="merlin.home" value="${env.MERLIN_HOME}"/>

  <goal name="merlin:update">
    <!--<attainGoal name="merlin:clean"/>-->
    <attainGoal name="merlin:install"/>
    <attainGoal name="merlin:site"/>
    <attainGoal name="merlin:tutorials"/>
    <attainGoal name="merlin:package"/>
    <attainGoal name="merlin:replicate"/>
  </goal>

  <goal name="merlin:replicate">
    <copy toDir="${merlin.home}">
      <fileset dir="${merlin.build.inst.dir}"/>
    </copy>
  </goal>

  <goal name="merlin:demo" description="Execute the demo targets." >
    <maven:reactor
      basedir="${basedir}"
      includes="merlin-platform/tutorials/**/project.xml"
      excludes="**/target/**"
      goals="demo"
      banner="Demo:"
      ignoreFailures="false" />
  </goal>

  <goal name="merlin:build" description="Build Merlin." >

    <!-- build the subprojects -->
    <maven:reactor basedir="${basedir}"
      includes="**/project.xml"
      excludes="target/**,merlin-platform/**,merlin-plugin/**,project.xml,kernel/bootstrap/*,merlin-extensions/**"
      goals="jar:install-snapshot"
      banner="Installing:"
      ignoreFailures="false" />
    <attainGoal name="merlin:plugin"/>

    <!-- build the plugin -->
    <maven:reactor basedir="${basedir}"
      includes="kernel/bootstrap/project.xml"
      goals="jar:install"
      banner="Installing:"
      ignoreFailures="false" />

  </goal>

  <goal name="merlin:install" 
    description="Build the Merlin distribution." prereqs="merlin:build">

    <ant:mkdir dir="${merlin.build.inst.dir}"/>
    <ant:mkdir dir="${merlin.build.inst.dir}/ext"/>
    <ant:mkdir dir="${merlin.build.inst.dir}/bin/lib"/>

    <!-- import bootstrap jar -->
    <ant:copy 
       file="${basedir}/kernel/bootstrap/target/merlin-bootstrap-1.0.jar" 
       toDir="${merlin.build.inst.dir}/bin/lib"/>

    <!-- import subproject jar files -->
    <maven:reactor
      basedir="${basedir}"
      includes="platform.xml"
      goals="ximport"
      banner="Resolving dependencies:"
      ignoreFailures="false"/>

    <!-- copy the xml api jar file to the merlin/ext directory -->
    <ant:copy 
       file="${merlin.build.inst.dir}/repository/xml-apis/jars/xml-apis-2.0.2.jar" 
       toDir="${merlin.build.inst.dir}/ext"/>
    <ant:copy 
       file="${merlin.build.inst.dir}/repository/xml-apis/jars/xmlParserAPIs-2.0.2.jar" 
       toDir="${merlin.build.inst.dir}/ext"/>
    <delete dir="${merlin.build.inst.dir}/repository/xml-apis"/>
    <ant:copy 
       file="${merlin.build.inst.dir}/repository/xerces/jars/xerces-2.4.0.jar" 
       toDir="${merlin.build.inst.dir}/ext"/>
    <delete dir="${merlin.build.inst.dir}/repository/xerces"/>

    <!-- add supporting resources -->
    <ant:copy toDir="${merlin.build.inst.dir}">
      <fileset dir="${basedir}/merlin-platform/src">
        <include name="bin/**/*"/>
        <include name="config/**/*"/>
        <include name="repository/**/*"/>
      </fileset>
      <fileset dir="${basedir}">
        <include name="LICENSE.txt"/>
        <include name="README.TXT"/>
      </fileset>
    </ant:copy>

    <ant:chmod file="${merlin.build.inst.dir}/bin/merlin.sh" perm="ugo+rx"/>
    <ant:chmod file="${merlin.build.inst.dir}/bin/merlinx.sh" perm="ugo+rx"/>
    <ant:chmod file="${merlin.build.inst.dir}/bin/merlin-server.sh" perm="ugo+rx"/>

    <ant:copy toDir="${maven.build.dir}">
      <fileset dir="${basedir}">
        <include name="INSTALLATION.TXT"/>
      </fileset>
    </ant:copy>
  </goal>

  <goal name="merlin:plugin">
    <maven:reactor
      basedir="${basedir}"
      includes="merlin-plugin/project.xml"
      goals="plugin:install"
      banner="Installing plugin:"
      ignoreFailures="false"/>
  </goal>

  <goal name="merlin:package">
    <maven:snapshot project="${pom}"/>    
    <j:set var="timestamp" value="${snapshotSignature.substring(7,15)}"/>
    <j:set var="package.name" value="${maven.final.name}-dist-${timestamp}"/>

    <ant:echo>Building distribution: ${package.name}.zip</ant:echo>
    <ant:zip zipfile="${maven.build.dir}/${package.name}.zip">
      <zipfileset dir="${merlin.build.inst.dir}" prefix="merlin"/>
      <fileset dir="${basedir}">
        <include name="INSTALLATION.TXT"/>
      </fileset>
      <fileset dir="${basedir}/merlin-plugin/target">
        <include name="*.jar"/>
      </fileset>
      <fileset dir="${basedir}/../meta/plugin/target">
        <include name="*.jar"/>
      </fileset>
    </ant:zip>
    <ant:tar tarfile="${maven.build.dir}/${package.name}.tar">
      <tarfileset dir="${merlin.build.inst.dir}" prefix="merlin"/>
      <fileset dir="${basedir}">
        <include name="INSTALLATION.TXT"/>
      </fileset>
      <fileset dir="${basedir}/merlin-plugin/target">
        <include name="*.jar"/>
      </fileset>
      <fileset dir="${basedir}/../meta/plugin/target">
        <include name="*.jar"/>
      </fileset>
    </ant:tar>
    <ant:gzip 
      zipfile="${maven.build.dir}/${package.name}.tar.gz"
      src="${maven.build.dir}/${package.name}.tar"/>
    <ant:delete file="${maven.build.dir}/${package.name}.tar"/>

    <j:set var="docs.name" value="${maven.final.name}-docs-${timestamp}"/>
    <ant:echo>Building doc kit: ${docs.name}.zip</ant:echo>
    <ant:zip zipfile="${maven.build.dir}/${docs.name}.zip">
      <zipfileset dir="${maven.build.dir}/docs" prefix="docs"/>
    </ant:zip>
    <ant:tar tarfile="${maven.build.dir}/${docs.name}.tar">
      <tarfileset dir="${maven.build.dir}/docs" prefix="docs"/>
    </ant:tar>
    <ant:gzip 
      zipfile="${maven.build.dir}/${docs.name}.tar.gz"
      src="${maven.build.dir}/${docs.name}.tar"/>
    <ant:delete file="${maven.build.dir}/${docs.name}.tar"/>

    <j:set var="tutorial.name" value="${maven.final.name}-tutorial-${timestamp}"/>
    <ant:echo>Building tutorial kit: ${tutorial.name}.zip</ant:echo>
    <ant:zip zipfile="${maven.build.dir}/${tutorial.name}.zip">
      <zipfileset dir="${basedir}/target/tutorials" prefix="tutorial"/>
    </ant:zip>
    <ant:tar tarfile="${maven.build.dir}/${tutorial.name}.tar">
      <tarfileset dir="${basedir}/target/tutorials" prefix="tutorial"/>
    </ant:tar>
    <ant:gzip 
      zipfile="${maven.build.dir}/${tutorial.name}.tar.gz"
      src="${maven.build.dir}/${tutorial.name}.tar"/>
    <ant:delete file="${maven.build.dir}/${tutorial.name}.tar"/>

  </goal>

  <!--
  Import the jar files declared as dependecies from platform.xml.  This
  includes all of the external jar files needed to run merlin.  Dependent 
  jar files are copied from the user's local repository to the merlin 
  install repository.
  -->
  <goal name="ximport">
    <j:forEach var="dep" items="${pom.dependencies}">
      <mkdir dir="${maven.build.dir}/${merlin.build.inst}/repository/${dep.artifactDirectory}/jars"/>
      <copy 
        todir="${maven.build.dir}/${merlin.build.inst}/repository/${dep.artifactDirectory}/jars/"
        file="${maven.repo.local}/${dep.artifactDirectory}/jars/${dep.artifact}"/>
    </j:forEach>
  </goal>

  <!--
  Generation of the documentation for the entire Merlin project including the 
  related subprojects.
  -->
  <goal name="merlin:site"
    description="Build the Merlin site.">
    <maven:reactor
      basedir="${basedir}"
      includes="platform.xml"
      goals="xjavadoc,license,site"
      banner="Building site:"
      ignoreFailures="false"/>
  </goal>


  <!--
  The the tuturials.
  -->
  <goal name="merlin:tutorials"
    description="Build tutorials.">
    <maven:reactor
      basedir="${basedir}"
      includes="platform.xml"
      goals="xtutorials"
      banner="Building tutorials:"
      ignoreFailures="false"/>
  </goal>

  <goal name="xtutorials">
    <ant:mkdir dir="${basedir}/target/tutorials"/>
    <ant:copy todir="${basedir}/target/tutorials">
      <fileset dir="${basedir}/merlin-platform/tutorials">
        <include name="README.TXT"/>
        <include name="project.xml"/>
        <include name="maven.xml"/>
        <include name="hello/**"/>
        <include name="configuration/**"/>
        <include name="context/**"/>
        <include name="composition/**"/>
        <include name="dependencies/**"/>
        <exclude name="**/target/**"/>
        <exclude name="**/*.log"/>
      </fileset>
    </ant:copy>
  </goal>

  <goal name="xjavadoc">
    <ant:mkdir dir="${maven.build.dir}/docs/api" />
    <ant:property name="copyright"
      value="Copyright &amp;copy; ${year} ${pom.organization.name}. All Rights Reserved." />
    <ant:property name="title" value="${pom.name} ${pom.currentVersion} API"/>
    <ant:javadoc destdir="${maven.build.dir}/docs/api" 
	doctitle="&lt;h1&gt;Merlin Service Management API&lt;/h1&gt;" 
      noindex="false" author="true" use="true"
	windowtitle="${title}" 
      bottom="${copyright}"
      additionalparam="-breakiterator -J-Xmx128m "
      packagenames="*,org.*">
        <j:forEach var="packageGroup" items="${pom.packageGroups}">
          <group title="${packageGroup.title}" packages="${packageGroup.packages}"/>
        </j:forEach>
        <sourcepath path="${basedir}/repository/spi/src/java"/>
        <sourcepath path="${basedir}/repository/impl/src/java"/>
        <sourcepath path="${basedir}/extension-spi/src/java"/>
        <sourcepath path="${basedir}/extension/src/java"/>
        <sourcepath path="${basedir}/composition/api/src/java"/>
        <sourcepath path="${basedir}/composition/spi/src/java"/>
        <sourcepath path="${basedir}/composition/impl/src/java"/>
        <sourcepath path="${basedir}/activation-api/src/java"/>
        <sourcepath path="${basedir}/activation-spi/src/java"/>
        <sourcepath path="${basedir}/activation/src/java"/>
        <sourcepath path="${basedir}/kernel/spi/src/java"/>
        <sourcepath path="${basedir}/kernel/impl/src/java"/>
        <classpath>
          <path refid="maven.dependency.classpath"/>
	  </classpath>
	  <link href="${sun.j2se.link}" />
	  <link href="${avalon.framework.link}" />
	  <link href="${avalon.meta.link}" />
	  <link href="${avalon.logkit.link}" />
	  <link href="${avalon.lifecycle.link}" />
	  <link href="${excalibur.configuration.link}" />
	  <link href="${excalibur.pool.link}" />
	  <link href="${excalibur.thread.link}" />
	  <link href="${excalibur.event.link}" />
    </ant:javadoc>
  </goal>

  <!--
  ==============================================================================
  utilities
  ==============================================================================
  -->

  <goal name="merlin:clean" prereqs="clean">
    <maven:reactor
      basedir="${basedir}"
      includes="**/project.xml"
      excludes="merlin-platform/**,project.xml,merlin-plugin/**/*,merlin-extensions/**"
      goals="clean"
      banner="Cleaning subproject:"
      ignoreFailures="false"/>
  </goal>

  <goal name="merlin-clean" prereqs="merlin:clean"/>
  <goal name="merlin-dist" prereqs="merlin:install"/>
  <goal name="merlin-site" prereqs="merlin:site"/>
  <goal name="merlin-libs" prereqs="merlin:update"/>

</project>
