<project default="jar:install-snapshot" xmlns:maven="jelly:maven" xmlns:j="jelly:core" xmlns:util="jelly:util" xmlns:ant="jelly:ant">

  <ant:property file="${basedir}/../build.properties"/>
  <ant:property file="${basedir}/../project.properties"/>
  <ant:property file="project.properties"/>
  <ant:property name="merlin.build.inst" value="merlin"/>
  <ant:property name="merlin.build.inst.dir" value="${maven.build.dir}/${merlin.build.inst}"/>
  <ant:property name="maven.jar.manifest.extensions.add" value="true"/>

  <ant:property name="maven.checkstyle.format" value="avalon"/>
  <ant:property name="pom.organization.identifier" value="ASF"/>
  <ant:property name="pom.specificationVersion" value="1.0"/>
  <ant:property environment="env"/>
  <ant:property name="merlin.home" value="${env.MERLIN_HOME}"/>

  <goal name="merlin:update">
    <attainGoal name="merlin:clean"/>
    <attainGoal name="merlin:dist"/>
    <attainGoal name="merlin:site"/>
    <attainGoal name="merlin:package"/>
    <attainGoal name="merlin:replicate"/>
  </goal>

  <goal name="merlin:replicate">
    <copy toDir="${merlin.home}">
      <fileset dir="${merlin.build.inst.dir}"/>
    </copy>
  </goal>

  <goal name="merlin:demo" 
    description="Execute the demo targets." >
    <maven:reactor
      basedir="${basedir}"
      includes="merlin-platform/tutorials/**/project.xml"
      excludes="**/target/**"
      goals="demo"
      banner="Demo:"
      ignoreFailures="false" />
  </goal>

  <goal name="merlin:dist" 
    description="Build the Merlin distribution." >

    <ant:mkdir dir="${merlin.build.inst.dir}"/>
    <ant:mkdir dir="${merlin.build.inst.dir}/ext"/>
    <ant:mkdir dir="${merlin.build.inst.dir}/bin/lib"/>

    <!--
    Install the sub-project jars (meta, assembly, merlin, etc.)
    into the user's local repository and put a copy in the 
    build target install directory.
    -->

    <maven:reactor
      basedir="${basedir}"
      includes="**/project.xml"
      excludes="merlin-platform/**,merlin-plugin/**,project.xml,kernel/bootstrap/*,merlin-extensions/**"
      goals="jar:install-snapshot"
      banner="Installing:"
      ignoreFailures="false" />

    <maven:reactor
      basedir="${basedir}"
      includes="kernel/bootstrap/project.xml"
      goals="jar:install"
      banner="Installing:"
      ignoreFailures="false" />
    <ant:copy 
       file="${basedir}/kernel/bootstrap/target/merlin-bootstrap-1.0.jar" 
       toDir="${merlin.build.inst.dir}/bin/lib"/>

    <!--
    Import the dependent jar files referenced by the SMP 
    subproject into the install directory.
    -->
    <maven:reactor
      basedir="${basedir}"
      includes="merlin-platform/project.xml"
      goals="merlin-import-external-jars"
      banner="Resolving dependencies:"
      ignoreFailures="false"/>

    <!--
    Copy the xml api jar file to the merlin/ext directory so that it 
    will included in the JVM bootstrap process.
    -->
    <ant:copy 
       file="${merlin.build.inst.dir}/repository/xml-apis/jars/xml-apis-2.0.2.jar" 
       toDir="${merlin.build.inst.dir}/ext"/>
    <ant:copy 
       file="${merlin.build.inst.dir}/repository/xml-apis/jars/xmlParserAPIs-2.0.2.jar" 
       toDir="${merlin.build.inst.dir}/ext"/>
    <delete dir="${merlin.build.inst.dir}/repository/xml-apis"/>
    <ant:copy 
       file="${merlin.build.inst.dir}/repository/xerces/jars/xerces-2.4.0.jar" 
       toDir="${merlin.build.inst.dir}/ext"/>
    <delete dir="${merlin.build.inst.dir}/repository/xerces"/>

    <attainGoal name="merlinx-install-plugin"/>

    <!--
    Add the supporting resources.
    -->
    <ant:copy toDir="${merlin.build.inst.dir}">
      <fileset dir="${basedir}/merlin-platform/src">
        <include name="bin/**/*"/>
        <include name="config/**/*"/>
        <include name="repository/**/*"/>
      </fileset>
      <fileset dir="${basedir}">
        <include name="LICENSE.txt"/>
        <include name="README.TXT"/>
      </fileset>
    </ant:copy>

    <ant:chmod file="${merlin.build.inst.dir}/bin/merlin.sh" perm="ugo+rx"/>
    <ant:chmod file="${merlin.build.inst.dir}/bin/merlinx.sh" perm="ugo+rx"/>
    <ant:chmod file="${merlin.build.inst.dir}/bin/merlin-server.sh" perm="ugo+rx"/>

    <ant:copy toDir="${maven.build.dir}">
      <fileset dir="${basedir}">
        <include name="INSTALLATION.TXT"/>
      </fileset>
    </ant:copy>

  </goal>

  <goal name="merlin:package">
    <maven:snapshot project="${pom}"/>    
    <j:set var="timestamp" value="${snapshotSignature.substring(7,15)}"/>
    <j:set var="package.name" value="${maven.final.name}-dist-${timestamp}"/>

    <ant:echo>Building distribution: ${package.name}.zip</ant:echo>
    <ant:zip zipfile="${maven.build.dir}/${package.name}.zip">
      <zipfileset dir="${merlin.build.inst.dir}" prefix="merlin"/>
      <fileset dir="${basedir}">
        <include name="INSTALLATION.TXT"/>
      </fileset>
      <fileset dir="${basedir}/merlin-plugin/target">
        <include name="*.jar"/>
      </fileset>
      <fileset dir="${basedir}/../meta/plugin/target">
        <include name="*.jar"/>
      </fileset>
    </ant:zip>

    <j:set var="docs.name" value="${maven.final.name}-docs-${timestamp}"/>
    <ant:echo>Building doc kit: ${docs.name}.zip</ant:echo>
    <ant:zip zipfile="${maven.build.dir}/${docs.name}.zip">
      <zipfileset dir="${basedir}/merlin-platform/target/docs" prefix="docs"/>
    </ant:zip>

    <j:set var="tutorial.name" value="${maven.final.name}-tutorial-${timestamp}"/>
    <ant:echo>Building tutorial kit: ${tutorial.name}.zip</ant:echo>
    <ant:zip zipfile="${maven.build.dir}/${tutorial.name}.zip">
      <zipfileset dir="${basedir}/merlin-platform/target/tutorials" prefix="tutorial"/>
    </ant:zip>

  </goal>

  <!--
  Import the jar files declared as dependecies of the smp project.  This
  includes all of the external jar files needed to run merlin.  Dependent 
  jar files are copied from the user's local repository to the merlin 
  install system library.
  -->
  <goal name="merlin-import-external-jars">
    <j:forEach var="dep" items="${pom.dependencies}">
      <mkdir dir="${basedir}/../target/${merlin.build.inst}/repository/${dep.artifactDirectory}/jars"/>
      <copy 
        todir="${basedir}/../target/${merlin.build.inst}/repository/${dep.artifactDirectory}/jars/"
        file="${maven.repo.local}/${dep.artifactDirectory}/jars/${dep.artifact}"/>
    </j:forEach>
  </goal>

  <!--
  The site goal is called by the merlin-install goal and handles the generation
  of the documetation for the entire Merlin project including the related sub-
  projects.
  -->
  <goal name="merlin:site"
    description="Build the Merlin site.">
    <maven:reactor
      basedir="${basedir}"
      includes="merlin-platform/project.xml"
      goals="xjavadoc,site"
      banner="Building site."
      ignoreFailures="false"/>
  </goal>


  <!-- convinience docs generation within runing javadoc -->
  <goal name="merlin-site-xdocs"
    description="Build the Merlin site.">
    <maven:reactor
      basedir="${basedir}"
      includes="merlin-platform/project.xml"
      goals="site"
      banner="Building site."
      ignoreFailures="false"/>
  </goal>

  <!-- convinience javadoc generation within runing xdocs -->
  <goal name="merlin-site-javadoc"
    description="Build the Merlin site.">
    <maven:reactor
      basedir="${basedir}"
      includes="merlin-platform/project.xml"
      goals="xjavadoc"
      banner="Building site."
      ignoreFailures="false"/>
  </goal>

  <goal name="xjavadoc">
    <ant:mkdir dir="${basedir}/target/docs/api" />
    <ant:property name="copyright"
      value="Copyright &amp;copy; ${year} ${pom.organization.name}. All Rights Reserved." />
    <ant:property name="title" value="${pom.name} ${pom.currentVersion} API"/>
    <ant:javadoc destdir="${basedir}/target/docs/api" 
	doctitle="&lt;h1&gt;Merlin Service Management API&lt;/h1&gt;" 
      noindex="false" author="true" use="true"
	windowtitle="${title}" 
      bottom="${copyright}"
      additionalparam="-breakiterator -J-Xmx128m "
      packagenames="*,org.*">
        <j:forEach var="packageGroup" items="${pom.packageGroups}">
          <group title="${packageGroup.title}" packages="${packageGroup.packages}"/>
        </j:forEach>
        <sourcepath path="${basedir}/../repository/spi/src/java"/>
        <sourcepath path="${basedir}/../repository/impl/src/java"/>
        <sourcepath path="${basedir}/../extension-spi/src/java"/>
        <sourcepath path="${basedir}/../extension/src/java"/>
        <sourcepath path="${basedir}/../composition-spi/src/java"/>
        <sourcepath path="${basedir}/../composition/src/java"/>
        <sourcepath path="${basedir}/../activation-api/src/java"/>
        <sourcepath path="${basedir}/../activation-spi/src/java"/>
        <sourcepath path="${basedir}/../activation/src/java"/>
        <sourcepath path="${basedir}/../kernel/spi/src/java"/>
        <sourcepath path="${basedir}/../kernel/impl/src/java"/>
        <classpath>
          <path refid="maven.dependency.classpath"/>
	  </classpath>
	  <link href="${sun.j2se.link}" />
	  <link href="${avalon.framework.link}" />
	  <link href="${avalon.meta.link}" />
	  <link href="${avalon.logkit.link}" />
	  <link href="${avalon.lifecycle.link}" />
	  <link href="${excalibur.configuration.link}" />
	  <link href="${excalibur.pool.link}" />
	  <link href="${excalibur.thread.link}" />
	  <link href="${excalibur.event.link}" />
    </ant:javadoc>
  </goal>

  <!--
  The site goal is called by the merlin-install goal and handles the generation
  of the documetation for the entire Merlin project including the related sub-
  projects.
  -->
  <goal name="merlin-site-deploy"
    description="Deploy the Merlin site.">
    <maven:reactor
      basedir="${basedir}"
      includes="merlin-platform/project.xml"
      goals="site:fsdeploy"
      banner="Deploying site."
      ignoreFailures="false"/>
  </goal>

  <!--
  Install the merlin plugin into the Maven plugin suite.
  -->
  <goal name="merlin-install-plugin" prereqs="merlin:dist" 
      description="Install Merlin Maven plugin.">
    <attainGoal name="merlinx-install-plugin"/>
  </goal>

  <goal name="merlinx-install-plugin">
    <maven:reactor
      basedir="${basedir}"
      includes="merlin-plugin/project.xml"
      goals="plugin:install"
      banner="Installing plugin:"
      ignoreFailures="false"/>
  </goal>


  <!--
  ==============================================================================
  utilities
  ==============================================================================
  -->

  <goal name="merlin:clean" prereqs="clean">
    <maven:reactor
      basedir="${basedir}"
      includes="**/project.xml"
      excludes="merlin-platform/**,project.xml,merlin-plugin/**/*,merlin-extensions/**"
      goals="clean"
      banner="Cleaning subproject:"
      ignoreFailures="false"/>
  </goal>

  <goal name="merlin-clean" prereqs="merlin:clean"/>
  <goal name="merlin-dist" prereqs="merlin:dist"/>
  <goal name="merlin-site" prereqs="merlin:site"/>
  <goal name="merlin-libs" prereqs="merlin:update"/>

</project>
