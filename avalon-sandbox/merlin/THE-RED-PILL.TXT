#
# To build Merlin you need to following:
#
#  1. checkout and build the "avalon" framework
#
#  2. checkout and build "avalon-logkit"
#
#  3. checkout and build the dependent packages from the "avalon-excalibur" project
#
#     excalibur-i18n
#     excalibur-extension
#     excalibur-configuration
#     excalibur-event
#     excalibur-collections
#     excalibur-thread
#     excalibur-threadcontext
#     excalibur-pool
#
#  4. checkout the "avalon-sandbox" project
# 
    $ cd <avalon-sandbox-dir>\merlin
    $ ant

#
# To run the demo:
#

    java -jar build\lib\merlin-bootstrap-2.1.jar -profile config\demo.xml

#
# If you want to install this version of Merlin then all you need to do is
# define an evironment variable to point to your Merlin installation root
# directory, put the following command into a bat of script or whatever in 
# your path, then go for it.
#
#
#   5. define the environment variable %MERLIN_HOME%
#   6. add %MERLIN_HOME%\bin to you system PATH
#
#
# To verify things you can re-run the demo from another location using
# the following command:
#

    merlin -system %MERLIN_HOME% -profile %MERLIN_HOME%\config\demo.xml

#
# Aside from that - keep in mind that a lot of these changes are being driven 
# the objectives of profile driven containment - and we really are not too sure 
# where that is going to take us - but its a safe bet that the assembly and 
# merlin work will influence things.  Hense the title - taking the red pill 
# is what your doing if you playing with package!
#
# Enjoy.
#
# Cheers, Steve.
#