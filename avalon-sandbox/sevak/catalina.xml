<?xml version="1.0"?>

<project default="main" basedir=".">

<!-- ==========================================================================================
     PROPERTY SETUP
     ========================================================================================== -->

  <!-- set up properties -->
  <property file="${user.home}/build.properties"/>
  <property file="${user.home}/.ant.properties"/>
  <property file="${basedir}/ant.properties"/>
  <property file="${basedir}/../ant.properties"/>
  <property file="${basedir}/default.properties"/>
  <property file="${basedir}/../default.properties"/>
  <property file="${basedir}/../cocoon.properties"/>


  <!-- Set the installation variables for Phoenix -->
  <property name="phoenix.home" value="../../jakarta-avalon-phoenix/dist"/>
  <property name="install.dir" value="${phoenix.home}/apps"/>

  <!-- Set the properties for intermediate directory -->
  <property name="build.dir" value="build"/>
  <property name="build.lib" value="${build.dir}/lib"/>
  <property name="build.xdoclet" value="${build.dir}/xdoclet"/>
  <property name="build.src" value="${build.dir}/src"/>
  <property name="build.classes" value="${build.dir}/classes"/>
  <property name="build.javadocs" value="${build.dir}/javadocs"/>
  <property name="build.docs" value="${build.dir}/docs"/>
  <property name="build.context" value="${build.dir}/documentation"/>
  <property name="build.xdocs" value="${build.context}/content/xdocs"/>

  <!-- Sevak specific properties for building -->
  <property name="build.reports" value="${build.dir}/reports"/>
  <property name="build.demoClasses" value="${build.dir}/demoClasses"/>
  <property name="build.demoXdoclet" value="${build.dir}/demoXdoclet"/>


  <!-- Set the properties for source directories -->
  <property name="src.dir" value="src"/>
  <property name="java.dir" value="${src.dir}/java"/>
  <property name="manifest.dir" value="${src.dir}/manifest"/>
  <property name="conf.dir" value="${src.dir}/conf"/>
  <property name="context.dir" value="../../jakarta-avalon/src/documentation"/>
  <property name="xdocs.dir" value="${src.dir}/xdocs"/>
  <property name="tools.dir" location="../../jakarta-avalon/tools"/>
  <property name="demo.conf.dir" location="${demo.dir}/conf"/>

  <property name="junit.jar" value="${tools.dir}/lib/junit-3.7.jar"/>
  <property name="tools.jar" value="${java.home}/../lib/tools.jar"/>
  <property name="dist.base" value="dist"/>
  <property name="do.checkstyle" value="true"/>

  <property name="lib.dir" value="lib"/>
  <property name="test.dir" value="${src.dir}/test"/>
  <property name="demo.dir" value="${src.dir}/demo"/>
  <property name="java.demo.dir" value="${demo.dir}/java"/>
  <property name="conf.demo.dir" value="${demo.dir}/conf"/>

  <!-- Tomcat Stuff -->
  <property name="catalina-version" value="4.1.12"/>
  <property name="catalina-zip-suffix" value=""/>
  <property name="catalina-dir-suffix" value=""/>
  <property name="catalina.download" value="catalina-download/jakarta-tomcat-${catalina-version}${catalina-zip-suffix}"/>
  <property name="tomcat.jars.dir" value="${lib.dir}/tomcat-jars"/>

  <path id="project.class.path">
    <pathelement path="${java.class.path}" />
    <pathelement path="${build.classes}" />
    <fileset dir="../common/lib">
      <include name="*.jar" />
    </fileset>
    <fileset dir="${tomcat.jars.dir}">
      <include name="*.jar" />
    </fileset>
  </path>

  <path id="tools.class.path">
    <pathelement location="${junit.jar}"/>
    <pathelement location="${tools.jar}"/>
    <fileset dir="${tools.dir}/lib"/>
    <fileset dir="${tools.dir}/ext"/>
  </path>

  <path id="test.class.path">
    <fileset dir="../common/lib">
      <include name="**/*.jar" />
    </fileset>
    <pathelement path="${build.lib}/sevak-api.jar"/>
  </path>

  <taskdef name="sar" classname="org.apache.avalon.phoenix.tools.tasks.Sar">
    <classpath refid="project.class.path" />
  </taskdef>

  <!-- Check Presense Of Tomcat 4.0 jars -->
  <target name="checkCatalinaJars">
    <condition property="catalina.present">
      <available file="catalina-download/catalina-${catalina-version}${catalina-zip-suffix}.zip"/>
    </condition>

  </target>

  <target name="checkNeccesaryJars" depends="checkCatalinaJars" unless="catalina.present">
    <echo>**********************************</echo>
    <echo>***** Please execute target ******</echo>
    <echo>****     'get-catalina '    ******</echo>
    <echo>****  to retrieve Tomcat4.0 ******</echo>
    <echo>****  jars or place the jars *****</echo>
    <echo>****  in ${tomcat.jars.dir} dir  *****</echo>
    <echo>**********************************</echo>

    <fail message="Catalina needed. See above."/>

  </target>

  <!-- Get catalina jars from apache repository -->
  <target name="get-catalina">
    <mkdir  dir="catalina-download"/>
    <mkdir dir="${lib.dir}"/>
    <mkdir dir="${tomcat.jars.dir}"/>

    <get src="http://jakarta.apache.org/builds/jakarta-tomcat-4.0/release/v${catalina-version}${catalina-dir-suffix}/bin/jakarta-tomcat-${catalina-version}${catalina-zip-suffix}.zip"
    dest="catalina-download/catalina-${catalina-version}${catalina-zip-suffix}.zip"
    verbose="true"
    usetimestamp="true"/>

    <!-- Get the Jakarta-COMMONS jar files which do NOT come along with the tomcat distribution -->

    <get src="http://jakarta.apache.org/builds/jakarta-tomcat-connectors/coyote/release/v1.0-rc2/commons-logging.jar"
        dest="${tomcat.jars.dir}/commons-logging.jar"
        verbose="true"
        usetimestamp="true"
    />

    <get src="http://jakarta.apache.org/builds/jakarta-tomcat-connectors/coyote/release/v1.0-rc2/tomcat-coyote.jar"
        dest="${tomcat.jars.dir}/tomcat-coyote.jar"
        verbose="true"
        usetimestamp="true"
    />

    <get src="http://jakarta.apache.org/builds/jakarta-tomcat-connectors/coyote/release/v1.0-rc2/tomcat-http11.jar"
        dest="${tomcat.jars.dir}/tomcat-http11.jar"
        verbose="true"
        usetimestamp="true"
    />

    <get src="http://jakarta.apache.org/builds/jakarta-tomcat-connectors/coyote/release/v1.0-rc2/tomcat-util.jar"
        dest="${tomcat.jars.dir}/tomcat-util.jar"
        verbose="true"
        usetimestamp="true"
    />


    <unzip src="catalina-download/catalina-${catalina-version}${catalina-zip-suffix}.zip" dest="catalina-download" />

    <delete file="${tomcat.jars.dir}/*.jar"/>

    <copy todir="${tomcat.jars.dir}" flatten="true">
      <fileset dir="catalina-download/jakarta-tomcat-${catalina-version}${catalina-zip-suffix}">
        <include  name="**/bin/*.jar"/>
        <include  name="**/lib/*.jar"/>
      </fileset>
    </copy>

  </target>

  <!-- prepare -->
  <target name="prepare" depends="checkNeccesaryJars" >   
  </target>



 <!--- Build Test SAR Archive -->
 <target name="sar" depends="prepare" description="Builds a Demo block which uses Sevak Service">
    <ant antfile="build.xml" target="jars"/>
    <ant antfile="build.xml" target="demo-jar"/>

    <sar sarfile="${build.lib}/sevak-catalina-demo.sar"
         config="${conf.demo.dir}/catalina-config.xml"
         environment="${conf.demo.dir}/catalina-environment.xml"
         assembly="${conf.demo.dir}/catalina-assembly.xml" >

      <lib dir="${build.lib}/">
        <include name="sevak-catalina.jar"/>
        <include name="sevak-demo.jar"/>
        <include name="sevak-api.jar"/>
        <include name="sevak-demo.war"/>
      </lib>
      <zipfileset dir="${catalina.download}">
          <exclude name="**/bin/**"/>
      </zipfileset>
      <zipfileset dir="${catalina.download}/bin" prefix="common/lib">
          <include name="*.jar"/>
      </zipfileset>
      <zipfileset dir="${build.lib}" prefix="server/lib">
          <include name="sevak-catalina-impl.jar"/>
      </zipfileset>
      <zipfileset dir="${conf.demo.dir}" prefix="conf">
          <include name="tomcat-users.xml"/>
      </zipfileset>
      <zipfileset dir="${java.home}/../lib/" prefix="common/lib">
          <include name="tools.jar"/>
      </zipfileset>                
      
    </sar>

    <!-- Copy build/lib contents to dist/ folder -->

    <copy todir="${dist.base}">
      <fileset dir="${build.lib}">
        <include name="**"/>
      </fileset>
    </copy>

 </target>

 <target name="install" depends="sar" description="Installs Demo SAR into Phoenix" >
     <echo message="Installing to ${install.dir}" />
    <delete dir="${install.dir}/sevak-catalina-demo" />
    <copy file="${build.lib}/sevak-catalina-demo.sar" todir="${install.dir}" />
  </target>

</project>
