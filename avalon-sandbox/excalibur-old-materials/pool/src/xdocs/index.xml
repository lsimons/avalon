<?xml version="1.0"?>

<document>
  <header>
    <title>Excalibur - Resource Pool Support</title>
    <authors>
      <person name="Berin Loritsch" email="bloritsch@apache.org"/>
      <person name="Leo Simons" email="mail@leosimons.com"/>
    </authors>
  </header>
  <body>
    <s1 title="Introduction">
      <p>
        Find Avalon Excalibur's Pool implementations in the
    <code>org.apache.avalon.excalibur.pool</code> package.
    There are many implementations that are ThreadSafe, and
    one that is not.  You have the option of not limiting
    used resources at all, or limiting the used resources
    based on specific rules.
      </p>
      <p>
        If you are using the Exalibur Component Management package,
    you can have your components implement Poolable or Recyclable
    from this package, and your components will be pooled.  The
    Components are pooled with a soft resource limiting pool.
    That means that as additional resources are needed, they are
    created--but once they are returned to the pool, the extra
    instances are decommissioned.
      </p>
      <p>
        The Excalibur DataSources package also uses this package,
    and uses a hard resource limiting pool.  If the number of
    open JDBC Connections exceeds the limit, an exception is
    thrown.
      </p>
    </s1>
  </body>
  <footer>
    <legal>
      Copyright (c) @year@ The Jakarta Apache Project All rights reserved.
      $Revision: 1.3 $ $Date: 2002/04/05 05:33:47 $
    </legal>
  </footer>
</document>
