<?xml version="1.0"?>
<!DOCTYPE document PUBLIC "-//APACHE//DTD Documentation V1.1//EN" "document-v11.dtd">

<document>
    <header>
        <title>Excalibur Component Utilities - Overview</title>
        <authors>
            <person name="Avalon Documentation Team" email="dev@avalon.apache.org"/>
        </authors>
    </header>
    <body>
        <section><title>ECM is Deprecated</title>
            <p>
              Due to a number of issues in ECM, not the least of which is a
              simplistic and convoluted design, it has been deprecated in
              favor of Fortress or Phoenix.  Fortress has been designed with
              ECM users in mind, so it provides a number of goodies to make
              it easier to migrate forward.  This project will be maintained
              for bug fixes only.
            </p>
        </section>
        <section><title>Introduction</title>
            <p>
            This project contains utilities for managing components. ECM
            is what we call an "avalon container", though it is somewhat
            different in architecture to newer developments like phoenix
            and fortress. Our intend is to someday completely replace ECM
            with fortress.
            In particular, this package contains the
            ExcaliburComponentManager, usually abbreviated to ECM.
            </p>
        </section>
        <section><title>Automated Component Management</title>
          <p>
            The <code>org.apache.avalon.excalibur.component</code> package
    	    in Excalibur will allow you to manage components specified in
    	    a configuration file.  The beauty of this approach is that the
    	    ComponentManagers and ComponentSelectors become the Container
    	    and automagically maintain your Component's lifecycle.
          </p>
          <p>
            The Excalibur Component Management infrastructure uses a
    	    RoleManager to help your configuration files remain readable.
    	    All classes are instantiated using the current thread's
    	    ContextClassLoader--unless you pass a different one in the
    	    constructor.
          </p>
        </section>
        <section><title>The Developing with Avalon paper</title>
            <p>
                ECM is well-documented in the Developing with Avalon
                whitepaper available
                <link href="http://avalon.apache.org/developing/">here</link>.
            </p>
        </section>
    </body>
    <footer>
        <legal>
          Copyright (c) @year@ The Jakarta Apache Project All rights reserved.
          $Revision: 1.9 $ $Date: 2003/07/07 16:31:13 $
        </legal>
    </footer>
</document>
