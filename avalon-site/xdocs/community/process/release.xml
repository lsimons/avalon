<?xml version="1.0" encoding="UTF-8"?>
<document>
  <properties>
    <author email="dev@avalon.apache.org">Avalon Documentation Team</author>
    <title>Apache Avalon: Release Management</title>
  </properties> 
        <body>
	  <section name="Not written yet....">
	    <p>We haven't got our release process written down yet.</p>
	  </section>
	  <section name="Relevant links">
	    <ul>
<li><a href="http://jakarta.apache.org/site/decisions.html">Jakarta decision process</a></li>
<li><a href="http://httpd.apache.org/dev/release.html">HTTPD release policy</a></li>
<li><a href="http://nagoya.apache.org/bugzilla/reports.cgi?product=Avalon&amp;output=most_doomed&amp;links=1&amp;banner=1&amp;quip=0">Bug summary</a></li>
<li><a href="http://cvs.apache.org/~bodewig/mirror.html">Distribution Mirroring HOWTO</a></li>
<li><a href="http://cvs.apache.org/builds/">Nightly builds</a></li>
<!--<li><a href="http://gump.covalent.net/jars/latest/">Nightly builds: jars@covalent</a></li>-->
<li><a href="http://freshmeat.net/articles/view/392/">Freshmeat on software builds</a></li>
<li><a href="http://java.sun.com/docs/books/tutorial/jar/sign/signing.html">Java tutorial: jar signing</a></li>
<li><a href="http://java.sun.com/j2se/1.4/docs/tooldocs/tools.html#security">JDK Security tool docs</a></li>
<li><a href="http://cvs.apache.org/viewcvs.cgi/jakarta-tomcat-4.0/RELEASE-PLAN-4.1.txt">Tomcat 4 release plan</a></li>
	    </ul>
	  </section>
	  <section name="Noel's thoughts">
	    <p>Noel J. Bergman wrote to avalon-dev:</p>
	    <source>
Q: "Is the Avalon PMC able to define a coordinated Release of all the A4
modules such that we know that they all work together?"

My primary concern is not the code, but whether or not the Avalon PMC is
ready to act on its responsibilities, and do a coordinated Release of A4.  I
firmly believe that the Avalon PMC has a responsibility to determine a
consistent set of packages that work together, rather than leave it as a
Chinese menu for users to figure out.

My suggestion is that the Avalon Community make it a priority to take stock
of A4, put together a Release Plan, designate a Release Manager, and act as
a group to do a Release.  Here are a few items to consider for the Release
Plan:

  1) Identify bugs and incompatibilities.
  2) Decide which ones will be fixed.
  3) Decide what other changes are necessary, e.g., packaging.
  4) Make the code changes.
  5) Test
  6) Update the documentation and web site.

The documentation on the web site doesn't appear to reflect the past year's
changes.  And I'm still bemused over how a COP platform that "is a framework
that allows components of varying scale to be created, managed [and] used"
is going to explain why Component is deprecated.  But

Here are a few useful links:

  Jakarta: http://jakarta.apache.org/site/decisions.html
  Apache HTTPD release policies: http://httpd.apache.org/dev/release.html
  Avalon bug summary:
http://nagoya.apache.org/bugzilla/reports.cgi?product=Avalon&amp;output=most_doo
med&amp;links=1&amp;banner=1&amp;quip=0
  Mirroring: http://cvs.apache.org/~bodewig/mirror.html

Subsequent to the Release, I would suggest that the Avalon Community
consider how best to focus its resources.  From what I seem to be hearing
from Paul and others regarding the state of the code and the possibilities
for proper interoperation between A4 containers, I am beginning to believe
that the best option is for the Community to put A4 in maintenance mode, and
focus on A5.  But, again, that is something for the Avalon Community to
decide after doing a Release.

	--- Noel
	    </source>
	  </section>
        </body>
</document>
