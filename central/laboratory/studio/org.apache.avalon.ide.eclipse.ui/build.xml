<?xml version="1.0" encoding="UTF-8"?>
<project name="org.apache.avalon.MerlinDeveloperUI" default="build.jars" basedir=".">

	<property name="bootclasspath" value=""/>
	<property name="basews" value="${ws}"/>
	<property name="baseos" value="${os}"/>
	<property name="basearch" value="${arch}"/>
	<property name="basenl" value="${nl}"/>
	<property name="javacFailOnError" value="false"/>
	<property name="javacDebugInfo" value="on"/>
	<property name="javacVerbose" value="true"/>
	<property name="javacSource" value="1.3"/>
	<property name="javacTarget" value="1.1"/>

	<target name="init" depends="properties">
		<property name="temp.folder" value="${basedir}/temp.folder"/>
		<property name="plugin.destination" value="${basedir}"/>
		<property name="build.result.folder" value="${basedir}"/>
	</target>

	<target name="properties" if="eclipse.running">
		<property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
	</target>

	<target name="build.update.jar" depends="init" description="Build the plug-in: org.apache.avalon.MerlinDeveloperUI for an update site.">
		<delete dir="${temp.folder}"/>
		<mkdir dir="${temp.folder}"/>
		<antcall target="build.jars"/>
		<antcall target="gather.bin.parts">
			<param name="destination.temp.folder" value="${temp.folder}/"/>
		</antcall>
		<zip zipfile="${plugin.destination}/org.apache.avalon.MerlinDeveloperUI_0.0.4.jar" basedir="${temp.folder}/org.apache.avalon.MerlinDeveloperUI_0.0.4" filesonly="false" whenempty="skip"/>
		<delete dir="${temp.folder}"/>
	</target>

	<target name="gather.bin.parts" depends="init" if="destination.temp.folder">
		<mkdir dir="${destination.temp.folder}/org.apache.avalon.MerlinDeveloperUI_0.0.4"/>
		<copy todir="${destination.temp.folder}/org.apache.avalon.MerlinDeveloperUI_0.0.4">
			<fileset dir="${build.result.folder}" includes="plugin.xml,*.jar,MerlinDeveloperUI.jar,plugin.properties,properties/,icons/"			/>
		</copy>
		<copy todir="${destination.temp.folder}/org.apache.avalon.MerlinDeveloperUI_0.0.4">
			<fileset dir="${basedir}" includes="plugin.xml,*.jar,MerlinDeveloperUI.jar,plugin.properties,properties/,icons/"			/>
		</copy>
	</target>

	<target name="MerlinDeveloperUI.jar" depends="init" unless="MerlinDeveloperUI.jar" description="Create jar: MerlinDeveloperUI.jar.">
		<delete dir="${temp.folder}/MerlinDeveloperUI.jar.bin"/>
		<mkdir dir="${temp.folder}/MerlinDeveloperUI.jar.bin"/>
		<!-- compile the source code -->
		<javac destdir="${temp.folder}/MerlinDeveloperUI.jar.bin" failonerror="${javacFailOnError}" verbose="${javacVerbose}" debug="${javacDebugInfo}" includeAntRuntime="no" bootclasspath="${bootclasspath}" classpath="../../plugins/org.eclipse.core.boot_3.0.0/boot.jar;../../plugins/org.eclipse.core.runtime_3.0.0/runtime.jar;../../plugins/org.eclipse.core.resources_3.0.0/resources.jar;../../plugins/org.eclipse.core.resources.win32_3.0.0/resources.jar;../../plugins/org.eclipse.ui_3.0.0/ui.jar;../../plugins/org.eclipse.help_3.0.0/help.jar;../../plugins/org.eclipse.swt_3.0.0/ws/${basews}/swt.jar;../../plugins/org.eclipse.swt.win32_3.0.0/ws/${basews}/swt.jar;../../plugins/org.eclipse.jface_3.0.0/jface.jar;../../plugins/org.eclipse.ui.workbench_3.0.0/workbench.jar;../../plugins/org.eclipse.pde.ui_3.0.0/pdeui.jar;../../plugins/org.eclipse.ui.ide_3.0.0/ide.jar;../../plugins/org.eclipse.ui.win32_3.0.0/ide.jar;../../plugins/org.eclipse.ui.win32_3.0.0/workbenchwin32.jar;../../plugins/org.eclipse.ui.views_3.0.0/views.jar;../../plugins/org.eclipse.update.core_3.0.0/updatecore.jar;../../plugins/org.eclipse.update.core.win32_3.0.0/updatecore.jar;../../plugins/org.eclipse.jface.text_3.0.0/jfacetext.jar;../../plugins/org.eclipse.text_3.0.0/text.jar;../../plugins/org.eclipse.ui.workbench.texteditor_3.0.0/texteditor.jar;../../plugins/org.eclipse.ui.editors_3.0.0/editors.jar;../../plugins/org.eclipse.core.filebuffers_3.0.0/filebuffers.jar;../../plugins/org.eclipse.ant.core_3.0.0/antsupport.jar;../../plugins/org.eclipse.core.variables_3.0.0/variables.jar;../../plugins/org.eclipse.debug.core_3.0.0/dtcore.jar;../../plugins/org.eclipse.debug.ui_3.0.0/dtui.jar;../../plugins/org.eclipse.ui.console_3.0.0/console.jar;../../plugins/org.eclipse.help.base_3.0.0/helpbase.jar;../../plugins/org.apache.lucene_1.3.0.RC2/parser.jar;../../plugins/org.apache.lucene_1.3.0.RC2/lucene-1.3-rc2.jar;../../plugins/org.eclipse.help.appserver_3.0.0/appserver.jar;../../plugins/org.eclipse.jdt.core_3.0.0/jdtcore.jar;../../plugins/com.swtdesigner.fragment.jdt.core_1.2.2/jdtcore.jar;../../plugins/com.swtdesigner.fragment.jdt.core_1.2.2/designerJdtCore.jar;../../plugins/org.eclipse.team.core_3.0.0/team.jar;../../plugins/org.eclipse.jdt.debug.ui_3.0.0/jdiui.jar;../../plugins/org.eclipse.search_3.0.0/search.jar;../../plugins/org.eclipse.jdt.debug_3.0.0/jdi.jar;../../plugins/org.eclipse.jdt.debug_3.0.0/jdimodel.jar;../../plugins/org.eclipse.jdt.debug_3.0.0/tools.jar;../../plugins/org.eclipse.jdt.launching_3.0.0/launching.jar;../../plugins/org.eclipse.compare_3.0.0/compare.jar;../../plugins/org.eclipse.jdt.ui_3.0.0/jdt.jar;../../plugins/org.eclipse.pde_3.0.0/pde.jar;../../plugins/org.eclipse.pde.core_3.0.0/pdecore.jar;../../plugins/org.apache.ant_1.5.4/lib/ant.jar;../../plugins/org.apache.ant_1.5.4/lib/optional.jar;../../plugins/org.eclipse.pde.build_3.0.0/pdebuild.jar;../../plugins/org.eclipse.update.ui.forms_3.0.0/forms.jar;../../plugins/org.eclipse.ant.ui_3.0.0/antui.jar;../../plugins/org.eclipse.ui.externaltools_3.0.0/externaltools.jar;../../plugins/org.eclipse.jdt.junit_3.0.0/junitsupport.jar;../../plugins/org.eclipse.jdt.junit.runtime_3.0.0/junitruntime.jar;../../plugins/org.junit_3.8.1/junit.jar;../org.apache.avalon.ide.eclipse.core/MerlinDeveloperCore.jar;../org.apache.avalon.ide.eclipse.core/lib/xstream-0.2.jar;../org.apache.avalon.ide.eclipse.core/lib/xdoclet-1.2b4.jar;../org.apache.avalon.ide.eclipse.core/lib/xjavadoc-1.0.jar;../org.apache.avalon.ide.eclipse.core/lib/commons-collections-2.0.jar;../org.apache.avalon.ide.eclipse.core/lib/commons-lang.jar;../org.apache.avalon.ide.eclipse.core/lib/commons-logging.jar;../org.apache.avalon.ide.eclipse.launch/MerlinDeveloperLaunch.jar;../org.apache.avalon.ide.eclipse.launch/lib/merlin-cli-3.2.4.jar" source="${javacSource}" target="${javacTarget}"		>
			<src path="src/"			/>
		</javac>
		<!-- copy necessary resources -->
		<copy todir="${temp.folder}/MerlinDeveloperUI.jar.bin">
			<fileset dir="src/" excludes="**/*.java"			/>
		</copy>
		<mkdir dir="${build.result.folder}"/>
		<jar jarfile="${build.result.folder}/MerlinDeveloperUI.jar" basedir="${temp.folder}/MerlinDeveloperUI.jar.bin"/>
		<delete dir="${temp.folder}/MerlinDeveloperUI.jar.bin"/>
	</target>

	<target name="MerlinDeveloperUIsrc.zip" depends="init" unless="MerlinDeveloperUIsrc.zip">
		<mkdir dir="${build.result.folder}"/>
		<zip zipfile="${build.result.folder}/MerlinDeveloperUIsrc.zip" filesonly="false" whenempty="skip">
			<fileset dir="src/" includes="**/*.java"			/>
		</zip>
	</target>

	<target name="build.jars" depends="init" description="Build all the jars for the plug-in: org.apache.avalon.MerlinDeveloperUI.">
		<available property="MerlinDeveloperUI.jar" file="${build.result.folder}/MerlinDeveloperUI.jar"/>
		<antcall target="MerlinDeveloperUI.jar"/>
	</target>

	<target name="build.sources" depends="init">
		<available property="MerlinDeveloperUIsrc.zip" file="${build.result.folder}/MerlinDeveloperUIsrc.zip"/>
		<antcall target="MerlinDeveloperUIsrc.zip"/>
	</target>

	<target name="build.zips" depends="init">
	</target>

	<target name="gather.sources" depends="init" if="destination.temp.folder">
		<mkdir dir="${destination.temp.folder}/org.apache.avalon.MerlinDeveloperUI_0.0.4"/>
		<copy file="${build.result.folder}/MerlinDeveloperUIsrc.zip" todir="${destination.temp.folder}/org.apache.avalon.MerlinDeveloperUI_0.0.4"/>
		<copy todir="${destination.temp.folder}/org.apache.avalon.MerlinDeveloperUI_0.0.4">
			<fileset dir="${basedir}" includes="src/,properties/,icons/,plugin.properties,build.xml"			/>
		</copy>
	</target>

	<target name="gather.logs" depends="init" if="destination.temp.folder">
		<mkdir dir="${destination.temp.folder}/org.apache.avalon.MerlinDeveloperUI_0.0.4"/>
		<copy file="${temp.folder}/MerlinDeveloperUI.jar.bin.log" todir="${destination.temp.folder}/org.apache.avalon.MerlinDeveloperUI_0.0.4"/>
	</target>

	<target name="clean" depends="init" description="Clean the plug-in: org.apache.avalon.MerlinDeveloperUI of all the zips, jars and logs created.">
		<delete file="${build.result.folder}/MerlinDeveloperUI.jar"/>
		<delete file="${build.result.folder}/MerlinDeveloperUIsrc.zip"/>
		<delete file="${plugin.destination}/org.apache.avalon.MerlinDeveloperUI_0.0.4.jar"/>
		<delete file="${plugin.destination}/org.apache.avalon.MerlinDeveloperUI_0.0.4.zip"/>
		<delete dir="${temp.folder}"/>
	</target>

	<target name="refresh" depends="init" if="eclipse.running" description="Refresh this folder.">
		<eclipse.convertPath fileSystemPath="C:/develop/eclipse/workspace/org.apache.avalon.ide.eclipse.ui/" property="resourcePath"/>
		<eclipse.refreshLocal resource="org.apache.avalon.MerlinDeveloperUI" depth="infinite"/>
	</target>

	<target name="zip.plugin" depends="init" description="Create a zip containing all the elements for the plug-in: org.apache.avalon.MerlinDeveloperUI.">
		<delete dir="${temp.folder}"/>
		<mkdir dir="${temp.folder}"/>
		<antcall target="build.jars"/>
		<antcall target="build.sources"/>
		<antcall target="gather.bin.parts">
			<param name="destination.temp.folder" value="${temp.folder}/"/>
		</antcall>
		<antcall target="gather.sources">
			<param name="destination.temp.folder" value="${temp.folder}/"/>
		</antcall>
		<delete>
			<fileset dir="${temp.folder}" includes="**/*.bin.log"			/>
		</delete>
		<zip zipfile="${plugin.destination}/org.apache.avalon.MerlinDeveloperUI_0.0.4.zip" basedir="${temp.folder}" filesonly="true" whenempty="skip"/>
		<delete dir="${temp.folder}"/>
	</target>

</project>
