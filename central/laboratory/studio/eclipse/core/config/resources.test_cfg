<ResourceTemplates>
  <resourceTemplates>
    <entry>
      <string>Custom Context Tutorial</string>
      <ResourceTemplate>
        <directoryType>StandardBlock</directoryType>
        <templateId>Custom Context Tutorial</templateId>
        <description>This tutorial presents information about the management of the runtime context supplied to your component.</description>
        <wizardPages/>
        <resources>
          <Resource>
            <rootSegment>src</rootSegment>
            <sourceFilePathName>/D:/Avalon/studio/eclipse/core/templates/context/custom/HelloComponent.java</sourceFilePathName>
            <packageName>tutorial</packageName>
          </Resource>
          <Resource>
            <rootSegment>src</rootSegment>
            <sourceFilePathName>/D:/Avalon/studio/eclipse/core/templates/context/custom/NumberCruncher.java</sourceFilePathName>
            <packageName>tutorial</packageName>
          </Resource>
          <Resource>
            <rootSegment>src/BLOCK-INF</rootSegment>
            <sourceFilePathName>/D:/Avalon/studio/eclipse/core/templates/context/custom/block.xml</sourceFilePathName>
            <packageName></packageName>
          </Resource>
        </resources>
        <libraries>
          <Library>
            <name>avalon-framework-api</name>
            <version>4.2.0</version>
          </Library>
        </libraries>
      </ResourceTemplate>
    </entry>
    <entry>
      <string>HelloWorld Tutorial</string>
      <ResourceTemplate>
        <directoryType>StandardBlock</directoryType>
        <templateId>HelloWorld Tutorial</templateId>
        <description>This tutorial takes you through the creation of a very simple component, the declaration of a component type descriptor, and the declaration of a block containing the component.</description>
        <wizardPages/>
        <resources>
          <Resource>
            <rootSegment>src</rootSegment>
            <sourceFilePathName>/D:/Avalon/studio/eclipse/core/templates/hello/HelloComponent.java</sourceFilePathName>
            <packageName>tutorial</packageName>
          </Resource>
          <Resource>
            <rootSegment>src/BLOCK-INF</rootSegment>
            <sourceFilePathName>/D:/Avalon/studio/eclipse/core/templates/hello/block.xml</sourceFilePathName>
            <packageName></packageName>
          </Resource>
          <Resource>
            <rootSegment>src</rootSegment>
            <sourceFilePathName>/D:/Avalon/studio/eclipse/core/templates/hello/HelloComponent.xinfo</sourceFilePathName>
            <packageName>tutorial</packageName>
          </Resource>
        </resources>
        <libraries>
          <Library>
            <name>avalon-framework-api</name>
            <version>4.2.0</version>
          </Library>
        </libraries>
      </ResourceTemplate>
    </entry>
    <entry>
      <string>Plus Context Tutorial</string>
      <ResourceTemplate>
        <directoryType>StandardBlock</directoryType>
        <templateId>Plus Context Tutorial</templateId>
        <description>This tutorial covers usage of context entries using a constructor supplied custom context</description>
        <wizardPages/>
        <resources>
          <Resource>
            <rootSegment>src</rootSegment>
            <sourceFilePathName>/D:/Avalon/studio/eclipse/core/templates/context/plus/HelloComponent.java</sourceFilePathName>
            <packageName>tutorial</packageName>
          </Resource>
          <Resource>
            <rootSegment>src</rootSegment>
            <sourceFilePathName>/D:/Avalon/studio/eclipse/core/templates/context/plus/DemoContext.java</sourceFilePathName>
            <packageName>tutorial</packageName>
          </Resource>
          <Resource>
            <rootSegment>src</rootSegment>
            <sourceFilePathName>/D:/Avalon/studio/eclipse/core/templates/context/plus/DemoContextProvider.java</sourceFilePathName>
            <packageName>tutorial</packageName>
          </Resource>
          <Resource>
            <rootSegment>src/BLOCK-INF</rootSegment>
            <sourceFilePathName>/D:/Avalon/studio/eclipse/core/templates/context/plus/block.xml</sourceFilePathName>
            <packageName></packageName>
          </Resource>
        </resources>
        <libraries>
          <Library>
            <name>avalon-framework-api</name>
            <version>4.2.0</version>
          </Library>
        </libraries>
      </ResourceTemplate>
    </entry>
    <entry>
      <string>Configuration Tutorial</string>
      <ResourceTemplate>
        <directoryType>StandardBlock</directoryType>
        <templateId>Configuration Tutorial</templateId>
        <description>This example is the HelloComponent extended to include a configuration constructor argument and updates to log the source of the configuration based on runtime information.</description>
        <wizardPages/>
        <resources>
          <Resource>
            <rootSegment>src</rootSegment>
            <sourceFilePathName>/D:/Avalon/studio/eclipse/core/templates/configuration/HelloComponent.java</sourceFilePathName>
            <packageName>tutorial</packageName>
          </Resource>
          <Resource>
            <rootSegment>src/BLOCK-INF</rootSegment>
            <sourceFilePathName>/D:/Avalon/studio/eclipse/core/templates/configuration/block.xml</sourceFilePathName>
            <packageName></packageName>
          </Resource>
          <Resource>
            <rootSegment>src/BLOCK-INF</rootSegment>
            <sourceFilePathName>/D:/Avalon/studio/eclipse/core/templates/configuration/categories.xml</sourceFilePathName>
            <packageName></packageName>
          </Resource>
          <Resource>
            <rootSegment>src/BLOCK-INF</rootSegment>
            <sourceFilePathName>/D:/Avalon/studio/eclipse/core/templates/configuration/config.xml</sourceFilePathName>
            <packageName></packageName>
          </Resource>
          <Resource>
            <rootSegment>src</rootSegment>
            <sourceFilePathName>/D:/Avalon/studio/eclipse/core/templates/configuration/HelloComponent.xconfig</sourceFilePathName>
            <packageName>tutorial</packageName>
          </Resource>
        </resources>
        <libraries>
          <Library>
            <name>avalon-framework-api</name>
            <version>4.2.0</version>
          </Library>
        </libraries>
      </ResourceTemplate>
    </entry>
    <entry>
      <string>Strategy Context Tutorial</string>
      <ResourceTemplate>
        <directoryType>StandardBlock</directoryType>
        <templateId>Strategy Context Tutorial</templateId>
        <description>This tutorial covers the declaration of custom contextualization strategy.</description>
        <wizardPages/>
        <resources>
          <Resource>
            <rootSegment>src</rootSegment>
            <sourceFilePathName>/D:/Avalon/studio/eclipse/core/templates/context/strategy/StandardComponent.java</sourceFilePathName>
            <packageName>tutorial</packageName>
          </Resource>
          <Resource>
            <rootSegment>src</rootSegment>
            <sourceFilePathName>/D:/Avalon/studio/eclipse/core/templates/context/strategy/StandardService.java</sourceFilePathName>
            <packageName>tutorial</packageName>
          </Resource>
          <Resource>
            <rootSegment>src</rootSegment>
            <sourceFilePathName>/D:/Avalon/studio/eclipse/core/templates/context/strategy/StandardContext.java</sourceFilePathName>
            <packageName>tutorial</packageName>
          </Resource>
          <Resource>
            <rootSegment>src</rootSegment>
            <sourceFilePathName>/D:/Avalon/studio/eclipse/core/templates/context/strategy/StandardContextImp.java</sourceFilePathName>
            <packageName>tutorial</packageName>
          </Resource>
          <Resource>
            <rootSegment>src</rootSegment>
            <sourceFilePathName>/D:/Avalon/studio/eclipse/core/templates/context/strategy/Contextualizable.java</sourceFilePathName>
            <packageName>tutorial</packageName>
          </Resource>
          <Resource>
            <rootSegment>src</rootSegment>
            <sourceFilePathName>/D:/Avalon/studio/eclipse/core/templates/context/strategy/DemoContextualizationHandler.java</sourceFilePathName>
            <packageName>tutorial</packageName>
          </Resource>
          <Resource>
            <rootSegment>src/BLOCK-INF</rootSegment>
            <sourceFilePathName>/D:/Avalon/studio/eclipse/core/templates/context/strategy/block.xml</sourceFilePathName>
            <packageName></packageName>
          </Resource>
        </resources>
        <libraries>
          <Library>
            <name>avalon-framework-api</name>
            <version>4.2.0</version>
          </Library>
        </libraries>
      </ResourceTemplate>
    </entry>
    <entry>
      <string>Casting Context Tutorial</string>
      <ResourceTemplate>
        <directoryType>StandardBlock</directoryType>
        <templateId>Casting Context Tutorial</templateId>
        <description>This tutorial covers the declaration of context casting criteria and the creation of a typed context.</description>
        <wizardPages/>
        <resources>
          <Resource>
            <rootSegment>src</rootSegment>
            <sourceFilePathName>/D:/Avalon/studio/eclipse/core/templates/context/casting/HelloComponent.java</sourceFilePathName>
            <packageName>tutorial</packageName>
          </Resource>
          <Resource>
            <rootSegment>src</rootSegment>
            <sourceFilePathName>/D:/Avalon/studio/eclipse/core/templates/context/casting/DemoContext.java</sourceFilePathName>
            <packageName>tutorial</packageName>
          </Resource>
          <Resource>
            <rootSegment>src</rootSegment>
            <sourceFilePathName>/D:/Avalon/studio/eclipse/core/templates/context/casting/DemoContextProvider.java</sourceFilePathName>
            <packageName>tutorial</packageName>
          </Resource>
          <Resource>
            <rootSegment>src/BLOCK-INF</rootSegment>
            <sourceFilePathName>/D:/Avalon/studio/eclipse/core/templates/context/casting/block.xml</sourceFilePathName>
            <packageName></packageName>
          </Resource>
        </resources>
        <libraries>
          <Library>
            <name>avalon-framework-api</name>
            <version>4.2.0</version>
          </Library>
        </libraries>
      </ResourceTemplate>
    </entry>
    <entry>
      <string>Alias Context Tutorial</string>
      <ResourceTemplate>
        <directoryType>StandardBlock</directoryType>
        <templateId>Alias Context Tutorial</templateId>
        <description>This tutorial covers usage of standard context entries using a constructor supplied context (as opposed to the classic Contextualization delivery mecahanism).</description>
        <wizardPages/>
        <resources>
          <Resource>
            <rootSegment>src</rootSegment>
            <sourceFilePathName>/D:/Avalon/studio/eclipse/core/templates/context/alias/HelloComponent.java</sourceFilePathName>
            <packageName>tutorial.application</packageName>
          </Resource>
          <Resource>
            <rootSegment>impl/BLOCK-INF</rootSegment>
            <sourceFilePathName>/D:/Avalon/studio/eclipse/core/templates/context/alias/block.xml</sourceFilePathName>
            <packageName></packageName>
          </Resource>
        </resources>
        <libraries/>
      </ResourceTemplate>
    </entry>
    <entry>
      <string>Standard Context Tutorial</string>
      <ResourceTemplate>
        <directoryType>StandardBlock</directoryType>
        <templateId>Standard Context Tutorial</templateId>
        <description>This tutorial presents information about the management of the runtime context supplied to your component.</description>
        <wizardPages/>
        <resources>
          <Resource>
            <rootSegment>src</rootSegment>
            <sourceFilePathName>/D:/Avalon/studio/eclipse/core/templates/context/standard/HelloComponent.java</sourceFilePathName>
            <packageName>tutorial</packageName>
          </Resource>
          <Resource>
            <rootSegment>src/BLOCK-INF</rootSegment>
            <sourceFilePathName>/D:/Avalon/studio/eclipse/core/templates/context/standard/block.xml</sourceFilePathName>
            <packageName></packageName>
          </Resource>
        </resources>
        <libraries>
          <Library>
            <name>avalon-framework-api</name>
            <version>4.2.0</version>
          </Library>
        </libraries>
      </ResourceTemplate>
    </entry>
  </resourceTemplates>
  <directoryManager>
    <directoryTemplates>
      <entry>
        <string>ImplApiBlock</string>
        <DirectoryTemplate>
          <id>ImplApiBlock</id>
          <directories>
            <Directory>
              <name>impl</name>
              <isSource>true</isSource>
            </Directory>
            <Directory>
              <name>api</name>
              <isSource>true</isSource>
            </Directory>
            <Directory>
              <name>impl/BLOCK-INF</name>
              <isSource>false</isSource>
            </Directory>
            <Directory>
              <name>test</name>
              <isSource>true</isSource>
            </Directory>
            <Directory>
              <name>docs</name>
              <isSource>false</isSource>
            </Directory>
          </directories>
        </DirectoryTemplate>
      </entry>
      <entry>
        <string>StandardBlock</string>
        <DirectoryTemplate>
          <id>StandardBlock</id>
          <directories>
            <Directory>
              <name>src</name>
              <isSource>true</isSource>
            </Directory>
            <Directory>
              <name>src/BLOCK-INF</name>
              <isSource>false</isSource>
            </Directory>
            <Directory>
              <name>test</name>
              <isSource>true</isSource>
            </Directory>
            <Directory>
              <name>docs</name>
              <isSource>false</isSource>
            </Directory>
          </directories>
        </DirectoryTemplate>
      </entry>
    </directoryTemplates>
  </directoryManager>
</ResourceTemplates>