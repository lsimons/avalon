<?xml version="1.0" encoding="UTF-8"?>
<document>
  <properties>
    <author email="dev@avalon.apache.org">Avalon Documentation Team</author>
    <title>Apache Avalon: Legacy</title>
  </properties>

  <body>
    <section name="History of Container Solutions">
      <p>
        Within Avalon there has been a number of container solutions. This 
        reflects a historical divergence and a present convergence within
        the area of containment technology within Avalon. The original 
        containment solutions ECM and Phoenix focussed on very different 
        approaches to component management. The ECM model dealt with 
        primarily pooled objects used in environments such as 
        <a href="http://cocoon.apache.org/">Cocoon</a>. The
        Phoenix model dealt with a strict singleton model supporting 
        project such as <a href="http://james.apache.org">James</a>.  
        Further developments resulted in the release of 
        <a href="http://excalibur.apache.org/fortress/">Fortress</a> 
        and <a href="../../../../products/runtime/index.html">Merlin</a>.  
        Fortress replaced the ECM solution
        and was positioned as a migration vehicle for components to move
        towards Avalon's latest container - Merlin.  The Merlin container
        is an attempt at being a flexible and adaptive container
        that leverages a set of common containment facilities, equally
        suited for embedded and stand-alone use.
      </p>
      <p>
        The Avalon community went into an identity crisis, and was struggling
        to support multiple containers. This also lead to decision paralysis
        and community division. In March 2004, the community finally pulled
        itself together and made the historic vote to forge forward with a
        <strong>Single Platform</strong>, and only Merlin fits the bill of
        being that platform.
      </p>
      <p>
        Below is the list of legacy containers.
        Avalon recommend that new users only invest time in 
        <a href="../../../../products/runtime/index.html">Merlin</a>, the only 
        sustainable solution. ECM and Fortress will be
        partially supported during a transition period, but eventually
        taken out of Avalon completely. Users who are interested in Phoenix
        and that can't use Merlin, can investigate if the 
        <a href="http://loom.jcontainer.org">Loom project</a> can be of any 
        assistance.
      </p>

      <table>
        <tr><th>Product</th><th>Description</th></tr>
        <tr>
          <td>
            <p>
              <a name="fortress"/>
              <a href="http://excalibur.apache.org/fortress/">Avalon 
              Fortress</a>
            </p>
          </td>
          <td>
            <p>
              Fortress contains a framework to help you create your own avalon 
              containers. It boasts asynchronous management of your component 
              instances, high scalability, easier maintenance of your code, and
              easy embedding into various environments like servlet engines. 
            </p>
          </td>
        </tr>
        <tr>
          <td>
            <p>
              <a name="ecm"/>
              <a href="http://excalibur.apache.org">ECM</a>
            </p>
          </td>
          <td>
            <p>
              This package contains the ExcaliburComponentManager (ECM). ECM has 
              been deprecated in favour of the new Fortress container. 
            </p>
          </td>
        </tr>
        <tr>
          <td>
            <p>
              <a name="phoenix"/>
              Phoenix, see <a href="http://loom.codehaus.org">Loom project</a>
            </p>
          </td>
          <td>
            <p>
              Phoenix is a micro-kernel designed and implemented on top of 
              the Avalon framework. It provides a number of facilities to 
              manage the environment of Server Applications. Such facilities 
              include log management, classloading, thread management and 
              security.
            </p>
          </td>
        </tr>
      </table>
    </section>
  </body>
</document>
 
 
