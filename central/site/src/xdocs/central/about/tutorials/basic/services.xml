<?xml version="1.0"?>

<!-- 
 Copyright 2004 Apache Software Foundation
 Licensed  under the  Apache License,  Version 2.0  (the "License");
 you may not use  this file  except in  compliance with the License.
 You may obtain a copy of the License at 
 
   http://www.apache.org/licenses/LICENSE-2.0
 
 Unless required by applicable law or agreed to in writing, software
 distributed  under the  License is distributed on an "AS IS" BASIS,
 WITHOUT  WARRANTIES OR CONDITIONS  OF ANY KIND, either  express  or
 implied.
 
 See the License for the specific language governing permissions and
 limitations under the License.
-->

<document>
  <properties>
    <author email="dev@avalon.apache.org">Avalon Documentation Team</author>
    <title>Avalon Central</title>
  </properties> 

  <body>
    <section name="Service Publication">

        <p>
        One of the most important aspects of a component management 
        platform is the ability to provide component assembly.  Assembly
        is achieved by wiring together the services provided by one component
        with the service dependencies declared by a consumer component. 
        </p>
        <p>
        This tutorial presents the creation of a simple component that 
        publishes a service.  This component will be used in the subsequent 
        tutorial dealing with dependencies. 
        </p>
        <p>
        Resources supporting this tutorial are contained in the 
        tutorials/dependencies/ package.
        </p>

      <subsection name="Service Interface">
        <p>
        Services are normally exposed under a service interface. The following
        java source is the declaration of a RandomGenerator service interface. 
        </p>
        <p><i>RandomGenerator.java</i></p>
<source>
package tutorial;

/**
 * A service that provides access to a random number.
 */
public interface RandomGenerator
{

   /**
    * Return a random integer
    * @return the random number
    */
    int getRandom();

}
</source>
      </subsection>
      <subsection name="Component Implementation">
        <p>
        The following source contains the component implementation for the 
        service above. 
        </p>
        <p><i>RandomGeneratorProvider.java</i></p>
<source>
package tutorial;

import java.util.Random;

import org.apache.avalon.framework.logger.AbstractLogEnabled;
import org.apache.avalon.framework.activity.Initializable;
import org.apache.avalon.framework.activity.Disposable;

/**
 * An implementation of a random number generator.
 *
 * @avalon.component version="1.0" name="random" lifestyle="singleton"
 * @avalon.service type="tutorial.RandomGenerator" version="1.0"
 */
public class RandomGeneratorProvider extends AbstractLogEnabled 
  implements Initializable, RandomGenerator, Disposable
{

    private Random m_random = new Random();

    public void initialize()
    {
        getLogger().info( "initialization" );
    }

   /**
    * Return a random integer
    * @return the random number
    */
    public int getRandom()
    {
        getLogger().info( "processing request" );
        return m_random.nextInt();
    }

    public void dispose()
    {
        getLogger().info( "disposal" );
    }

}
</source>
        <p>
          In addition to the component implementation, we need to generate an xinfo
          resource in which we declare the publication of the service by 
          the component.  In this example the component type is declaring 
          one service although multiple service declarations are supported. This 
          is generated automatically based on the following tag:
        </p>
<source><![CDATA[
 * @avalon.service type="tutorial.RandomGenerator" version="1.0"
]]></source>
        <p>
          The type descriptor generated for this component is listed below.
        </p>
        <p><i>RandomGeneratorProvider.xinfo</i></p>
<source><![CDATA[
<?xml version="1.0"?>
<!DOCTYPE type
      PUBLIC "-//AVALON/Type DTD Version 1.0//EN"
             "http://avalon.apache.org/dtds/meta/type_1_1.dtd" >
<type>
  <info>
    <name>random</name>
    <version>1.0.0</version>
    <lifestyle>singleton</lifestyle>
    <collection>hard</collection>
  </info>
  <services>
    <service type="tutorial.RandomGenerator" version="1.0.0"/>
  </services>
</type>
]]></source>
        <p>
          The <a href="dependencies/auto.html">following tutorial</a> presents the 
          use of this service by HelloComponent.
        </p>

      </subsection>
    </section>
  </body>

</document>




