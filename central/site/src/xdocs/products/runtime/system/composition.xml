<?xml version="1.0"?>

<!-- 
 Copyright 2004 Apache Software Foundation
 Licensed  under the  Apache License,  Version 2.0  (the "License");
 you may not use  this file  except in  compliance with the License.
 You may obtain a copy of the License at 
 
   http://www.apache.org/licenses/LICENSE-2.0
 
 Unless required by applicable law or agreed to in writing, software
 distributed  under the  License is distributed on an "AS IS" BASIS,
 WITHOUT  WARRANTIES OR CONDITIONS  OF ANY KIND, either  express  or
 implied.
 
 See the License for the specific language governing permissions and
 limitations under the License.
-->

<document>

  <properties>
    <author email="mcconnell@apache.org">Stephen McConnell</author>
    <title>Merlin Runtime</title>
  </properties>

  <body>

    <section name="Avalon Composition">

      <p>
      The composition model is the essential fabric that ties together the 
      Merlin model-drive architecture.
      </p>

      <subsection name="Aspects">

      <table>
        <tr>
          <th>Feature</th><th>Description</th>
        </tr>
        <tr>
          <td>Model Integration</td>
          <td>
          Avalon Composition ties together component and underlying
          <a href="meta.html">component type model</a>, component and 
          container deployment directives, and the <a href="activation.html">
          runtime environment</a>.
          </td>
        </tr>
        <tr>
          <td>Model Driven</td>
          <td>
          The <a href="/api/org/apache/avalon/composition/model/package-summary.html">
          composition model API</a> provides support for dynamic management of the 
          containment model - enabling full model-driven control. 
          </td>
        </tr>
        <tr>
          <td>Context Management</td>
          <td>
          The composition package provides comprehensive support for the defintion
          of domain specific context handling - eliminating dependency on classic 
          Avalon deployment solutions.  Context entry handling supports custom object
          creation patterns and multiple context entry creation semantics.
          </td>
        </tr>
        <tr>
          <td>Configuration Management</td>
          <td>
          The multi-tired configuration model covering static type based defaults,
          packaged configuration profiles, explicit deployment configurations, and 
          overridding configurations.
          </td>
        </tr>
        <tr>
          <td>Dependency Management</td>
          <td>
          Support for automatic assembly, assembly directive overrides, and plugabble 
          candidate selection semantics.
          </td>
        </tr>
        <tr>
          <td>Classloader Management</td>
          <td>
          Leveraging the <a href="repository.html">Avalon Repository</a> resource 
          management facilities, the composition package provides support for 
          logical artifacts that are independent of a particular physical url, 
          including system and application cache management
          </td>
        </tr>
      </table>
      </subsection>

    </section>

  </body>

</document>


