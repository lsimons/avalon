<?xml version="1.0"?>

<!-- 
 Copyright 2004 Apache Software Foundation
 Licensed  under the  Apache License,  Version 2.0  (the "License");
 you may not use  this file  except in  compliance with the License.
 You may obtain a copy of the License at 
 
   http://www.apache.org/licenses/LICENSE-2.0
 
 Unless required by applicable law or agreed to in writing, software
 distributed  under the  License is distributed on an "AS IS" BASIS,
 WITHOUT  WARRANTIES OR CONDITIONS  OF ANY KIND, either  express  or
 implied.
 
 See the License for the specific language governing permissions and
 limitations under the License.
-->

<document>

  <properties>
    <author email="dev@avalon.apache.org">Avalon Documentation Team</author>
    <title>Merlin Runtime</title>
  </properties> 

  <body>
    <section name="Resource Include Directive">

      <subsection name="Description">
<p>
The defintion of the block to include will be resolved from the jar file referenced by the resource directive.  The jar file shall be assumed to be a packaged block containing a block defintion under the path BLOCK-INF/block.xml.
</p>
      </subsection>


      <subsection name="Attributes">

        <table>
          <tr><th>Attribute</th><th>Required</th><th>Description</th></tr>
          <tr>
            <td>id</td><td>yes</td>
            <td>
            A resource artifact identifier in form [group]:[artifact-name]. The value
            identifes a jar file containing a block defintition that is resolved 
            relative to a repository established by the Merlin Kernel.
            </td>
          </tr>
          <tr>
            <td>version</td><td>no</td>
            <td>
            Used in conjuction with the id attribute to qualify the artifact version.
            </td>
          </tr>
        </table>
      </subsection>

      <subsection name="Sample XML">
<p>
The following example block.xml demonstrates the inclusion of three blocks within another enclosing block.  In this example, the common shared API (containing service interfaces classes is declared in the containing block classloader).
</p>

<source><![CDATA[
<container name="tutorial">

     <include name="publisher">
       id="tutorial:composition-publisher" version="1.0"/>

</container>
]]></source>

     </subsection>
    </section>
  </body>

</document>



